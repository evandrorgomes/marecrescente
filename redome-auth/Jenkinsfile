pipeline {
    agent any
    
    environment {
      DOCKER_REGISTRY = "sr-vmlxapp26.inca.local:5000" 
      IMAGE_NAME = "${DOCKER_REGISTRY}/redome-auth:${BUILD_NUMBER}_${BUILD_TIMESTAMP}"      
    }
    
    stages {
        stage('install ojdbc in local maven repository') {
	       steps {
	          sh 'mvn install:install-file -Dfile=lib/ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0 -Dpackaging=jar'
	       }             
	    }
    
	    stage('Unit Test') {
	       steps {
	          sh 'mvn test'
	       }             
	    }
	    stage('Build Project') {
	       steps {
	          sh 'mvn -f pom.xml package -Dmaven.test.skip package'	          
	       }      
	    }
	    stage('Build Image and Push') {	       
	       steps {
	          sh 'docker build -t ${IMAGE_NAME} .'
	          sh 'docker push ${IMAGE_NAME}'	          
	       }
	    }
	    stage('deploy') {
	       steps {
	          withKubeConfig([credentialsId: 'inca-dev']) {
                /**  sh 'kubectl version --insecure-skip-tls-verify' */
                
                sh """ cat <<EOF > deployment.yaml   
apiVersion: v1
kind: Service
metadata:
  name: redome-auth-svc
  namespace: hml
spec:
  type: NodePort
  selector:
    app: redome-auth
    namespace: hml
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redome-auth-deployment
  namespace: hml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redome-auth
      namespace: hml
  template:
    metadata:
      labels:
        app: redome-auth
        namespace: hml
    spec:
       hostname: redome-auth
       subdomain: redome-auth-svc          
       containers:
       - name: redome-auth
         image: $IMAGE_NAME
         env:
         -  name: profile
            value: hml
         resources:
           requests:
             cpu: "100m"
             memory: "768Mi"
           limits:
             cpu: "100m"
             memory: "1536Mi"             
         volumeMounts:
           - mountPath: "/logs"
             name: apilog      
       volumes:
         - name: apilog
           persistentVolumeClaim:
             claimName: inca-pvc
                """
            sh 'kubectl apply --insecure-skip-tls-verify -n hml -f deployment.yaml'
              }
	       }
	    }
	}
	post {
	  always {
	    junit skipPublishingChecks: true, testResults: 'target/surefire-reports/*.xml'
	  }
	}
}


