<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html
    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
    - some best practices
  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker
        <property name="basedir" value="${basedir}"/>
    -->

    <property name="fileExtensions" value="java, properties, xml"/>
    
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    
    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <!-- <module name="FileTabCharacter"/> -->

    <module name="TreeWalker">
		<property name="tabWidth" value="4"/>
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
        	<property name="severity" value="error"/>
        	<property name="scope" value="package"/>
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowMissingThrowsTags" value="false"/>
            <property name="allowMissingReturnTag" value="false"/>
            <property name="minLineCount" value="2"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
        </module>
        <module name="JavadocType">
        	<property name="severity" value="error"/>
        	<property name="scope" value="public"/>
        	<property name="allowUnknownTags" value="false"/>
        	<property name="authorFormat" value="\S"/>
        </module>
        <module name="JavadocStyle">
        	<property name="severity" value="error"/>
        </module>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName">
        	<property name="severity" value="error"/>
        </module>
        <module name="LocalFinalVariableName">
        	<property name="severity" value="error"/>
        </module>
        <module name="MethodName">
        	<property name="severity" value="error"/>
        </module>
        <module name="PackageName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
             value="O nome do Package ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="StaticVariableName">
        	<property name="severity" value="error"/>
        	<property name="format"
              value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>
        <module name="TypeName">
        	<property name="severity" value="error"/>
            <message key="name.invalidPattern"
             value="O nome da Variável ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="MemberName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
             value="O nome da Propriedade ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="ParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
             value="O nome do Parâmetro ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="LocalVariableName">
        	<property name="severity" value="error"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern"
             value="O nome da Variável ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="O nome da Classe ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
        	<property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="O nome do Metódo ''{0}'' deve seguir o seguinte padrão ''{1}''."/>
        </module>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"> <!-- defaults to sun.* packages -->
        	<property name="severity" value="error"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
        	<property name="severity" value="error"/>
            <property name="processJavadoc" value="true"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
        	<property name="tabWidth" value="4"/>
            <property name="max" value="130"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber">
		   <property name="max" value="6"/>
		</module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <!-- <module name="GenericWhitespace"/> 
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>-->

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder">
        	<property name="severity" value="error"/>
        </module>
        <module name="RedundantModifier">
        	<property name="severity" value="error"/>
        </module>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="NeedBraces">
        	<property name="severity" value="error"/>
        </module>
        <module name="LeftCurly">
        	<property name="severity" value="error"/>
        </module>
        <module name="RightCurly">
        	<property name="severity" value="error"/>
        	<property name="option" value="alone"/>
        </module>
        
            <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="AvoidEscapedUnicodeCharacters"/>
        <module name="ArrayTypeStyle">
        	<property name="severity" value="error"/>
        </module>
        <module name="CommentsIndentation">
        	<property name="severity" value="error"/>
        </module>
        <module name="TrailingComment">
        	<property name="severity" value="error"/>
        </module>
		<module name="UpperEll">
        	<property name="severity" value="error"/>
		</module>
    <!-- <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="1"/>
       <property name="message" value="Line has trailing spaces."/>
    </module> -->

    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/> -->

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/> -->

    </module>
	
	 <module name="UniqueProperties">
	 	<property name="severity" value="error"/>
	    <property name="fileExtensions" value="properties" />
	</module>
</module>