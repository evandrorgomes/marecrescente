--Script para armazenar o resultado de workup CINTIA 16/01
CREATE TABLE MODRED.RESULTADO_WORKUP 
(
  REWO_ID NUMBER NOT NULL 
, REWO_DT_CRIACAO TIMESTAMP NOT NULL 
, REWO_DT_ATUALIZACAO TIMESTAMP 
, USUA_ID NUMBER 
, REWO_IN_COLETA_INVIAVEL NUMBER(1) 
, REWO_TX_MOTIVO_INVIABILIDADE VARCHAR2(500) 
, PEWO_ID NUMBER NOT NULL 
, CONSTRAINT PK_REWO PRIMARY KEY 
  (
    REWO_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_REWO_PEWO ON MODRED.RESULTADO_WORKUP (PEWO_ID ASC);

CREATE INDEX IN_FK_REWO_USUA ON MODRED.RESULTADO_WORKUP (USUA_ID ASC);

ALTER TABLE MODRED.RESULTADO_WORKUP
ADD CONSTRAINT FK_REWO_PEWO FOREIGN KEY
(
  PEWO_ID 
)
REFERENCES MODRED.PEDIDO_WORKUP
(
  PEWO_ID 
)
ENABLE;

ALTER TABLE MODRED.RESULTADO_WORKUP
ADD CONSTRAINT FK_REWO_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.RESULTADO_WORKUP IS 'Tabela responsável por armazenar o resultado dos pedidos de workup.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.REWO_ID IS 'Identificador do resultado de workup.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.REWO_DT_CRIACAO IS 'Data de criação do resultado.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.REWO_DT_ATUALIZACAO IS 'Data de atualização.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.USUA_ID IS 'Usuário que efetuou a última atualização do resultado.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.REWO_IN_COLETA_INVIAVEL IS 'Indica se a coleta foi considerada inviável pelo CC.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.REWO_TX_MOTIVO_INVIABILIDADE IS 'Descritivo do motivo que levou o CC a considerar a coleta inviavel.';

COMMENT ON COLUMN MODRED.RESULTADO_WORKUP.PEWO_ID IS 'Identificador do pedido de workup.';

--sequence
CREATE SEQUENCE MODRED.SQ_REWO_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

--auditoria
CREATE TABLE MODRED.RESULTADO_WORKUP_AUD 
(
  REWO_ID NUMBER(19, 0) NOT NULL 
, AUDI_ID NUMBER(19, 0) NOT NULL 
, AUDI_TX_TIPO NUMBER(3, 0) 
, REWO_DT_CRIACAO TIMESTAMP  
, REWO_DT_ATUALIZACAO TIMESTAMP 
, USUA_ID NUMBER(19, 0) 
, REWO_IN_COLETA_INVIAVEL NUMBER(1) 
, REWO_TX_MOTIVO_INVIABILIDADE VARCHAR2(500) 
, PEWO_ID NUMBER(19, 0) 
, CONSTRAINT PK_REWA PRIMARY KEY 
  (
    REWO_ID 
  , AUDI_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_REWA ON MODRED.RESULTADO_WORKUP_AUD (REWO_ID ASC, AUDI_ID ASC)
  )
  ENABLE); 


ALTER TABLE MODRED.RESULTADO_WORKUP_AUD
ADD CONSTRAINT FK_REWA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE INDEX IN_FK_REWA_AUDI ON MODRED.RESULTADO_WORKUP_AUD (AUDI_ID);

COMMENT ON TABLE MODRED.RESULTADO_WORKUP_AUD IS 'Tabela de auditoria da tabela RESULTADO_WORKUP.';

CREATE TABLE MODRED.ARQUIVO_RESULTADO_WORKUP 
(
  ARRW_ID NUMBER NOT NULL 
, ARRW_TX_CAMINHO VARCHAR2(263) NOT NULL 
, ARRW_TX_DESCRICAO VARCHAR2(50) 
, ARRW_IN_EXCLUIDO NUMBER(1) DEFAULT 0 NOT NULL 
, REWO_ID NUMBER NOT NULL 
, CONSTRAINT PK_ARRW PRIMARY KEY 
  (
    ARRW_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_ARRW_REWO ON MODRED.ARQUIVO_RESULTADO_WORKUP (REWO_ID ASC);

ALTER TABLE MODRED.ARQUIVO_RESULTADO_WORKUP
ADD CONSTRAINT FK_ARRW_REWO FOREIGN KEY
(
  ARRW_ID 
)
REFERENCES MODRED.RESULTADO_WORKUP
(
  REWO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.ARQUIVO_RESULTADO_WORKUP IS 'Tabela responsável por armazenar os arquivos do resultado de workup.';

COMMENT ON COLUMN MODRED.ARQUIVO_RESULTADO_WORKUP.ARRW_ID IS 'Identificador do arquivo de resultado de workup.';

COMMENT ON COLUMN MODRED.ARQUIVO_RESULTADO_WORKUP.ARRW_TX_CAMINHO IS 'Caminho do arquivo no storage.';

COMMENT ON COLUMN MODRED.ARQUIVO_RESULTADO_WORKUP.ARRW_TX_DESCRICAO IS 'Descrição sobre o arquivo.';

COMMENT ON COLUMN MODRED.ARQUIVO_RESULTADO_WORKUP.ARRW_IN_EXCLUIDO IS 'Indica se o arquivo foi excluído.';

COMMENT ON COLUMN MODRED.ARQUIVO_RESULTADO_WORKUP.REWO_ID IS 'Identificador do resultado de workup.';

--sequence
CREATE SEQUENCE MODRED.SQ_ARRW_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

--auditoria
CREATE TABLE MODRED.ARQUIVO_RESULTADO_WORKUP_AUD 
(
  ARRW_ID NUMBER(19, 0) NOT NULL 
, AUDI_ID NUMBER(19, 0) NOT NULL 
, AUDI_TX_TIPO NUMBER(3, 0) 
, ARRW_TX_CAMINHO VARCHAR2(263)
, ARRW_TX_DESCRICAO VARCHAR2(50) 
, ARRW_IN_EXCLUIDO NUMBER(1) DEFAULT 0  
, REWO_ID NUMBER(19, 0) 
, CONSTRAINT PK_ARWA PRIMARY KEY 
  (
    ARRW_ID 
  , AUDI_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_ARWA ON MODRED.ARQUIVO_RESULTADO_WORKUP_AUD (ARRW_ID ASC, AUDI_ID ASC)
  )
  ENABLE); 


ALTER TABLE MODRED.ARQUIVO_RESULTADO_WORKUP_AUD
ADD CONSTRAINT FK_ARWA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE INDEX IN_FK_ARWA_AUDI ON MODRED.ARQUIVO_RESULTADO_WORKUP_AUD (AUDI_ID);

COMMENT ON TABLE MODRED.ARQUIVO_RESULTADO_WORKUP_AUD IS 'Tabela de auditoria da tabela ARQUIVO_RESULTADO_WORKUP.';

--FIM

--Script para a funcionalidade de cadastrar resultado de workup Cintia 16/01

ALTER TABLE MODRED.USUARIO  
MODIFY (USUA_TX_USERNAME VARCHAR2(50 BYTE) );

CREATE TABLE MODRED.USUARIO_CENTRO_TRANSPLANTE 
(
  USUA_ID NUMBER NOT NULL 
, CETR_ID NUMBER NOT NULL 
, CONSTRAINT PK_USCT PRIMARY KEY 
  (
    USUA_ID 
  , CETR_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_USCT ON MODRED.USUARIO_CENTRO_TRANSPLANTE (USUA_ID ASC, CETR_ID ASC)
  )
  ENABLE); 

COMMENT ON TABLE MODRED.USUARIO_CENTRO_TRANSPLANTE IS 'Tabela responsável por associar usuários a centro de transplantes.';

COMMENT ON COLUMN MODRED.USUARIO_CENTRO_TRANSPLANTE.USUA_ID IS 'Identificador do usuário';

COMMENT ON COLUMN MODRED.USUARIO_CENTRO_TRANSPLANTE.CETR_ID IS 'Identificador centro de transplante.';


INSERT INTO "MODRED"."PERFIL" (PERF_ID, PERF_TX_DESCRICAO) VALUES ('11', 'CADASTRADOR_RESULTADO_WORKUP');
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO) VALUES ('11', 'CADASTRADOR DE RESULTADO WORKUP', 'CADASTRADOR_RESULTADO_WORKUP', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', '1');
INSERT INTO MODRED.USUARIO_PERFIL (USUA_ID,PERF_ID) values (11,11);

INSERT INTO MODRED.USUARIO_CENTRO_TRANSPLANTE(USUA_ID, CETR_ID) SELECT 11, CT.CETR_ID FROM MODRED.CENTRO_TRANSPLANTE CT, FUNCAO_CENTRO_TRANSPLANTE FCT WHERE CT.CETR_ID = FCT.CETR_ID AND FCT.FUTR_ID=2;

INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('46', 'CADASTRAR_RESULTADO_WORKUP', 'Permite cadastrar resultados para pedidos de workup.');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('46', '11', '1');
commit;

INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (33, 'AVALIAR_RESULTADO_WORKUP', 0, null);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (35, 'CADASTRAR_RESULTADO_WORKUP', 0, null);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (34, 'NOTIFICACAO_RESULTADO_WORKUP', 1, 86400);

INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoResultadoWorkup', 'application/pdf');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoResultadoWorkupEmByte', '5242880');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('quantidadeMaximaArquivosResultadoWorkup', '30');
commit;
--FIM


--Queiroz Adicionando usuario

insert into MODRED.usuario (usua_id, usua_tx_nome, usua_tx_username, usua_tx_password, usua_in_ativo, usua_nr_entity_status)
values (10,'TM OFFICE','TM_OFFICE','$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.',1,1);

insert into modred.perfil(perf_id, perf_tx_descricao, perf_nr_entity_status)
values (10,'TM_OFFICE',1);

insert into modred.usuario_perfil (usua_id,perf_id) values (10,10);
insert into modred.usuario_perfil (usua_id,perf_id) values (10,7);
insert into modred.usuario_perfil (usua_id,perf_id) values (10,8);

--Fim 


--Queiroz Adicionando recurso para funcionalidade de contato passivo 
insert into modred.recurso (recu_id,recu_tx_sigla,recu_tx_descricao) values (45, 'CONTATO_PASSIVO', 'Permite consultar os doadores e continuar o processo da fase2 ou 3 do doador.');
insert into modred.permissao (recu_id, perf_id, perm_in_com_restricao) values (45, 10, 0);

-- Fim

--Script para armazenar os pedidos de logistica do pedido de workup Cintia 17/01
CREATE TABLE MODRED.TIPO_PEDIDO_LOGISTICA 
(
  TIPL_ID NUMBER(2) NOT NULL 
, TIPL_TX_DESCRICAO VARCHAR2(20) NOT NULL
, CONSTRAINT PK_TIPL PRIMARY KEY 
  (
    TIPL_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.TIPO_PEDIDO_LOGISTICA IS 'Tabela responsável por armazenar os tipos de pedidos de logistica.';

COMMENT ON COLUMN MODRED.TIPO_PEDIDO_LOGISTICA.TIPL_ID IS 'Identificador do tipo de pedido de logistica.';

COMMENT ON COLUMN MODRED.TIPO_PEDIDO_LOGISTICA.TIPL_TX_DESCRICAO IS 'Descrição do tipo de pedido de logistica.';

CREATE TABLE MODRED.STATUS_PEDIDO_LOGISTICA 
(
  STPL_ID NUMBER(2) NOT NULL 
, STPL_TX_DESCRICAO VARCHAR2(20) NOT NULL
, CONSTRAINT PK_STPL PRIMARY KEY 
  (
    STPL_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.STATUS_PEDIDO_LOGISTICA IS 'Tabela responsável por armazenar os status de pedidos de logistica.';

COMMENT ON COLUMN MODRED.STATUS_PEDIDO_LOGISTICA.STPL_ID IS 'Identificador do status de pedido de logistica.';

COMMENT ON COLUMN MODRED.STATUS_PEDIDO_LOGISTICA.STPL_TX_DESCRICAO IS 'Descrição do status de pedido de logistica.';


CREATE TABLE MODRED.PEDIDO_LOGISTICA 
(
  PELO_ID NUMBER NOT NULL 
, PELO_DT_CRIACAO TIMESTAMP NOT NULL 
, PELO_TX_OBSERVACAO VARCHAR2(500) 
, PELO_DT_ATUALIZACAO TIMESTAMP 
, USUA_ID_RESPONSAVEL NUMBER 
, PEWO_ID NUMBER NOT NULL 
, TIPL_ID NUMBER(2) NOT NULL 
, STPL_ID NUMBER(2) NOT NULL 
, CONSTRAINT PK_PELO PRIMARY KEY 
  (
    PELO_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_PELO_PEWO ON MODRED.PEDIDO_LOGISTICA (PEWO_ID ASC);

CREATE INDEX IN_FK_PELO_STPL ON MODRED.PEDIDO_LOGISTICA (STPL_ID ASC);

CREATE INDEX IN_FK_PELO_TIPL ON MODRED.PEDIDO_LOGISTICA (TIPL_ID ASC);

CREATE INDEX IN_FK_PELO_USUA ON MODRED.PEDIDO_LOGISTICA (USUA_ID_RESPONSAVEL ASC);

ALTER TABLE MODRED.PEDIDO_LOGISTICA
ADD CONSTRAINT FK_PELO_PEWO FOREIGN KEY
(
  PEWO_ID 
)
REFERENCES MODRED.PEDIDO_WORKUP
(
  PEWO_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_LOGISTICA
ADD CONSTRAINT FK_PELO_USUA FOREIGN KEY
(
  USUA_ID_RESPONSAVEL 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_LOGISTICA
ADD CONSTRAINT FK_PELO_STPL FOREIGN KEY
(
  STPL_ID 
)
REFERENCES MODRED.STATUS_PEDIDO_LOGISTICA
(
  STPL_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_LOGISTICA
ADD CONSTRAINT FK_PELO_TIPL FOREIGN KEY
(
  TIPL_ID 
)
REFERENCES MODRED.TIPO_PEDIDO_LOGISTICA
(
  TIPL_ID 
)
ENABLE;


COMMENT ON TABLE MODRED.PEDIDO_LOGISTICA IS 'Tabela responsável por armazenar os pedidos de logistica.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.PELO_DT_CRIACAO IS 'Data da criação do pedido.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.PELO_TX_OBSERVACAO IS 'Texto com observações sobre o pedido d elogistica.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.STPL_ID IS 'Identificador do Status do pedido.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.PELO_DT_ATUALIZACAO IS 'Data de atualização.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.USUA_ID_RESPONSAVEL IS 'Usuário responsável pelo pedido.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.PEWO_ID IS 'Identificador do pedido de workup que originou esse pedido.';

COMMENT ON COLUMN MODRED.PEDIDO_LOGISTICA.TIPL_ID IS 'Identificador do tipo de pedido de logistica.';

--SEQUENCE
CREATE SEQUENCE MODRED.SQ_PELO_ID INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1;

CREATE TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA 
(
  ARVL_ID NUMBER NOT NULL 
, ARVL_TX_COMENTARIO VARCHAR2(100) 
, ARVL_TX_CAMINHO VARCHAR2(263) NOT NULL 
, ARVL_IN_EXCLUIDO NUMBER(1) DEFAULT 0 NOT NULL 
, ARVL_NR_TIPO NUMBER(1) NOT NULL 
, PELO_ID NUMBER NOT NULL 
, CONSTRAINT PK_ARVL PRIMARY KEY 
  (
    ARVL_ID 
  )
  ENABLE 
);

COMMENT ON TABLE ARQUIVO_VOUCHER_LOGISTICA IS 'Tabela responsável por armazenar os dados sobre os vouchers associados a um pedido de logistica.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.ARVL_ID IS 'Identificador do arquivo de voucher.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.ARVL_TX_COMENTARIO IS 'Comentário sobre o voucher.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.ARVL_TX_CAMINHO IS 'Caminho do arquivo no storage.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.ARVL_IN_EXCLUIDO IS 'Indica se o arquivo foi excluido.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.ARVL_NR_TIPO IS 'Indica o tipo do voucher: 1-hospedagem, 2-transporte aereo.';

COMMENT ON COLUMN ARQUIVO_VOUCHER_LOGISTICA.PELO_ID IS 'Identificador do pedido de logistica.';

CREATE INDEX IN_FK_ARVL_PELO ON MODRED.ARQUIVO_VOUCHER_LOGISTICA (PELO_ID ASC);

ALTER TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA
ADD CONSTRAINT FK_ARVL_PELO FOREIGN KEY
(
  PELO_ID 
)
REFERENCES MODRED.PEDIDO_LOGISTICA
(
  PELO_ID 
)
ENABLE;

--SEQUENCE
CREATE SEQUENCE MODRED.SQ_ARVL_ID INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1;

CREATE TABLE MODRED.TRANSPORTE_TERRESTRE 
(
  TRTE_ID NUMBER NOT NULL 
, TRTE_DT_DATA TIMESTAMP NOT NULL 
, TRTE_TX_ORIGEM VARCHAR2(200) NOT NULL 
, TRTE_TX_DESTINO VARCHAR2(200) NOT NULL 
, TRTE_TX_OBJETO_TRANSPORTE VARCHAR2(200) NOT NULL 
, TRTE_DT_CRIACAO TIMESTAMP 
, TRTE_IN_EXCLUIDO NUMBER(1) DEFAULT 0 NOT NULL 
, PELO_ID NUMBER NOT NULL 
, CONSTRAINT PK_TRTE PRIMARY KEY 
  (
    TRTE_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_TRTE ON MODRED.TRANSPORTE_TERRESTRE (TRTE_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_TRTE_PELO ON MODRED.TRANSPORTE_TERRESTRE (PELO_ID ASC);

ALTER TABLE MODRED.TRANSPORTE_TERRESTRE
ADD CONSTRAINT FK_TRTE_PELO FOREIGN KEY
(
  PELO_ID 
)
REFERENCES MODRED.PEDIDO_LOGISTICA
(
  PELO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.TRANSPORTE_TERRESTRE IS 'Tabela responsável por armazenar as solicitações de transporte terreste efetuadas em um pedido de logistica.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_DT_DATA IS 'Data/hora em que o transporte deverá ocorrer.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_TX_ORIGEM IS 'Origem do objeto a ser transportado.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_TX_DESTINO IS 'Destino do objeto a ser transportado.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_TX_OBJETO_TRANSPORTE IS 'Informações sobre o objeto ou pessoa que deverá ser transportada.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_DT_CRIACAO IS 'Data de criação.';

COMMENT ON COLUMN MODRED.TRANSPORTE_TERRESTRE.TRTE_IN_EXCLUIDO IS 'Indica se foi excluido.';

COMMENT ON COLUMN TRANSPORTE_TERRESTRE.PELO_ID IS 'Identificador de pedido de coleta.';

--SEQUENCE
CREATE SEQUENCE MODRED.SQ_TRTE_ID INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1;

--DEMAIS
INSERT INTO MODRED.PERFIL (PERF_ID, PERF_TX_DESCRICAO, PERF_NR_ENTITY_STATUS) VALUES (12, 'ANALISTA_LOGISTICA', 1);

INSERT INTO MODRED.USUARIO (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_NR_ENTITY_STATUS)
VALUES (12, 'ANALISTA LOGÍSTICA', 'ANALISTA_LOGISTICA', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', 1, 1);

INSERT INTO MODRED.USUARIO_PERFIL (USUA_ID, PERF_ID) VALUES (12, 12);

INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO)
VALUES (47, 'EFETUAR_LOGISTICA', 'Permite efetuar pedidos de logística.');

INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (47, 12, 0);

INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (36, 'PEDIDO_LOGISTICA_WORKUP', 0, null);

INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoPedidoLogistica', 'application/pdf');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoPedidoLogisticaEmByte', '5242880');
COMMIT;

--FIM

--Queiroz criando recurso de consultar doador
update MODRED.perfil set perf_tx_descricao = 'CONTATO_PASSIVO' WHERE PERF_ID = 10;
update MODRED.USUARIO set USUA_TX_NOME = 'CONTATO_PASSIVO', USUA_TX_USERNAME = 'CONTATO_PASSIVO' WHERE USUA_ID = 10;
insert into modred.recurso (recu_id,recu_tx_sigla,recu_tx_descricao) values (48, 'CONSULTAR_DOADOR', 'Permite consultar os doadores .');
insert into modred.permissao (recu_id, perf_id, perm_in_com_restricao) values (48, 10, 0);
--Fim

--ajustes nos permissões dos perfis de CONTATO_FASE_2 E CONTATO_FASE_3
DELETE MODRED.PERMISSAO WHERE RECU_ID IN(8,26) AND PERF_ID IN (7,8);
INSERT INTO MODRED.PERMISSAO(RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES(37,7,0);
DELETE MODRED.PERMISSAO WHERE RECU_ID IN(8,26) AND PERF_ID=8;
DELETE MODRED.PERMISSAO WHERE RECU_ID=44 AND PERF_ID=1;
DELETE MODRED.PERMISSAO WHERE RECU_ID=36;
DELETE FROM MODRED.MOTIVO_STATUS_DOADOR_RECURSO WHERE RECU_ID=36;
DELETE MODRED.RECURSO WHERE RECU_ID=36;
--FIM

--ajuste na funcionalidade de pedido de workup

--alteracao na tabela PEDIDO_WORKUP
ALTER TABLE MODRED.PEDIDO_WORKUP 
ADD (PEWO_DT_INICIO_COLETA DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP 
ADD (PEWO_DT_INICIO_WORKUP DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP 
ADD (PEWO_DT_FINAL_WORKUP DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP RENAME COLUMN PEWO_DT_COLETA TO PEWO_DT_FINAL_COLETA;

ALTER TABLE MODRED.PEDIDO_WORKUP RENAME COLUMN PEWO_DT_RESULTADO_WORKUP TO PEWO_DT_LIMITE_WORKUP;

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_DT_FINAL_COLETA IS 'Data final da coleta, quando o material estará disponível.';

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_DT_LIMITE_WORKUP IS 'Data limite para entregado resultado de workup';

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.USUA_ID IS 'Usuário responsável pelo workup.';

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_DT_INICIO_COLETA IS 'Data em que o procedimento de coleta será iniciado.';

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_DT_INICIO_WORKUP IS 'Data de inicio da realização dos exames de workup.';

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_DT_FINAL_WORKUP IS 'Data final da realização dos exames de workup.';

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD 
ADD (PEWO_DT_INICIO_COLETA DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD 
ADD (PEWO_DT_INICIO_WORKUP DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD 
ADD (PEWO_DT_FINAL_WORKUP DATE );

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD RENAME COLUMN PEWO_DT_COLETA TO PEWO_DT_FINAL_COLETA;

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD RENAME COLUMN PEWO_DT_RESULTADO_WORKUP TO PEWO_DT_LIMITE_WORKUP;

--alteracao na tabela DISPONIBILIDADE
ALTER TABLE MODRED.DISPONIBILIDADE 
ADD (DISP_DT_INICIO_COLETA DATE );

ALTER TABLE MODRED.DISPONIBILIDADE 
ADD (DISP_DT_INICIO_WORKUP DATE );

ALTER TABLE MODRED.DISPONIBILIDADE 
ADD (DISP_DT_FINAL_WORKUP DATE );

ALTER TABLE MODRED.DISPONIBILIDADE RENAME COLUMN DISP_DT_COLETA TO DISP_DT_FINAL_COLETA;

ALTER TABLE MODRED.DISPONIBILIDADE RENAME COLUMN DISP_DT_RESULTADO_WORKUP TO DISP_DT_LIMITE_WORKUP;

COMMENT ON COLUMN MODRED.DISPONIBILIDADE.DISP_DT_FINAL_COLETA IS 'Data final da coleta, quando o material estará disponível.';

COMMENT ON COLUMN MODRED.DISPONIBILIDADE.DISP_DT_LIMITE_WORKUP IS 'Data limite para entregado resultado de workup';

COMMENT ON COLUMN MODRED.DISPONIBILIDADE.DISP_DT_INICIO_COLETA IS 'Data em que o procedimento de coleta será iniciado.';

COMMENT ON COLUMN MODRED.DISPONIBILIDADE.DISP_DT_INICIO_WORKUP IS 'Data de inicio da realização dos exames de workup.';

COMMENT ON COLUMN MODRED.DISPONIBILIDADE.DISP_DT_FINAL_WORKUP IS 'Data final da realização dos exames de workup.';

ALTER TABLE MODRED.DISPONIBILIDADE_AUD 
ADD (DISP_DT_INICIO_COLETA DATE );

ALTER TABLE MODRED.DISPONIBILIDADE_AUD 
ADD (DISP_DT_INICIO_WORKUP DATE );

ALTER TABLE MODRED.DISPONIBILIDADE_AUD 
ADD (DISP_DT_FINAL_WORKUP DATE );

ALTER TABLE MODRED.DISPONIBILIDADE_AUD RENAME COLUMN DISP_DT_COLETA TO DISP_DT_FINAL_COLETA;

ALTER TABLE MODRED.DISPONIBILIDADE_AUD RENAME COLUMN DISP_DT_RESULTADO_WORKUP TO DISP_DT_LIMITE_WORKUP;

--FIM

--Adicionando propriedade na tabela PEDIDO_WORKUP
ALTER TABLE MODRED.PEDIDO_WORKUP 
ADD (PEWO_IN_NECESSITA_LOGISTICA NUMBER(1) );

ALTER TABLE MODRED.PEDIDO_WORKUP_AUD 
ADD (PEWO_IN_NECESSITA_LOGISTICA NUMBER(1) );

COMMENT ON COLUMN MODRED.PEDIDO_WORKUP.PEWO_IN_NECESSITA_LOGISTICA IS 'Indica se necessita de logistica para o doador.';
--fim

-- tipos de logistica
INSERT INTO MODRED.TIPO_PEDIDO_LOGISTICA (TIPL_ID, TIPL_TX_DESCRICAO) VALUES (1, 'DOADOR');
INSERT INTO MODRED.TIPO_PEDIDO_LOGISTICA (TIPL_ID, TIPL_TX_DESCRICAO) VALUES (2, 'MATERIAL');
COMMIT;
-- status de logistica
INSERT INTO MODRED.STATUS_PEDIDO_LOGISTICA (STPL_ID, STPL_TX_DESCRICAO) VALUES (1, 'ABERTO');
INSERT INTO MODRED.STATUS_PEDIDO_LOGISTICA (STPL_ID, STPL_TX_DESCRICAO) VALUES (2, 'FECHADO');
COMMIT;

--Renomeando coluna em PEDIDO_WORKUP
ALTER TABLE MODRED.PEDIDO_WORKUP RENAME COLUMN PEWO_IN_NECESSITA_LOGISTICA TO PEWO_IN_LOGISTICA_DOADOR;
ALTER TABLE MODRED.PEDIDO_WORKUP_AUD RENAME COLUMN PEWO_IN_NECESSITA_LOGISTICA TO PEWO_IN_LOGISTICA_DOADOR;
--FIM


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('49', 'CONSULTAR_RESULTADO_WORKUP', 'Permite consultar resultado de Workup');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID) VALUES ('49', '11');

--FIM


--Queiroz Adicionando para o Recurso de Contato_Passivo os motivos de inativação
insert into MODRED.MOTIVO_STATUS_DOADOR_RECURSO (MOSD_ID,RECU_ID) VALUES (1, 45);
insert into MODRED.MOTIVO_STATUS_DOADOR_RECURSO (MOSD_ID,RECU_ID) VALUES (2, 45);
insert into MODRED.MOTIVO_STATUS_DOADOR_RECURSO (MOSD_ID,RECU_ID) VALUES (3, 45);
insert into MODRED.MOTIVO_STATUS_DOADOR_RECURSO (MOSD_ID,RECU_ID) VALUES (5, 45);
insert into MODRED.MOTIVO_STATUS_DOADOR_RECURSO (MOSD_ID,RECU_ID) VALUES (6, 45);
--Fim

--Auditoria para pedido de logistica
-- PEDIDO_LOGISTICA_AUDITORIA
CREATE TABLE MODRED.PEDIDO_LOGISTICA_AUD
(
  PELO_ID NUMBER NOT NULL 
, AUDI_ID NUMBER(19, 0) NOT NULL 
, AUDI_TX_TIPO NUMBER(3, 0) 
, PELO_DT_CRIACAO TIMESTAMP NOT NULL 
, PELO_TX_OBSERVACAO VARCHAR2(500) 
, PELO_DT_ATUALIZACAO TIMESTAMP 
, USUA_ID_RESPONSAVEL NUMBER 
, PEWO_ID NUMBER NOT NULL 
, TIPL_ID NUMBER(2) NOT NULL 
, STPL_ID NUMBER(2) NOT NULL 
, CONSTRAINT PK_PELA PRIMARY KEY (
    PELO_ID, AUDI_ID
  ) ENABLE 
);

ALTER TABLE MODRED.PEDIDO_LOGISTICA_AUD
ADD CONSTRAINT FK_PELA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE INDEX IN_FK_PELA_AUDI ON MODRED.PEDIDO_LOGISTICA_AUD (AUDI_ID);

COMMENT ON TABLE MODRED.PEDIDO_LOGISTICA_AUD IS 'Tabela de auditoria da tabela PEDIDO_LOGISTICA.';

CREATE TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD 
(
  ARVL_ID NUMBER(19, 0) NOT NULL 
, AUDI_ID NUMBER(19, 0) NOT NULL 
, AUDI_TX_TIPO NUMBER(3, 0) 
, ARVL_TX_CAMINHO VARCHAR2(255 CHAR) 
, ARVL_TX_COMENTARIO VARCHAR2(255 CHAR) 
, TRTE_DT_DATA TIMESTAMP(6) 
, TRTE_IN_EXCLUIDO NUMBER(1, 0) 
, ARVL_NR_TIPO NUMBER(10, 0) 
, PELO_ID NUMBER(19, 0) 
, CONSTRAINT PK_AVLA PRIMARY KEY 
  (
    ARVL_ID 
  , AUDI_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_AVLA ON MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD (ARVL_ID ASC, AUDI_ID ASC)
  )
  ENABLE 
);

ALTER TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD
ADD CONSTRAINT FK_AVLA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE INDEX IN_FK_AVLA_AUDI ON MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD (AUDI_ID);

COMMENT ON TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD IS 'Tabela de auditoria da tabela ARQUIVO_VOUCHER_LOGISTICA.';


CREATE TABLE MODRED.TRANSPORTE_TERRESTRE_AUD 
(
  TRTE_ID NUMBER(19, 0) NOT NULL 
, AUDI_ID NUMBER(19, 0) NOT NULL 
, AUDI_TX_TIPO NUMBER(3, 0) 
, TRTE_DT_CRIACAO TIMESTAMP(6) 
, TRTE_DT_DATA TIMESTAMP(6) 
, TRTE_TX_DESTINO VARCHAR2(255 CHAR) 
, TRTE_IN_EXCLUIDO NUMBER(1, 0) 
, TRTE_TX_OBJETO_TRANSPORTE VARCHAR2(255 CHAR) 
, TRTE_TX_ORIGEM VARCHAR2(255 CHAR) 
, PELO_ID NUMBER(19, 0) 
, CONSTRAINT PK_TRTA PRIMARY KEY 
  (
    TRTE_ID 
  , AUDI_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX PK_TRTA ON MODRED.TRANSPORTE_TERRESTRE_AUD (TRTE_ID ASC, AUDI_ID ASC)
  )
  ENABLE 
);

ALTER TABLE MODRED.TRANSPORTE_TERRESTRE_AUD
ADD CONSTRAINT FK_TRTA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE INDEX IN_FK_TRTA_AUDI ON MODRED.TRANSPORTE_TERRESTRE_AUD (AUDI_ID);

COMMENT ON TABLE MODRED.TRANSPORTE_TERRESTRE_AUD IS 'Tabela de auditoria da tabela TRANSPORTE_TERRESTRE.';
--FIM

--Queiroz adicionando RECURSO de avaliação de resultado de workup
insert into modred.recurso (recu_id, recu_tx_sigla, recu_tx_descricao) values (50,'AVALIAR_RESULTADO_WORKUP','Permite avaliar os resultados de exame de workup');
INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (50,1,0);
commit;
--FIM


ALTER TABLE MODRED.ARQUIVO_RESULTADO_WORKUP 
DROP CONSTRAINT FK_ARRW_REWO;

ALTER TABLE MODRED.ARQUIVO_RESULTADO_WORKUP
ADD CONSTRAINT FK_ARRW_REWO FOREIGN KEY
(
  REWO_ID 
)
REFERENCES MODRED.RESULTADO_WORKUP
(
  REWO_ID 
)
ENABLE;

-- Script para avaliação de resultado de workup Cintia 23/01
CREATE TABLE MODRED.AVALIACAO_RESULTADO_WORKUP 
(
  AVRW_ID NUMBER NOT NULL 
, AVRW_DT_CRIACAO TIMESTAMP NOT NULL 
, AVRW_DT_ATUALIZACAO TIMESTAMP 
, USUA_ID_RESPONSAVEL NUMBER 
, AVRW_IN_SOLICITA_COLETA NUMBER(1) 
, AVRW_TX_JUSTIFICATIVA VARCHAR2(500) 
, REWO_ID NUMBER NOT NULL 
, CONSTRAINT PK_AVRW PRIMARY KEY 
  (
    AVRW_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_AVRW_REWO ON MODRED.AVALIACAO_RESULTADO_WORKUP (REWO_ID ASC);

CREATE INDEX IN_FK_AVRW_USUA ON MODRED.AVALIACAO_RESULTADO_WORKUP (USUA_ID_RESPONSAVEL ASC);

ALTER TABLE MODRED.AVALIACAO_RESULTADO_WORKUP
ADD CONSTRAINT FK_AVRW_REWO FOREIGN KEY
(
  REWO_ID 
)
REFERENCES MODRED.RESULTADO_WORKUP
(
    REWO_ID 
 
)
ENABLE;

ALTER TABLE MODRED.AVALIACAO_RESULTADO_WORKUP
ADD CONSTRAINT FK_AVRW_USUA FOREIGN KEY
(
  USUA_ID_RESPONSAVEL 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.AVALIACAO_RESULTADO_WORKUP IS 'Tabela responsável por armazenar a avaliação de um resultado de workup.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.AVRW_ID IS 'Identificador da avaliação do resultado.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.AVRW_DT_CRIACAO IS 'Data de criação da avaliação.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.AVRW_DT_ATUALIZACAO IS 'Data de atualização.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.USUA_ID_RESPONSAVEL IS 'Usuário responsável pela avaliação.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.AVRW_IN_SOLICITA_COLETA IS 'Indica se a coleta foi solicitada.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.AVRW_TX_JUSTIFICATIVA IS 'Justificativa para solicitação ou descarte de coleta.';

COMMENT ON COLUMN MODRED.AVALIACAO_RESULTADO_WORKUP.REWO_ID IS 'Identificador do resultado de workup.';

--sequence
CREATE SEQUENCE MODRED.SQ_AVRW_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE TABLE MODRED.PEDIDO_ADICIONAL_WORKUP 
(
  PEAW_ID NUMBER NOT NULL 
, PEAW_TX_DESCRICAO VARCHAR2(200) NOT NULL 
, PEAW_DT_CRIACAO TIMESTAMP(6) NOT NULL
, AVRW_ID NUMBER NOT NULL 
, CONSTRAINT PK_PEAW PRIMARY KEY 
  (
    PEAW_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_PEAW_AVRW ON PEDIDO_ADICIONAL_WORKUP (AVRW_ID ASC);

ALTER TABLE PEDIDO_ADICIONAL_WORKUP
ADD CONSTRAINT FK_PEAW_AVRW FOREIGN KEY
(
  AVRW_ID 
)
REFERENCES MODRED.AVALIACAO_RESULTADO_WORKUP
(
  AVRW_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PEDIDO_ADICIONAL_WORKUP IS 'Tabela de pedidos adicionais da avaliação do resultado de workup.';

COMMENT ON COLUMN MODRED.PEDIDO_ADICIONAL_WORKUP.PEAW_ID IS 'Identificador do pedido adicional de workup.';

COMMENT ON COLUMN MODRED.PEDIDO_ADICIONAL_WORKUP.PEAW_TX_DESCRICAO IS 'Descrição do pedido adicional.';

COMMENT ON COLUMN MODRED.PEDIDO_ADICIONAL_WORKUP.PEAW_DT_CRIACAO IS 'Data da criação do pedido adicional.';

COMMENT ON COLUMN MODRED.PEDIDO_ADICIONAL_WORKUP.AVRW_ID IS 'Identificador da avaliação de resultado de workup.';

--sequence
CREATE SEQUENCE MODRED.SQ_PEAW_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE TABLE MODRED.RESPOSTA_PEDIDO_ADICIONAL 
(
  REPA_ID NUMBER NOT NULL 
, USUA_ID NUMBER NOT NULL 
, REPA_DT_DATA TIMESTAMP(6) NOT NULL 
, REPA_TX_RESPOSTA VARCHAR2(200 BYTE) NOT NULL
, ARRW_ID NUMBER 
, PEAW_ID NUMBER NOT NULL
, CONSTRAINT PK_REPA PRIMARY KEY 
  (
    REPA_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_REPA_ARRW ON MODRED.RESPOSTA_PEDIDO_ADICIONAL (ARRW_ID ASC); 

CREATE INDEX IN_FK_REPA_PEAW ON MODRED.RESPOSTA_PEDIDO_ADICIONAL (PEAW_ID ASC);


ALTER TABLE MODRED.RESPOSTA_PEDIDO_ADICIONAL
ADD CONSTRAINT FK_REPA_ARRW FOREIGN KEY
(
  ARRW_ID 
)
REFERENCES MODRED.ARQUIVO_RESULTADO_WORKUP
(
  ARRW_ID 
)
ENABLE;

ALTER TABLE MODRED.RESPOSTA_PEDIDO_ADICIONAL
ADD CONSTRAINT FK_REPA_PEAW FOREIGN KEY
(
  PEAW_ID 
)
REFERENCES MODRED.PEDIDO_ADICIONAL_WORKUP
(
  PEAW_ID 
)
ENABLE;


COMMENT ON TABLE MODRED.RESPOSTA_PEDIDO_ADICIONAL IS 'Mensagens trocadas sobre um pedido adicional de workup.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.REPA_ID IS 'Identificador da resposta a um pedido adicional.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.USUA_ID IS 'Identificador do usuário que respondeu.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.REPA_DT_DATA IS 'Data da resposta.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.REPA_TX_RESPOSTA IS 'Texto da resposta.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.ARRW_ID IS 'Identificador do arquivo de resultado de workup associado a essa resposta.';

COMMENT ON COLUMN MODRED.RESPOSTA_PEDIDO_ADICIONAL.PEAW_ID IS 'Identificador do pedido adicional de workup.';

--sequence
CREATE SEQUENCE MODRED.SQ_REPA_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE TABLE MODRED.STATUS_PEDIDO_COLETA 
(
  STPC_ID NUMBER(2) NOT NULL 
, STPC_TX_DESCRICAO VARCHAR2(20) NOT NULL
, CONSTRAINT PK_STPC PRIMARY KEY 
  (
    STPC_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.STATUS_PEDIDO_COLETA IS 'Tabela responsável por armazenar os status de pedidos de coleta.';

COMMENT ON COLUMN MODRED.STATUS_PEDIDO_COLETA.STPC_ID IS 'Identificador do status de pedido de coleta.';

COMMENT ON COLUMN MODRED.STATUS_PEDIDO_COLETA.STPC_TX_DESCRICAO IS 'Descrição do status de pedido de coleta.';

CREATE TABLE MODRED.PEDIDO_COLETA 
(
  PECL_ID NUMBER NOT NULL
, PECL_DT_CRIACAO TIMESTAMP(6) NOT NULL
, PECL_DT_INICIO_COLETA DATE NOT NULL  
, PECL_DT_FINAL_COLETA DATE NOT NULL
, PECL_IN_LOGISTICA_DOADOR NUMBER(1, 0) 
, PECL_IN_LOGISTICA_MATERIAL NUMBER(1, 0) 
, PECL_DT_ULTIMO_STATUS TIMESTAMP(6) 
, STPC_ID NUMBER(2) NOT NULL
, SOLI_ID NUMBER NOT NULL 
, CETR_ID_COLETA NUMBER NOT NULL
, USUA_ID NUMBER 
, CONSTRAINT PK_PECL PRIMARY KEY 
  (
    PECL_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_PECL_STPC ON MODRED.PEDIDO_COLETA (STPC_ID ASC);

CREATE INDEX IN_FK_PECL_CETR ON MODRED.PEDIDO_COLETA (CETR_ID_COLETA ASC);

CREATE INDEX IN_FK_PECL_USUA ON MODRED.PEDIDO_COLETA (USUA_ID ASC);

CREATE INDEX IN_FK_PECL_SOLI ON MODRED.PEDIDO_COLETA (SOLI_ID ASC);


ALTER TABLE MODRED.PEDIDO_COLETA
ADD CONSTRAINT FK_PECL_STPC FOREIGN KEY
(
  STPC_ID 
)
REFERENCES MODRED.STATUS_PEDIDO_COLETA
(
  STPC_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_COLETA
ADD CONSTRAINT FK_PECL_CETR FOREIGN KEY
(
  CETR_ID_COLETA 
)
REFERENCES MODRED.CENTRO_TRANSPLANTE
(
  CETR_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_COLETA
ADD CONSTRAINT FK_PECL_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_COLETA
ADD CONSTRAINT FK_PECL_SOLI FOREIGN KEY
(
  SOLI_ID 
)
REFERENCES MODRED.SOLICITACAO
(
  SOLI_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PEDIDO_COLETA IS 'Tabela para armazenar os pedidos de coleta.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_ID IS 'Identificador do pedido de coleta.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_DT_CRIACAO IS 'Data de criação do pedido de coleta.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_DT_INICIO_COLETA IS 'Data em que o procedimento de coleta será iniciado.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_DT_FINAL_COLETA IS 'Data final da coleta, quando o material estará disponível.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_IN_LOGISTICA_DOADOR IS 'Indica se necessita de logistica para o doador.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_IN_LOGISTICA_MATERIAL IS 'Indica se necessita de logistica para o material.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.PECL_DT_ULTIMO_STATUS IS 'Data da ultima atualização de status.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.STPC_ID IS 'Identificador para status de pedido coleta.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.SOLI_ID IS 'Identificador de solicitação.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.CETR_ID_COLETA IS 'Centro de transplante responsável pela coleta.';

COMMENT ON COLUMN MODRED.PEDIDO_COLETA.USUA_ID IS 'Usuário responsável pelo pedido de coleta.';

--sequence
CREATE SEQUENCE MODRED.SQ_PECL_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

--Demais scripts
INSERT INTO MODRED.TIPO_SOLICITACAO (tiso_id, tiso_tx_descricao) VALUES (4,'COLETA');

INSERT INTO MODRED.STATUS_PEDIDO_COLETA VALUES (1,'Inicial');

INSERT INTO "MODRED"."PERFIL" (PERF_ID, PERF_TX_DESCRICAO) VALUES ('13', 'MEDICO_REDOME');
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO) VALUES ('13', 'MEDICO REDOME', 'MEDICO_REDOME', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', '1');
INSERT INTO MODRED.USUARIO_PERFIL (USUA_ID,PERF_ID) values (13,13);

INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (37, 'AVALIAR_PEDIDO_COLETA', 0, null);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (38, 'ANALISE_MEDICA_DOADOR_COLETA', 0, null);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (39, 'RESPONDER_PEDIDO_ADICIONAL', 0, null);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO) VALUES (40, 'PEDIDO_LOGISTICA_COLETA', 0, null);
COMMIT;
--FIM

-- AJUSTANDO O NOME DAS COLUNAS NA TABELA ARQUIVO_VOUCHER_LOGISTICA
ALTER TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD
DROP COLUMN TRTE_DT_DATA;

ALTER TABLE MODRED.ARQUIVO_VOUCHER_LOGISTICA_AUD
RENAME COLUMN TRTE_IN_EXCLUIDO TO ARVL_IN_EXCLUIDO;

COMMIT;

-- AUTORIZAÇÃO PARA ANALISTA LOGÍSTICA VISUALIZAR HEADER DOADOR
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('44', '12', '0');


ALTER TABLE MODRED.PEDIDO_LOGISTICA_AUD  
MODIFY (PELO_DT_CRIACAO NULL);

ALTER TABLE MODRED.PEDIDO_LOGISTICA_AUD  
MODIFY (PEWO_ID NULL);

ALTER TABLE MODRED.PEDIDO_LOGISTICA_AUD  
MODIFY (TIPL_ID NULL);

ALTER TABLE MODRED.PEDIDO_LOGISTICA_AUD  
MODIFY (STPL_ID NULL);