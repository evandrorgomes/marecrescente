CREATE TABLE MODRED.ANALISE_MEDICA 
(
  ANME_ID NUMBER NOT NULL 
, PECO_ID NUMBER NOT NULL 
, ANME_DT_CRIACAO TIMESTAMP(6) NOT NULL 
, USUA_ID NUMBER NOT NULL 
, AMNE_IN_PROSSEGUIR NUMBER 
, MOSD_ID NUMBER 
, AMNE_DT_REALIZACAO_ANALISE TIMESTAMP(6) 
, CONSTRAINT PK_ANME PRIMARY KEY 
  (
    ANME_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_ANME ON ANALISE_MEDICA (ANME_ID ASC) 
  )
  ENABLE 
);

ALTER INDEX PK_ANME 
RENAME TO IN_PK_ANME;

CREATE INDEX IN_FK_ANME_MOSD ON MODRED.ANALISE_MEDICA (MOSD_ID);

CREATE INDEX IN_FK_ANME_PECO ON MODRED.ANALISE_MEDICA (PECO_ID);

CREATE INDEX IN_FK_ANME_USU ON MODRED.ANALISE_MEDICA (USUA_ID);

ALTER TABLE MODRED.ANALISE_MEDICA
ADD CONSTRAINT FK_ANME_MOSD FOREIGN KEY
(
  MOSD_ID 
)
REFERENCES MOTIVO_STATUS_DOADOR
(
  MOSD_ID 
)
ENABLE;

ALTER TABLE MODRED.ANALISE_MEDICA
ADD CONSTRAINT FK_ANME_PECO FOREIGN KEY
(
  PECO_ID 
)
REFERENCES PEDIDO_CONTATO
(
  PECO_ID 
)
ENABLE;

ALTER TABLE MODRED.ANALISE_MEDICA
ADD CONSTRAINT FK_ANME_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.ANALISE_MEDICA IS 'Registros de análise médica feitos pelo contato de doador caso este seja um caso específico';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.ANME_ID IS 'Chave primária de análise médica';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.PECO_ID IS 'Referência de pedido de contato';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.ANME_DT_CRIACAO IS 'Data de criação da análise';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.USUA_ID IS 'Referência ao usuário responsável pela análise';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.AMNE_IN_PROSSEGUIR IS 'Resultado se a análise foi aprovada ou não';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.MOSD_ID IS 'Referencia a motivo de inativação de doador';

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.AMN_DT_REALIZACAO_ANALISE IS 'Momento da realização da análise em si';





CREATE TABLE MODRED.EVOLUCAO_DOADOR 
(
  EVDO_ID NUMBER NOT NULL 
, EVDO_TX_DESCRICAO VARCHAR2(4000 BYTE) NOT NULL 
, DOAD_ID NUMBER NOT NULL 
, EVDO_DT_MOMENTO_EVOLUCAO TIMESTAMP NOT NULL 
, USUA_ID NUMBER 
, CONSTRAINT PK_EVDO PRIMARY KEY 
  (
    EVDO_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX EVOLUCAO_DOADOR_PK ON EVOLUCAO_DOADOR (EVDO_ID ASC) 
  )
  ENABLE 
);

ALTER INDEX MODRED.EVOLUCAO_DOADOR_PK 
RENAME TO IN_PK_EVDO_ID;

CREATE INDEX IN_FK_EVDO_DOAD ON MODRED.EVOLUCAO_DOADOR (DOAD_ID);

CREATE INDEX IN_FK_EVDO_USUA ON MODRED.EVOLUCAO_DOADOR (USUA_ID);

ALTER TABLE EVOLUCAO_DOADOR
ADD CONSTRAINT FK_EVDO_DOAD FOREIGN KEY
(
  DOAD_ID 
)
REFERENCES DOADOR
(
  DOAD_ID 
)
ENABLE;

ALTER TABLE MODRED.EVOLUCAO_DOADOR
ADD CONSTRAINT FK_EVDO_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.EVOLUCAO_DOADOR.EVDO_TX_DESCRICAO IS 'Texto descritivo da evolução';

COMMENT ON COLUMN MODRED.EVOLUCAO_DOADOR.DOAD_ID IS 'Referência para o doador';

COMMENT ON COLUMN MODRED.EVOLUCAO_DOADOR.EVDO_DT_MOMENTO_EVOLUCAO IS 'Momento da evolução';

COMMENT ON COLUMN MODRED.VOLUCAO_DOADOR.USUA_ID IS 'Referência para o usuário responsável';

COMMENT ON COLUMN MODRED.EVOLUCAO_DOADOR.EVDO_ID IS 'Chave primártia de evolução de doador';


CREATE SEQUENCE MODRED.SQ_ANME_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE MODRED.SQ_EVDO_ID INCREMENT BY 1 START WITH 1;


ALTER TABLE MODRED.PEDIDO_CONTATO
ADD (PECO_IN_FINALIZACAO_AUTOMATICA NUMBER,
     PECO_DT_FINALIZACAO TIMESTAMP,
     PECO_IN_CONTACTADO NUMBER,
     PECO_IN_CONTACTADO_TERCEIRO NUMBER,
     PECO_NR_ACAO NUMBER,
     MOSD_ID NUMBER,
     PECO_NR_TEMPO_INATIVACAO_TEMP NUMBER);

COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_IN_FINALIZACAO_AUTOMATICA IS 'Informa se o pedido de contato foi finalizado automaticamente por uma rotina interna do sistema';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_DT_FINALIZACAO IS 'Data de finalização do pedido de contato';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_IN_CONTACTADO IS 'Informa se o doador foi contactado ou não foi contactado.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_IN_CONTACTADO_TERCEIRO IS 'Informa se o doador foi contactado pelo próprio doador (0) ou foi contactado por uma terceira pessoa (1).';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_NR_ACAO IS 'Informa a ação que foi tomada. (Prosseguir, Não Prosseguir ou Analise Médica)';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.MOSD_ID IS 'Identificador do motivo para a inativação permanente ou inativação temporaria.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_NR_TEMPO_INATIVACAO_TEMP IS 'Tempo em meses para a inativação  temporária do doador.';


ALTER TABLE MODRED.PEDIDO_CONTATO
ADD CONSTRAINT FK_PECO_MOSD FOREIGN KEY
(
  MOSD_ID 
)
REFERENCES MODRED.MOTIVO_STATUS_DOADOR
(
  MOSD_ID 
)
ENABLE;

CREATE INDEX IN_FK_PECO_MOSD ON MODRED.PEDIDO_CONTATO (MOSD_ID ASC);

CREATE TABLE MODRED.PEDIDO_CONTATO_SMS 
(
  PECS_ID NUMBER NOT NULL 
, PECS_DT_CRIACAO TIMESTAMP NOT NULL 
, PECS_IN_ABERTO NUMBER DEFAULT 1 NOT NULL 
, PECO_ID NUMBER 
, COTE_ID NUMBER 
, CONSTRAINT PK_PECS PRIMARY KEY 
  (
    PECS_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_PECS_COTE ON MODRED.PEDIDO_CONTATO_SMS (COTE_ID ASC);

CREATE INDEX MODRED.IN_FK_PECS_PECO ON MODRED.PEDIDO_CONTATO_SMS (PECO_ID ASC);

ALTER TABLE MODRED.PEDIDO_CONTATO_SMS
ADD CONSTRAINT FK_PECS_COTE FOREIGN KEY
(
  COTE_ID 
)
REFERENCES MODRED.CONTATO_TELEFONICO
(
  COTE_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_CONTATO_SMS
ADD CONSTRAINT FK_PECS_PECO FOREIGN KEY
(
  PECO_ID 
)
REFERENCES MODRED.PEDIDO_CONTATO
(
  PECO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PEDIDO_CONTATO_SMS IS 'Pedido de Contato SMS utilizada para guardar o status do envio de sms para um doador ligado a um pediod de contato.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO_SMS.PECS_ID IS 'Identificador Uúnico da tabela.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO_SMS.PECS_DT_CRIACAO IS 'Data de criação do pedido.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO_SMS.PECS_IN_ABERTO IS 'Informa se o pedido está aberto';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO_SMS.PECO_ID IS 'Identificador do pediod de contato.';
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO_SMS.COTE_ID IS 'Identificador do contato telefonico utilizado para enviar o sms.';

CREATE SEQUENCE  "MODRED"."SQ_PECS_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER;

INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES ( 95, 'ANALISE_MEDICA_DOADOR_CONTATO', 0, NULL, 0);
COMMIT;


DROP INDEX MODRED.IN_FK_PECS_COTE;

ALTER TABLE MODRED.PEDIDO_CONTATO_SMS 
DROP CONSTRAINT FK_PECS_COTE;

ALTER TABLE MODRED.PEDIDO_CONTATO_SMS 
DROP COLUMN COTE_ID;


CREATE TABLE MODRED.SMS_ENVIADO 
(
  SMEN_ID NUMBER NOT NULL 
, SMEN_DT_CRIACAO TIMESTAMP NOT NULL 
, PECS_ID NUMBER 
, COTE_ID NUMBER 
, CONSTRAINT PK_SMSE PRIMARY KEY 
  (
    SMEN_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_SMEN_COTE ON MODRED.SMS_ENVIADO (COTE_ID ASC);

CREATE INDEX MODRED.IN_FK_SMEN_PECS ON MODRED.SMS_ENVIADO (PECS_ID ASC);

ALTER TABLE MODRED.SMS_ENVIADO
ADD CONSTRAINT FK_SMEN_COTE FOREIGN KEY
(
  COTE_ID 
)
REFERENCES MODRED.CONTATO_TELEFONICO
(
  COTE_ID 
)
ENABLE;

ALTER TABLE MODRED.SMS_ENVIADO
ADD CONSTRAINT FK_SMEN_PECS FOREIGN KEY
(
  PECS_ID 
)
REFERENCES MODRED.PEDIDO_CONTATO_SMS
(
  PECS_ID 
)
ENABLE;


COMMENT ON TABLE MODRED.SMS_ENVIADO IS 'SMS Lista dos telefones do doador o qual foi enviado sms.';
COMMENT ON COLUMN MODRED.SMS_ENVIADO.SMEN_ID IS 'Identificador Uúnico da tabela.';
COMMENT ON COLUMN MODRED.SMS_ENVIADO.SMEN_DT_CRIACAO IS 'Data de criação do pedido.';
COMMENT ON COLUMN MODRED.SMS_ENVIADO.PECS_ID IS 'Identificador do pedido de contato sms.';
COMMENT ON COLUMN MODRED.SMS_ENVIADO.COTE_ID IS 'Identificador do contato telefonico utilizado para enviar o sms.';


CREATE SEQUENCE  "MODRED"."SQ_SMEN_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER;

ALTER TABLE  MODRED.PEDIDO_CONTATO 
ADD (USUA_ID NUMBER );

CREATE INDEX MODRED.IN_FK_PECO_USUA ON MODRED.PEDIDO_CONTATO (USUA_ID ASC);

ALTER TABLE MODRED.PEDIDO_CONTATO
ADD CONSTRAINT FK_PECO_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.USUA_ID IS 'Identificador do usário que finalizou o pedido de contato.';

--#### ERGOMES - CRIAR REGISTRO - TABELA REGISTRO_TIPO_OCORRENCIA ####
insert into registro_tipo_ocorrencia values (4,'Telefone Inexistente');
commit;
--#####################################################################

INSERT INTO PERFIL VALUES (201, 'INTEGRADOR', 1);
COMMIT;

--#### ERGOMES - INSERINDO REGISTROS - TABELAS (TIPO_TAREFA, CONFIGURACAO, RECURSO, PERMISSAO) ####
INSERT INTO TIPO_TAREFA VALUES (96,'VALIDAR_TENTATIVA_CONTATO_FOLLOW_UP',0,0,0);
INSERT INTO TIPO_TAREFA VALUES (97,'VALIDAR_TENTATIVA_CONTATO_SMS_FOLLOW_UP',0,0,0);
INSERT INTO CONFIGURACAO VALUES ('quantidadeMaximaDiasContatoSmsFase3','6','Tempo maximo para aguardar o retorno do doador depois do envio do SMS.'); 
INSERT INTO RECURSO VALUES (211, 'INTEGRACAO_JOB', 'Permite atualizar os dados do modred atraves da integração com a App JOB.');
INSERT INTO PERMISSAO VALUES (211, 201,0);
COMMIT;
--#################################################################################################


ALTER TABLE MODRED.ANALISE_MEDICA  
MODIFY (USUA_ID NULL);


ALTER TABLE MODRED.FORMULARIO_DOADOR 
ADD (USUA_ID NUMBER );

CREATE INDEX MODRED.IN_FK_FODO_USUA ON MODRED.FORMULARIO_DOADOR (USUA_ID ASC);

ALTER TABLE MODRED.FORMULARIO_DOADOR
ADD CONSTRAINT FK_FODO_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.FORMULARIO_DOADOR.USUA_ID IS 'Identificador do usuário responsável pelo preenchimento do formulário.';

MERGE INTO MODRED.FORMULARIO_DOADOR F
USING MODRED.PEDIDO_CONTATO P
ON (F.PECO_ID = P.PECO_ID AND P.USUA_ID IS NOT NULL)
WHEN MATCHED THEN UPDATE SET F.USUA_ID = P.USUA_ID;

UPDATE MODRED.FORMULARIO_DOADOR SET USUA_ID = (SELECT USUA_ID FROM MODRED.USUARIO WHERE USUA_TX_USERNAME = 'CONTATO_FASE2')
WHERE USUA_ID IS NULL;

COMMIT;

ALTER TABLE MODRED.FORMULARIO_DOADOR  
MODIFY (USUA_ID NOT NULL);


ALTER TABLE MODRED.ANALISE_MEDICA 
ADD (ANME_NR_TEMPO_INATIVACAO_TEMP NUMBER );

ALTER TABLE MODRED.ANALISE_MEDICA RENAME COLUMN AMNE_DT_REALIZACAO_ANALISE TO ANME_DT_REALIZACAO_ANALISE;

COMMENT ON COLUMN MODRED.ANALISE_MEDICA.ANME_NR_TEMPO_INATIVACAO_TEMP IS 'Tempo em meses para a inativação  temporária do doador.';


ALTER TABLE MODRED.EVOLUCAO_DOADOR RENAME COLUMN EVDO_DT_MOMENTO_EVOLUCAO TO EVDO_DT_CRIACAO;

COMMENT ON COLUMN MODRED.EVOLUCAO_DOADOR.EVDO_DT_CRIACAO IS 'Data de criação da evolução';


--############################ ALTERAR ENTITY DO PEDIDO DE CONTATO #############################################
ALTER TABLE MODRED.PEDIDO_CONTATO ADD (DOAD_ID NUMBER NULL);
ALTER TABLE MODRED.PEDIDO_CONTATO ADD CONSTRAINT FK_PECO_DOAD FOREIGN KEY("DOAD_ID") REFERENCES "MODRED"."DOADOR"("DOAD_ID");

ALTER TABLE MODRED.PEDIDO_CONTATO MODIFY (SOLI_ID NULL);
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.DOAD_ID IS 'Identificação do doador.';

ALTER TABLE MODRED.PEDIDO_CONTATO ADD (PECO_IN_PASSIVO NUMBER );
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_IN_PASSIVO IS 'Informa se o pedido de contato é: passivo ou não.';

ALTER TABLE MODRED.PEDIDO_CONTATO ADD (PECO_IN_TIPO_CONTATO NUMBER );
COMMENT ON COLUMN MODRED.PEDIDO_CONTATO.PECO_IN_TIPO_CONTATO IS 'Identificador do tipo de contato: fase2 ou fase 3.';

--###############################################################################################################

ALTER TABLE MODRED.SMS_ENVIADO 
ADD (SMEN_TX_IDENTICACA_GATEWAY_SMS VARCHAR2(20) );

ALTER TABLE MODRED.SMS_ENVIADO 
ADD (SMEN_IN_IDENTICACA_GATEWAY_SMS NUMBER );

COMMENT ON COLUMN MODRED.SMS_ENVIADO.SMEN_TX_IDENTICACA_GATEWAY_SMS IS 'Chave que identifica o sms enviado pela api.,';

COMMENT ON COLUMN MODRED.SMS_ENVIADO.SMEN_IN_IDENTICACA_GATEWAY_SMS IS 'Status do envio.';


--CONFIGURAÇÃO IDADE MAXIMA PARA DOADOR
insert into configuracao (CONF_ID, CONF_TX_VALOR)values ('idadeMaximaDoador', '60');
commit;

--criando usuario unico para REDOME_JOB
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_TX_EMAIL) VALUES ('2321', 'REDOME JOB', 'REDOME_JOB', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', '1', 'TESTE@UOL.COM');
COMMIT;
--adicionando o perfil de CONTATO_FASE_3
INSERT INTO USUARIO_PERFIL (USUA_ID, PERF_ID)VALUES(2321,8);
COMMIT;
--no
insert into motivo_status_doador(MOSD_ID, MOSD_TX_DESCRICAO, stdo_id) VALUES (11, 'Afastado por idade', 4);
COMMIT;


INSERT INTO MODRED.PERFIL (PERF_ID, PERF_TX_DESCRICAO, SIST_ID) VALUES (27, 'CONTATO_SMS', 1);
INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (212, 'CONSULTAR_CONTATO_SMS', 'Permite que o perfil de contato_sms possa consultar os pedidos de contado de sms para o doador nacional.');
INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) 
VALUES (212, 27, 0);
INSERT INTO MODRED.USUARIO (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_TX_EMAIL)
SELECT SQ_USUA_ID.NEXTVAL, 'CONTATO SMS', 'CONTATO_SMS', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', 1, 'contatosms@teste.com' from dual; 
INSERT INTO MODRED.USUARIO_PERFIL (USUA_ID, PERF_ID)
SELECT SQ_USUA_ID.CURRVAL, 27 FROM DUAL;
COMMIT;

ALTER TABLE MODRED.MOTIVO_STATUS_DOADOR 
ADD (MOSD_IN_ACAO_DOADOR_INATIVO NUMBER );

COMMENT ON COLUMN MODRED.MOTIVO_STATUS_DOADOR.MOSD_IN_ACAO_DOADOR_INATIVO IS 'Indica se o doador poderá ser reativado.';


UPDATE MODRED.MOTIVO_STATUS_DOADOR SET MOSD_IN_ACAO_DOADOR_INATIVO = 0
WHERE MOSD_ID IN (2, 3, 4, 6, 10, 5);
UPDATE MODRED.MOTIVO_STATUS_DOADOR SET MOSD_IN_ACAO_DOADOR_INATIVO = 1
WHERE MOSD_ID = 8;
UPDATE MODRED.MOTIVO_STATUS_DOADOR SET MOSD_IN_ACAO_DOADOR_INATIVO = 2
WHERE MOSD_ID IN (1,9, 7, 11);
COMMIT;


CREATE TABLE MODRED.DOADOR_NAO_CONTACTADO 
(
  DONC_ID NUMBER NOT NULL 
, DONC_DT_CRIACAO TIMESTAMP NOT NULL 
, DONC_IN_ABERTO NUMBER NOT NULL 
, DONC_DT_FINALIZACAO TIMESTAMP 
, DOAD_ID NUMBER 
, PECO_ID NUMBER 
, CONSTRAINT PK_DONC PRIMARY KEY 
  (
    DONC_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_DONC_DOAD ON MODRED.DOADOR_NAO_CONTACTADO (DOAD_ID ASC);

CREATE INDEX MODRED.IN_FK_DONC_PECO ON MODRED.DOADOR_NAO_CONTACTADO (PECO_ID ASC);

ALTER TABLE MODRED.DOADOR_NAO_CONTACTADO
ADD CONSTRAINT FK_DONC_DOAD FOREIGN KEY
(
  DOAD_ID 
)
REFERENCES MODRED.DOADOR
(
  DOAD_ID 
)
ENABLE;

ALTER TABLE MODRED.DOADOR_NAO_CONTACTADO
ADD CONSTRAINT FK_DONC_PECO FOREIGN KEY
(
  PECO_ID 
)
REFERENCES MODRED.PEDIDO_CONTATO
(
  PECO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.DOADOR_NAO_CONTACTADO IS 'Tabela utilizada para os doadores que tiveram pedido de contato para fase 3 que não foram contactados  e uqe não possuem telefone para o envio de sms.';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.DONC_ID IS 'Identificação única da tabela.';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.DONC_DT_CRIACAO IS 'Data de criação';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.DONC_IN_ABERTO IS 'Indica se está aberta ou fechada.';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.DONC_DT_FINALIZACAO IS 'Data de finalização';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.DOAD_ID IS 'Identificador do doador.';
COMMENT ON COLUMN MODRED.DOADOR_NAO_CONTACTADO.PECO_ID IS 'Identificador do pedido de contato que original esse registro.';


CREATE SEQUENCE MODRED.SQ_DONC_ID INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999999999999999999999999999999999999999999 MINVALUE 1 ORDER;


INSERT INTO TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR)
VALUES (98, 'DOADOR_NAO_ENCONTRADO', 0, null, 0); 

INSERT INTO TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR)
VALUES (99, 'INATIVAR_DOADOR_NAO_ENCONTRADO', 1, null, 0); 
COMMIT;

INSERT INTO TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR)
VALUES (100, 'VERIFICAR_STATUS_SMS_ENVIADO', 1, 3600, 0); 
COMMIT;


INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO)
VALUES (213, 'ATUALIZAR_STATUS_SMS_ENVIADO', 'Permite atualizar o status do sms enviado para o doador.');
INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO)
VALUES (213, 201, 0);
COMMIT;
