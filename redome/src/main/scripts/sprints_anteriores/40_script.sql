CREATE TABLE MODRED.PERFIL_LOG_EVOLUCAO 
(
  PERF_ID NUMBER NOT NULL 
, LOEV_ID NUMBER NOT NULL 
, CONSTRAINT PK_PELE PRIMARY KEY 
  (
    PERF_ID 
  , LOEV_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_PELE ON PERFIL_LOG_EVOLUCAO (PERF_ID ASC, LOEV_ID ASC)
  )
  ENABLE 
);

CREATE INDEX IN_FK_PELE_LOEV ON PERFIL_LOG_EVOLUCAO (LOEV_ID ASC) ;

CREATE INDEX IN_FK_PELE_PERF ON PERFIL_LOG_EVOLUCAO (PERF_ID ASC) ;

ALTER TABLE PERFIL_LOG_EVOLUCAO
ADD CONSTRAINT FK_PELE_LOEV FOREIGN KEY
(
  LOEV_ID 
)
REFERENCES LOG_EVOLUCAO
(
  LOEV_ID 
)
ENABLE;

ALTER TABLE PERFIL_LOG_EVOLUCAO
ADD CONSTRAINT FK_PELE_PERF FOREIGN KEY
(
  PERF_ID 
)
REFERENCES PERFIL
(
  PERF_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PERFIL_LOG_EVOLUCAO IS 'Armazena a referencia de log e os perfis que não podem ter acesso a uma determinada referencia de log.';

COMMENT ON COLUMN MODRED.PERFIL_LOG_EVOLUCAO.PERF_ID IS 'Referencia de perfil
';

COMMENT ON COLUMN MODRED.PERFIL_LOG_EVOLUCAO.LOEV_ID IS 'Referencia de historico';




CREATE TABLE MODRED.STATUS_PACIENTE 
(
  STPA_ID NUMBER NOT NULL 
, STPA_TX_DESCRICAO VARCHAR2(60 BYTE) NOT NULL 
, STPA_NR_ORDERM NUMBER 
, CONSTRAINT PK_SPAC PRIMARY KEY 
  (
    STPA_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_SPAC ON STATUS_PACIENTE (STPA_ID ASC) 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.STATUS_PACIENTE IS 'Domínio de status de paciente';

COMMENT ON COLUMN MODRED.STATUS_PACIENTE.STPA_ID IS 'Id do status de paciente
';

COMMENT ON COLUMN MODRED.STATUS_PACIENTE.STPA_TX_DESCRICAO IS 'Descrição do status ';


COMMENT ON COLUMN MODRED.STATUS_PACIENTE.STPA_NR_ORDERM IS 'A fim de desempatar possiveis staus que aconteçam simultaneamente este campos deve ser informado para que o que tiver em uma ordem superior será listado primeiro
';



ALTER TABLE MODRED.PACIENTE 
ADD (SPAC_ID NUMBER );

COMMENT ON COLUMN MODRED.PACIENTE.SPAC_ID IS 'Status do paciente';


ALTER TABLE PACIENTE
ADD CONSTRAINT FK_PACI_SPAC FOREIGN KEY
(
  SPAC_ID 
)
REFERENCES STATUS_PACIENTE
(
  STPA_ID 
)
ENABLE;



INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('1', 'Ag. Aprovação Centro Avaliador', '1');
INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('2', 'Ag. Aprovação Câmara Técnica', '2');
INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('3', 'Ag. Confirmação HLA', '3');
INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('4', 'Aprovado', '4');
INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('5', 'Reprovado', '5');
INSERT INTO "MODRED"."STATUS_PACIENTE" (STPA_ID, STPA_TX_DESCRICAO, STPA_NR_ORDERM) VALUES ('6', 'Óbito', '6');

commit;

-- CORRIGINDO O ATRIBUTO DE NOTIFICAÇÃO
ALTER TABLE MODRED.NOTIFICACAO
RENAME COLUMN NOTI_IN_NOTIFICADO TO NOTI_IN_LIDO;


ALTER TABLE MODRED.NOTIFICACAO 
ADD (NOTI_DT_CRIACAO TIMESTAMP );

ALTER TABLE MODRED.NOTIFICACAO 
ADD (USUA_ID NUMBER );

ALTER TABLE MODRED.NOTIFICACAO 
ADD (NOTI_DT_LIDO TIMESTAMP );

ALTER TABLE MODRED.NOTIFICACAO 
ADD (NOTI_ID_PARCEIRO NUMBER );

COMMENT ON COLUMN MODRED.NOTIFICACAO.NOTI_DT_CRIACAO IS 'Data de criação da notificação.';
COMMENT ON COLUMN MODRED.NOTIFICACAO.USUA_ID IS 'Referencia para a tabela de usuário';
COMMENT ON COLUMN MODRED.NOTIFICACAO.NOTI_DT_LIDO IS 'Data em que foi feita a leitura da notificação.';
COMMENT ON COLUMN NOTIFICACAO.NOTI_ID_PARCEIRO IS 'Referência ao parceiro relacionado com o usuário caso exista.';

CREATE INDEX MODRED.IN_FK_NOTI_USUA ON MODRED.NOTIFICACAO (USUA_ID);

ALTER TABLE MODRED.NOTIFICACAO
ADD CONSTRAINT FK_NOTI_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

MERGE INTO MODRED.NOTIFICACAO N
USING (SELECT T.*, P.PACI_NR_RMR FROM MODRED.TAREFA T INNER JOIN PROCESSO P ON P.PROC_ID = T.PROC_ID WHERE T.TITA_ID = 1) X
ON (N.PACI_NR_RMR = X.PACI_NR_RMR AND N.NOTI_ID = X.TARE_NR_RELACAO_ENTIDADE)
WHEN MATCHED THEN UPDATE SET N.NOTI_DT_CRIACAO = X.TARE_DT_CRIACAO,
N.NOTI_DT_LIDO = X.TARE_DT_CRIACAO, N.USUA_ID = X.USUA_ID_RESPONSAVEL,
N.NOTI_ID_PARCEIRO = X.TARE_NR_PARCEIRO;
COMMIT;


-- ATUALIZANDO NOME DO FOLLOW UP DE WORKUP.
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'WORKUP_FOLLOWUP'
WHERE TITA_ID = 31;
COMMIT;

-- ATUALIZANDO NOME DO FOLLOW UP DE RESULTADO DE WORKUP.
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_WORKUP_FOLLOW_UP'
WHERE TITA_ID = 34;
COMMIT;

-- FOLLOW UP DE RESULTADO DE EXAME INTERNACIONAL
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_EXAME_INTERNACIONAL_FOLLOW_UP'
WHERE TITA_ID = 64;
COMMIT;

-- FOLLOW UP DE RESULTADO EXAME CT
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_EXAME_CT_INTERNACIONAL_15DIAS_FOLLOW_UP'
WHERE TITA_ID = 66;
COMMIT;

-- FOLLOW UP DE RESULTADO DE CT INTERNACIONAL
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_EXAME_CT_INTERNACIONAL_7DIAS_FOLLOW_UP'
WHERE TITA_ID = 67;
COMMIT;


-- FOLLOW UP DE RESULTADO IDM INTERNACIONAL 15 DIAS
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_IDM_INTERNACIONAL_15DIAS_FOLLOW_UP'
WHERE TITA_ID = 69;
COMMIT;

-- FOLLOW UP DE RESULTADO IDM INTERNACIONAL 7 DIAS
UPDATE MODRED.TIPO_TAREFA
SET TITA_TX_DESCRICAO = 'RESULTADO_IDM_INTERNACIONAL_7DIAS_FOLLOW_UP'
WHERE TITA_ID = 70;
COMMIT;

-- NOVA CATEGORIA - AVALIAÇÃO DE PEDIDO COLETA
INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('6', 'Avaliação Pedido de Coleta');
COMMIT;

-- NOVA CATEGORIA - MATCH
INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('7', 'Match');
COMMIT;

-- NOVA CATEGORIA - RECEBIMENTO DE COLETA
INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('8', 'Recebimento de Coleta');
COMMIT;COMMIT;


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('132', 'AVALIAR_PACIENTE_CAMARA_TECNICA', 'Permite ao avaliador do redome fazer avaliação de câmara técnica');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('132', '24', '0');
INSERT INTO "MODRED"."USUARIO_PERFIL" (USUA_ID, PERF_ID) VALUES ('543', '24');
commit;

ALTER TABLE MODRED.AVALIACAO_CAMARA_TECNICA
ADD (AVCT_DT_ATUALIZACAO TIMESTAMP );

COMMENT ON COLUMN MODRED.AVALIACAO_CAMARA_TECNICA.AVCT_DT_ATUALIZACAO IS 'Campo de data atulização da avaliação';

INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (133, 'LISTAR_DISPONIBILIDADES', 'Permite ao médico transplantador listar as tarefas para sugerir nova disponibilidade.');
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (15, 133, 1);
COMMIT;

UPDATE MODRED.PERMISSAO SET PERM_IN_COM_RESTRICAO = 1
WHERE PERF_ID = 15 AND RECU_ID = 106;
COMMIT;


INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (134, 'CONSULTAR_AVALIAR_RESULTADO_WORKUP', 'Permite ao médico transplantador listar as tarefas para avaliar os resultados de workup.');
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (15, 134, 1);
COMMIT;


INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('8', '24', '0');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('4', '24', '0');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('5', '24', '0');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoPdfPadraoEmByte', '5242880');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoPdfPadrao', 'application/pdf');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('quantidadeMaximaArquivosCamaraTecnica', '1');
commit;


-- NOVA CATEGORIA - PEDIDO WORKUP
INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('9', 'Pedido Workup');
COMMIT;


INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (135, 'EDITAR_DIAGNOSTICO_PACIENTE', 'Permite ao médico alterar o diagnóstico do paciente.');
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 135, 0);
COMMIT;

INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (136, 'EDITAR_MISMATCH_PACIENTE', 'Permite ao médico alterar o mismatch do paciente.');
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 136, 0);
COMMIT;


ALTER TABLE MODRED.PACIENTE_AUD 
ADD (SPAC_ID NUMBER );

-- NOVO RECURSO / SOLICITAR NOVA BUSCA
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('137', 'SOLICITAR_NOVA_BUSCA_PACIENTE', 'Permite solicitar nova busca para o paciente com busca cancelada.');
COMMIT;

-- PERMISSÃO DO MÉDICO PARA NOVA BUSCA (COM RESTRIÇÃO, DEVE SER O MÉDICO DO PACIENTE).
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('137', '1', '1');
COMMIT;

ALTER TABLE MODRED.EVOLUCAO 
ADD (EVOL_IN_EXAME_ANTICORPO NUMBER );

ALTER TABLE MODRED.EVOLUCAO 
ADD (EVOL_DT_EXAME_ANTICORPO TIMESTAMP );

ALTER TABLE MODRED.EVOLUCAO 
ADD (EVOL_TX_EXAME_ANTICORPO VARCHAR2(255) );

COMMENT ON COLUMN MODRED.EVOLUCAO.EVOL_IN_EXAME_ANTICORPO IS 'Se o paciente realizou ou não o exame de anticorpo (0 para não e 1 para sim)';
COMMENT ON COLUMN MODRED.EVOLUCAO.EVOL_DT_EXAME_ANTICORPO IS 'Data de realização do exame do anticorpo';
COMMENT ON COLUMN MODRED.EVOLUCAO.EVOL_TX_EXAME_ANTICORPO IS 'Texto livre para resultado de exame de anticorpo';

MERGE INTO MODRED.EVOLUCAO EV
USING (SELECT E.EVOL_ID, P.PACI_IN_PESQUISA_ANTICORPO, P.PACI_DT_EXAME_ANTICORPO, P.PACI_TX_RESULTADO_ANTICORPO FROM MODRED.EVOLUCAO E INNER JOIN MODRED.PACIENTE P ON (E.PACI_NR_RMR = P.PACI_NR_RMR)
WHERE E.EVOL_ID IN (SELECT MAX(EVOL_ID) FROM MODRED.EVOLUCAO GROUP BY PACI_NR_RMR)) X
ON (EV.EVOL_ID = X.EVOL_ID)
WHEN MATCHED THEN UPDATE SET EV.EVOL_IN_EXAME_ANTICORPO = X.PACI_IN_PESQUISA_ANTICORPO,
EV.EVOL_DT_EXAME_ANTICORPO = X.PACI_DT_EXAME_ANTICORPO, EV.EVOL_TX_EXAME_ANTICORPO = X.PACI_TX_RESULTADO_ANTICORPO;

UPDATE MODRED.EVOLUCAO SET EVOL_IN_EXAME_ANTICORPO = 0
WHERE EVOL_IN_EXAME_ANTICORPO IS NULL;

ALTER TABLE MODRED.EVOLUCAO  
MODIFY (EVOL_IN_EXAME_ANTICORPO NOT NULL);

ALTER TABLE MODRED.PACIENTE 
DROP COLUMN PACI_IN_PESQUISA_ANTICORPO;

ALTER TABLE MODRED.PACIENTE 
DROP COLUMN PACI_DT_EXAME_ANTICORPO;

ALTER TABLE MODRED.PACIENTE 
DROP COLUMN PACI_TX_RESULTADO_ANTICORPO;

ALTER TABLE MODRED.PACIENTE_AUD 
DROP COLUMN PACI_IN_PESQUISA_ANTICORPO;

ALTER TABLE MODRED.PACIENTE_AUD 
DROP COLUMN PACI_DT_EXAME_ANTICORPO;

ALTER TABLE MODRED.PACIENTE_AUD 
DROP COLUMN PACI_TX_RESULTADO_ANTICORPO;



CREATE TABLE MODRED.HISTORICO_STATUS_PACIENTE 
(
  HISP_ID NUMBER NOT NULL 
, STPA_ID NUMBER NOT NULL 
, HISP_DT_ALTERACAO TIMESTAMP NOT NULL 
, PACI_NR_RMR NUMBER NOT NULL 
, CONSTRAINT PK_HISP_ID PRIMARY KEY 
  (
    HISP_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_HISP ON HISTORICO_STATUS_PACIENTE (HISP_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_HISP_PACI ON HISTORICO_STATUS_PACIENTE (PACI_NR_RMR ASC);

CREATE INDEX IN_FK_HISP_STPA ON HISTORICO_STATUS_PACIENTE (STPA_ID ASC);

ALTER TABLE HISTORICO_STATUS_PACIENTE
ADD CONSTRAINT FK_HISP_PACI FOREIGN KEY
(
  PACI_NR_RMR 
)
REFERENCES PACIENTE
(
  PACI_NR_RMR 
)
ENABLE;

ALTER TABLE HISTORICO_STATUS_PACIENTE
ADD CONSTRAINT FK_HISP_STPA FOREIGN KEY
(
  STPA_ID 
)
REFERENCES STATUS_PACIENTE
(
  STPA_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.HISTORICO_STATUS_PACIENTE IS 'Armazena data de alteração de status de paciente ';

COMMENT ON COLUMN MODRED.HISTORICO_STATUS_PACIENTE.HISP_ID IS 'Identificação de histórico de status de paciente';

COMMENT ON COLUMN MODRED.HISTORICO_STATUS_PACIENTE.STPA_ID IS 'Referência de status de paciente';

COMMENT ON COLUMN MODRED.HISTORICO_STATUS_PACIENTE.HISP_DT_ALTERACAO IS 'Data de alteração do status';

COMMENT ON COLUMN MODRED.HISTORICO_STATUS_PACIENTE.PACI_NR_RMR IS 'Referencia de paciente';



CREATE SEQUENCE MODRED.SQ_HISP_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;


ALTER TABLE STATUS_PACIENTE RENAME COLUMN STPA_NR_ORDERM TO STPA_NR_ORDEM;

ALTER TABLE PACIENTE RENAME COLUMN SPAC_ID TO STPA_ID;
ALTER TABLE PACIENTE_AUD RENAME COLUMN SPAC_ID TO STPA_ID;



-- CLASSE QUE GUARDARÁ A AVALIAÇÃO DA NOVA BUSCA DO PACIENTE
CREATE TABLE MODRED.AVALIACAO_NOVA_BUSCA 
(
  AVNB_ID NUMBER NOT NULL 
, PACI_NR_RMR NUMBER NOT NULL 
, AVNB_TX_STATUS VARCHAR2(30) NOT NULL 
, USUA_ID_AVALIADOR NUMBER 
, AVNB_DT_AVALIADO TIMESTAMP 
, AVNB_TX_JUSTIFICATIVA VARCHAR2(200) NOT NULL 
, CONSTRAINT PK_AVNB PRIMARY KEY (AVNB_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PK_AVNB ON MODRED.AVALIACAO_NOVA_BUSCA (AVNB_ID ASC)
  ) ENABLE 
);

ALTER TABLE MODRED.AVALIACAO_NOVA_BUSCA 
ADD CONSTRAINT FK_AVNB_PACI FOREIGN KEY(PACI_NR_RMR)
REFERENCES MODRED.PACIENTE(PACI_NR_RMR)
ENABLE;

ALTER TABLE MODRED.AVALIACAO_NOVA_BUSCA 
ADD CONSTRAINT FK_AVNB_USUA FOREIGN KEY(USUA_ID_AVALIADOR)
REFERENCES MODRED.USUARIO(USUA_ID)
ENABLE;

COMMENT ON TABLE MODRED.AVALIACAO_NOVA_BUSCA IS 'Armazena informações relativas a avaliação para nova busca do paciente.';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.AVNB_ID IS 'Identificador auto sequencial da tabela.';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.PACI_NR_RMR IS 'Identificador do paciente que deverá ser avaliado pela nova busca.';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.AVNB_TX_STATUS IS 'Status da nova busca (AGUARDANDO_AVALIACAO, APROVADA, REPROVADA).';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.USUA_ID_AVALIADOR IS 'Após ocorrida a avaliação, guarda quem foi o usuário que realizou.';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.AVNB_DT_AVALIADO IS 'Após ocorrida a avaliação, guarda a data que foi realizada.';
COMMENT ON COLUMN MODRED.AVALIACAO_NOVA_BUSCA.AVNB_TX_JUSTIFICATIVA IS 'Após ocorrida a reprovação, guarda a justificativa.';

CREATE SEQUENCE MODRED.SQ_AVNB_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ORDER;

-- TIPO DE TAREFA PARA AVALIAÇÃO DA NOVA BUSCA
INSERT INTO "MODRED"."TIPO_TAREFA" (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES ('87', 'AVALIAR_NOVA_BUSCA', '0', '0');
COMMIT;

-- MODIFICANDO O TAMANHO DO NOME DA CHAVE (ID)
ALTER TABLE MODRED.CONFIGURACAO
MODIFY CONF_ID VARCHAR2(100);

-- NOVA CONFIGURAÇÃO DE TEMPO DE EVOLUCAO ATUALIZADA.
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tempoMaximoParaConsiderarEvolucaoAtualizada', '86400');
COMMIT;

-- CAMPO JUSTIFICATIVA NÃO DEVE SER OBRIGATÓRIO
ALTER TABLE MODRED.AVALIACAO_NOVA_BUSCA  
MODIFY (AVNB_TX_JUSTIFICATIVA NULL);

-- ADICIONANDO CAMPO DATA DE CRIAÇÃO NA AVALIAÇÃO.
ALTER TABLE MODRED.AVALIACAO_NOVA_BUSCA
ADD AVNB_DT_CRIACAO TIMESTAMP;

UPDATE MODRED.AVALIACAO_NOVA_BUSCA
SET AVNB_DT_CRIACAO = SYSDATE;

ALTER TABLE MODRED.AVALIACAO_NOVA_BUSCA
MODIFY AVNB_DT_CRIACAO TIMESTAMP NOT NULL;



-- NOVO PERFIL QUE DEVERÁ AVALIAR A NOVA BUSCA.
INSERT INTO "MODRED"."PERFIL" (PERF_ID, PERF_TX_DESCRICAO, PERF_NR_ENTITY_STATUS) VALUES ('25', 'AVALIADOR_NOVA_BUSCA', '1');
COMMIT;

-- RECURSO PARA AVALIAÇÃO DA NOVA BUSCA DO PACIENTE
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('138', 'AVALIAR_NOVA_BUSCA_PACIENTE', 'Permite avaliar a solicitação de nova busca para o paciente.');
COMMIT;

-- PERMISSÃO PARA O AVALIAR REDOME
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('138', '25', '0');
COMMIT;

-- NOVO USUÁRIO COM PERFIL AVALIADOR NOVA BUSCA
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_NR_ENTITY_STATUS, USUA_TX_EMAIL) 
VALUES ('544', 'AVALIADOR_NOVA_BUSCA', 'AVALIADOR_NOVA_BUSCA', '$2a$11$Gr9XfGZu2jZEXhpcpYVo8u.rilUccJa7xX0AXArwhjDGV5Ra4xom6', '1', '1', 'avaliador_nova_busca@mail.com');

INSERT INTO "MODRED"."USUARIO_PERFIL" (USUA_ID, PERF_ID) VALUES ('544', '25');
COMMIT;

ALTER TABLE MODRED.PACIENTE 
ADD (PACI_NR_TEMPO_TRANSPLANTE NUMBER );

COMMENT ON COLUMN MODRED.PACIENTE.PACI_NR_TEMPO_TRANSPLANTE IS 'Tempo em dias para transplante do paciente.';

ALTER TABLE MODRED.PACIENTE_AUD
ADD (PACI_NR_TEMPO_TRANSPLANTE NUMBER );

INSERT INTO MODRED.CONFIGURACAO (CONF_ID, CONF_TX_VALOR) VALUES ('temposParaTransplanteEmDias', '30,60,90');
COMMIT;

ALTER TABLE CATEGORIA_NOTIFICACAO  
MODIFY (CANO_ID NUMBER(*, 0) );

INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('10', 'Avaliação Nova Busca');
COMMIT;



--script update de status de paciente

--aprovado
update paciente p set STPA_ID = 4 where exists(
select 1 
from busca b where p.paci_nr_rmr = b.paci_nr_rmr 
and (b.STBU_ID = 5 or  b.STBU_ID = 2 or  b.STBU_ID = 4 or  b.STBU_ID = 3) 
) ;

--aguardando aprovacao centro
update paciente p set STPA_ID = 1 where exists(
select 1 
from busca b 
, avaliacao a
where p.paci_nr_rmr = b.paci_nr_rmr 
and p.paci_nr_rmr  = a.paci_nr_rmr
and b.STBU_ID = 1
and (aval_in_resultado is null or aval_in_resultado = 1)
) ;

--aguardando aprovacao centro (sem avaliacao)
update paciente p set STPA_ID = 1 where exists(
select 1 
from busca b 
where p.paci_nr_rmr = b.paci_nr_rmr 
and b.STBU_ID = 1
) ;

--reprovado
update paciente p set STPA_ID = 5 where exists(
select 1 
from busca b 
, avaliacao a
where p.paci_nr_rmr = b.paci_nr_rmr 
and p.paci_nr_rmr  = a.paci_nr_rmr
and b.STBU_ID = 1
and (aval_in_resultado = 0)
) ;


commit;


-- REMOVENDO CENTROS COM FUNÇÃO DE COLETA, AINDA NÃO UTILIZADO.
DELETE FROM MODRED.FUNCAO_CENTRO_TRANSPLANTE
WHERE FUTR_ID = 2;
COMMIT;

-- REMOVENDO ACENTOS DO NOME DOS PERFIS NO BANCO
UPDATE MODRED.PERFIL
SET PERF_TX_DESCRICAO = TRANSLATE(PERF_TX_DESCRICAO,'âàãáÁÂÀÃéêÉÊíÍóôõÓÔÕüúÜÚÇç','AAAAAAAAEEEEIIOOOOOOUUUUCC');
COMMIT;
