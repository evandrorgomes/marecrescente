CREATE TABLE MODRED.STATUS_PEDIDO_IDM 
(
  STPI_ID NUMBER NOT NULL 
, STPI_TX_DESCRICAO VARCHAR2(30) NOT NULL 
, CONSTRAINT PK_STPI PRIMARY KEY 
  (
    STPI_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.STATUS_PEDIDO_IDM IS 'Status do Pedido de IDM.';
COMMENT ON COLUMN MODRED.STATUS_PEDIDO_IDM.STPI_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.STATUS_PEDIDO_IDM.STPI_TX_DESCRICAO IS 'Descrição do status.';

INSERT INTO MODRED.STATUS_PEDIDO_IDM (STPI_ID, STPI_TX_DESCRICAO) VALUES (0, 'AGUARDANDO RESULTADO');
INSERT INTO MODRED.STATUS_PEDIDO_IDM (STPI_ID, STPI_TX_DESCRICAO) VALUES (1, 'RESULTADO CADASTRADO');
INSERT INTO MODRED.STATUS_PEDIDO_IDM (STPI_ID, STPI_TX_DESCRICAO) VALUES (2, 'CANCELADO');
COMMIT;

CREATE TABLE MODRED.PEDIDO_IDM 
(
  PEID_ID NUMBER NOT NULL 
, PEID_DT_CRIACAO TIMESTAMP NOT NULL 
, SOLI_ID NUMBER NOT NULL 
, STPI_ID NUMBER NOT NULL 
, CONSTRAINT PK_PEID PRIMARY KEY 
  (
    PEID_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_PEID_SOLI ON MODRED.PEDIDO_IDM (SOLI_ID);

ALTER TABLE MODRED.PEDIDO_IDM
ADD CONSTRAINT FK_PEID_SOLI FOREIGN KEY
(
  SOLI_ID 
)
REFERENCES MODRED.SOLICITACAO
(
  SOLI_ID 
)
ENABLE;

CREATE INDEX MODRED.IN_FK_PEID_STPI ON MODRED.PEDIDO_IDM (STPI_ID);

ALTER TABLE MODRED.PEDIDO_IDM
ADD CONSTRAINT FK_PEID_STPI FOREIGN KEY
(
  STPI_ID 
)
REFERENCES MODRED.STATUS_PEDIDO_IDM
(
  STPI_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PEDIDO_IDM IS 'Pedido de IDM de um Doador.';
COMMENT ON COLUMN MODRED.PEDIDO_IDM.PEID_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.PEDIDO_IDM.PEID_DT_CRIACAO IS 'Data da criação do pedido.';
COMMENT ON COLUMN MODRED.PEDIDO_IDM.SOLI_ID IS 'Referência para a tabela de solicitação.';
COMMENT ON COLUMN MODRED.PEDIDO_IDM.STPI_ID IS 'Referência para a tabela de status.';

CREATE SEQUENCE MODRED.SQ_PEID_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE ;


CREATE TABLE MODRED.PEDIDO_IDM_AUD 
(
  PEID_ID NUMBER NOT NULL 
, AUDI_ID NUMBER NOT NULL
, AUDI_TX_TIPO NUMBER NOT NULL 
, PEID_DT_CRIACAO TIMESTAMP NULL 
, SOLI_ID NUMBER NULL 
, STPI_ID NUMBER NULL 
, CONSTRAINT PK_PEIA PRIMARY KEY 
  (
    PEID_ID
,   AUDI_ID
  )
  ENABLE 
);

ALTER TABLE MODRED.PEDIDO_IDM_AUD
ADD CONSTRAINT FK_PEIA_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;

CREATE TABLE MODRED.ARQUIVO_PEDIDO_IDM 
(
  ARPI_ID NUMBER NOT NULL 
, ARPI_TX_CAMINHO VARCHAR2(255) NOT NULL 
, PEID_ID NUMBER 
, CONSTRAINT PK_ARPI PRIMARY KEY 
  (
    ARPI_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_ARPI_PEID ON MODRED.ARQUIVO_PEDIDO_IDM (PEID_ID);

ALTER TABLE MODRED.ARQUIVO_PEDIDO_IDM
ADD CONSTRAINT FK_ARPI_PEID FOREIGN KEY
(
  PEID_ID 
)
REFERENCES MODRED.PEDIDO_IDM
(
  PEID_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.ARQUIVO_PEDIDO_IDM IS 'Arquivo do laudo do pedido de idm.';
COMMENT ON COLUMN MODRED.ARQUIVO_PEDIDO_IDM.ARPI_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.ARQUIVO_PEDIDO_IDM.ARPI_TX_CAMINHO IS 'Caminho doa rquivo no storage.';
COMMENT ON COLUMN MODRED.ARQUIVO_PEDIDO_IDM.PEID_ID IS 'Referência para o pedido de idm.';

CREATE SEQUENCE MODRED.SQ_ARPI_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE ;

ALTER TABLE MODRED.TIPO_SOLICITACAO  
MODIFY (TISO_TX_DESCRICAO VARCHAR2(30 BYTE) );

UPDATE MODRED.TIPO_SOLICITACAO SET TISO_TX_DESCRICAO = 'FASE 2 - NACIONAL'
WHERE  TISO_ID = 1;
UPDATE MODRED.TIPO_SOLICITACAO SET TISO_TX_DESCRICAO = 'FASE 3 - NACIONAL'
WHERE  TISO_ID = 2;
INSERT INTO MODRED.TIPO_SOLICITACAO (TISO_ID, TISO_TX_DESCRICAO) VALUES (5, 'FASE 2 - INTERNACIONAL');
INSERT INTO MODRED.TIPO_SOLICITACAO (TISO_ID, TISO_TX_DESCRICAO) VALUES (6, 'FASE 3 - INTERNACIONAL');
COMMIT;

INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (65, 'CADASTRAR_RESULTADO_EXAME_CT_INTERNACIONAL', 0, 3600, 0);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (66, 'NOTIFICAÇÃO_CADASTRAR_RESULTADO_EXAME_CT_INTERNACIONAL_15', 1, 1296000, 0);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (67, 'NOTIFICAÇÃO_CADASTRAR_RESULTADO_EXAME_CT_INTERNACIONAL_7', 1, 604800, 0);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (68, 'CADASTRAR_RESULTADO_EXAME_IDM_INTERNACIONAL', 0, 3600, 0);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (69, 'NOTIFICAÇÃO_CADASTRAR_RESULTADO_IDM_INTERNACIONAL_15', 1, 1296000, 0);
INSERT INTO MODRED.TIPO_TAREFA (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TITA_NR_TEMPO_EXECUCAO, TARE_IN_SOMENTE_AGRUPADOR) 
VALUES (70, 'NOTIFICAÇÃO_CADASTRAR_RESULTADO_IDM_INTERNACIONAL_7', 1, 604800, 0);
COMMIT;

INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (96, 'SOLICITAR_FASE_3_INTERNACIONAL', 'Permite ao usuario solicitar um pedido de exame fase 2 para um doador internacional.');

INSERT INTO PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (96, 5, 0);

UPDATE MODRED.RECURSO SET RECU_TX_SIGLA = 'SOLICITAR_FASE_2_INTERNACIONAL'
WHERE RECU_ID = 94;
COMMIT;

INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('97', 'CANCELAR_PEDIDO_CT', 'Permite o cancelamento de um pedido de exame de CT ');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('97', '5', '0');
commit;


INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR" (MOSD_ID, MOSD_TX_DESCRICAO, STDO_ID) VALUES ('9', 'Indisponível internacional', '4');
INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR" (MOSD_ID, MOSD_TX_DESCRICAO, STDO_ID) VALUES ('10', 'Indisponível temporário internacional', '3');
INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR_RECURSO" (MOSD_ID, RECU_ID) VALUES ('9', '97');
INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR_RECURSO" (MOSD_ID, RECU_ID) VALUES ('10', '97');
commit;


INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES (98, 'CADASTRAR_RESULTADO_PEDIDO_CT', 'Permite cadastrar o resultado do pedido de exame de CT');
INSERT INTO MODRED.PERMISSAO(RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES(98, 5, 0);
commit;

-- CRIA O RECURSO PARA O ANALISTA DE BUSCA CADASTRAR O RESULTADO DO PEDIDO IDM.
INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES (99, 'CADASTRAR_RESULTADO_PEDIDO_IDM', 'Permite cadastrar o resultado do pedido de IDM associado ao CT.');
INSERT INTO MODRED.PERMISSAO(RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES(99, 5, 0);
commit;

UPDATE "MODRED"."RECURSO" SET RECU_TX_SIGLA = 'INATIVAR_DOADOR_INTERNACIONAL', RECU_TX_DESCRICAO = 'Permite inativar doador internacional' WHERE RECU_ID = 97;
commit;


commit;

CREATE TABLE MODRED.TIPO_SERVICO 
(
  TISE_ID NUMBER NOT NULL 
, TISE_TX_SIGLA VARCHAR2(20) 
, TISE_TX_DESCRICAO VARCHAR2(255) NOT NULL 
, CONSTRAINT PK_TISE PRIMARY KEY 
  (
    TISE_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.TIPO_SERVICO IS 'Tipo de Serviço utilizado para cobrança ou pagamernto de invoices.';
COMMENT ON COLUMN MODRED.TIPO_SERVICO.TISE_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.TIPO_SERVICO.TISE_TX_SIGLA IS 'Sigla do tipo de serviço.';
COMMENT ON COLUMN MODRED.TIPO_SERVICO.TISE_TX_DESCRICAO IS 'Descrição do tipo de serviço.';

INSERT INTO MODRED.TIPO_SERVICO (TISE_ID, TISE_TX_SIGLA, TISE_TX_DESCRICAO) VALUES (1, 'AMOSTRA_CT', 'Serviço referente a coleta de amostra para o pedido de exame de CT.'); 
INSERT INTO MODRED.TIPO_SERVICO (TISE_ID, TISE_TX_SIGLA, TISE_TX_DESCRICAO) VALUES (2, 'PEDIDO_EXAME_CT', 'Serviço referente ao pedido de exame de CT.');
INSERT INTO MODRED.TIPO_SERVICO (TISE_ID, TISE_TX_SIGLA, TISE_TX_DESCRICAO) VALUES (3, 'AMOSTRA_IDM', 'Serviço referente a coleta de amostra para o pedido de IDM.'); 
INSERT INTO MODRED.TIPO_SERVICO (TISE_ID, TISE_TX_SIGLA, TISE_TX_DESCRICAO) VALUES (4, 'PEDIDO_IDM', 'Serviço referente ao pedido de IDM.');
COMMIT;

CREATE TABLE MODRED.STATUS_PAGAMENTO 
(
  STPA_ID NUMBER NOT NULL 
, STPA_TX_DESCRICAO VARCHAR2(20) NOT NULL 
, CONSTRAINT PK_STPA PRIMARY KEY 
  (
    STPA_ID 
  )
  ENABLE 
);

COMMENT ON COLUMN MODRED.STATUS_PAGAMENTO.STPA_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.STATUS_PAGAMENTO.STPA_TX_DESCRICAO IS 'Descrição do status de pagamento.';

INSERT INTO MODRED.STATUS_PAGAMENTO (STPA_ID, STPA_TX_DESCRICAO) VALUES (1, 'ABERTO');
INSERT INTO MODRED.STATUS_PAGAMENTO (STPA_ID, STPA_TX_DESCRICAO) VALUES (2, 'CANCELADO');
INSERT INTO MODRED.STATUS_PAGAMENTO (STPA_ID, STPA_TX_DESCRICAO) VALUES (3, 'FEITO');
COMMIT;

CREATE TABLE MODRED.PAGAMENTO 
(
  PAGA_ID NUMBER NOT NULL 
, PAGA_DT_CRIACAO DATE NOT NULL 
, PAGA_DT_ATUALIZACAO DATE NOT NULL
, PAGA_IN_COBRACA NUMBER(1) NOT NULL 
, PAGA_ID_OBEJTORELACIONADO NUMBER 
, TISE_ID NUMBER NOT NULL 
, STPA_ID NUMBER NOT NULL 
, REGI_ID NUMBER NOT NULL 
, MATC_ID NUMBER NOT NULL
, CONSTRAINT PK_PAGA PRIMARY KEY 
  (
    PAGA_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_PAGA_MATC ON MODRED.PAGAMENTO (MATC_ID);
CREATE INDEX MODRED.IN_FK_PAGA_REGI ON MODRED.PAGAMENTO (REGI_ID);
CREATE INDEX MODRED.IN_FK_PAGA_STPA ON MODRED.PAGAMENTO (STPA_ID);
CREATE INDEX MODRED.IN_FK_PAGA_TISE ON MODRED.PAGAMENTO (TISE_ID);

ALTER TABLE MODRED.PAGAMENTO
ADD CONSTRAINT FK_PAGA_MATC FOREIGN KEY
(
  MATC_ID 
)
REFERENCES MODRED.MATCH
(
  MATC_ID 
)
ENABLE;

ALTER TABLE MODRED.PAGAMENTO
ADD CONSTRAINT FK_PAGA_REGI FOREIGN KEY
(
  REGI_ID 
)
REFERENCES MODRED.REGISTRO
(
  REGI_ID 
)
ENABLE;

ALTER TABLE MODRED.PAGAMENTO
ADD CONSTRAINT FK_PAGA_STPA FOREIGN KEY
(
  STPA_ID 
)
REFERENCES MODRED.STATUS_PAGAMENTO
(
  STPA_ID 
)
ENABLE;

ALTER TABLE MODRED.PAGAMENTO
ADD CONSTRAINT FK_PAGA_TISE FOREIGN KEY
(
  TISE_ID 
)
REFERENCES MODRED.TIPO_SERVICO
(
  TISE_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.PAGAMENTO IS 'Tabela que registra os pagamentos podenso ser cobrança.';
COMMENT ON COLUMN MODRED.PAGAMENTO.PAGA_ID IS 'Identificador sequencial da tabela.';
COMMENT ON COLUMN MODRED.PAGAMENTO.PAGA_DT_CRIACAO IS 'Data de criação.';
COMMENT ON COLUMN MODRED.PAGAMENTO.PAGA_DT_ATUALIZACAO IS 'Data de atualização.';
COMMENT ON COLUMN MODRED.PAGAMENTO.PAGA_IN_COBRACA IS 'Informa se o pagamento é de cobrança.';
COMMENT ON COLUMN MODRED.PAGAMENTO.PAGA_ID_OBEJTORELACIONADO IS 'Id do obejto que originou o serviço.';
COMMENT ON COLUMN MODRED.PAGAMENTO.TISE_ID IS 'Referência para o tipo de serviço.';
COMMENT ON COLUMN MODRED.PAGAMENTO.STPA_ID IS 'Referência para a tabekla de status de pagamento.';
COMMENT ON COLUMN MODRED.PAGAMENTO.REGI_ID IS 'Referência para a tabela de registros.';
COMMENT ON COLUMN MODRED.PAGAMENTO.MATC_ID IS 'Referência para a tabela de match.';

CREATE SEQUENCE MODRED.SQ_PAGA_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE ;

CREATE TABLE MODRED.PAGAMENTO_AUD 
(
  AUDI_ID NUMBER NOT NULL 
, PAGA_ID NUMBER NOT NULL
, AUDI_TX_TIPO NUMBER
, PAGA_DT_CRIACAO DATE 
, PAGA_DT_ATUALIZACAO DATE 
, PAGA_IN_COBRACA NUMBER(1)  
, PAGA_ID_OBEJTORELACIONADO NUMBER 
, TISE_ID NUMBER  
, STPA_ID NUMBER  
, REGI_ID NUMBER  
, MATC_ID NUMBER 
, CONSTRAINT PK_PAAD PRIMARY KEY 
  (
    AUDI_ID
,   PAGA_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_PAAD_AUDI ON MODRED.PAGAMENTO_AUD (AUDI_ID);

ALTER TABLE MODRED.PAGAMENTO_AUD
ADD CONSTRAINT FK_PAAD_AUDI FOREIGN KEY
(
  AUDI_ID 
)
REFERENCES MODRED.AUDITORIA
(
  AUDI_ID 
)
ENABLE;


INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoResultadoPedidoExaCTEmByte', '5242880');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoResultadoPedidoExameCT', 'application/pdf');
commit;



ALTER TABLE MODRED.PEDIDO_EXAME ADD (PEEX_DT_CANCELAMENTO DATE );
COMMENT ON COLUMN MODRED.PEDIDO_EXAME.PEEX_DT_CANCELAMENTO IS 'Data de cancelamento do pedido.';
ALTER TABLE MODRED.PEDIDO_EXAME_AUD ADD (PEEX_DT_CANCELAMENTO DATE );
commit;

-- CONFIGURAÇÃO PARA UPLOAD DO LAUDO DE PEDIDO IDM
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoResultadoPedidoIdmEmByte', '5242880');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoResultadoPedidoIdm', 'application/pdf');
COMMIT;


-- ESTORIA 3174

-- CRIAR SCRIPT PARA RECURSO - CANCELAR PEDIDO IDM
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('100', 'CANCELAR_PEDIDO_IDM', 'Permite cancelar o pedido de IDM que havia sido solicitado junto ao CT.');
COMMIT;
-- ASSOCIAR AOS MOTIVOS DE STATUS DOS DOADORES INTERNACIONAIS
INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR_RECURSO" (MOSD_ID, RECU_ID) VALUES ('9', '100');
INSERT INTO "MODRED"."MOTIVO_STATUS_DOADOR_RECURSO" (MOSD_ID, RECU_ID) VALUES ('10', '100');
COMMIT;


UPDATE "MODRED"."RECURSO" SET RECU_TX_SIGLA = 'CANCELAR_FASE_3_INTERNACIONAL', RECU_TX_DESCRICAO = 'Permite o cancelamento de fase 3 internacional' WHERE RECU_ID = 97;
commit;


ALTER TABLE MODRED.LOG_EVOLUCAO 
ADD (LOEV_TX_PARAMETROS VARCHAR2(255) );

UPDATE MODRED.LOG_EVOLUCAO SET LOEV_TX_PARAMETROS = LOEV_NR_ID_OBJETO;
COMMIT;

ALTER TABLE MODRED.LOG_EVOLUCAO 
DROP COLUMN LOEV_NR_ID_OBJETO;





ALTER TABLE MODRED.PEDIDO_IDM 
ADD (PEID_DT_CANCELAMENTO DATE );

COMMENT ON COLUMN MODRED.PEDIDO_IDM.PEID_DT_CANCELAMENTO IS 'Data de cancelamento do pedido, caso este tendha sido cancelada';


ALTER TABLE PEDIDO_IDM_AUD 
ADD (PEID_DT_CANCELAMENTO DATE );


-- TORNANDO CAMPOS COMO DATA E HORA PARA PAGAMENTO.
ALTER TABLE PAGAMENTO  
MODIFY (PAGA_DT_CRIACAO TIMESTAMP);
ALTER TABLE PAGAMENTO  
MODIFY (PAGA_DT_ATUALIZACAO TIMESTAMP);

