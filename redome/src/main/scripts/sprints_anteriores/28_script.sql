
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_NR_ENTITY_STATUS) 
VALUES ('19', 'ADMIN', 'ADMIN', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', '1', '1');

INSERT INTO "MODRED"."PERFIL" (PERF_ID, PERF_TX_DESCRICAO, PERF_NR_ENTITY_STATUS) VALUES ('19', 'ADMIN', '1');
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('85', 'EDITAR_RELATORIO', 'Permite ao usuario editar e criar modelos de relatórios');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('85', '19', '0');


INSERT INTO "MODRED"."USUARIO_PERFIL" (USUA_ID, PERF_ID) VALUES ('19', '19');







CREATE TABLE MODRED.RELATORIO 
(
  RELA_ID NUMBER NOT NULL 
, RELA_TX_CODIGO VARCHAR2(40) NOT NULL 
, RELA_TX_HTML VARCHAR2(255) NOT NULL 
, RELA_IN_TIPO NUMBER NOT NULL 
, CONSTRAINT RELATORIO_PK PRIMARY KEY 
  (
    RELA_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.RELATORIO IS 'Tabela para guardar os relatórios do sistema.';

COMMENT ON COLUMN MODRED.RELATORIO.RELA_ID IS 'Identificador do relatorio';

COMMENT ON COLUMN MODRED.RELATORIO.RELA_TX_HTML IS 'Relatorio em formato html.';

COMMENT ON COLUMN MODRED.RELATORIO.RELA_IN_TIPO IS '1 - pdf 2 - Email';

CREATE SEQUENCE MODRED.SQ_RELA_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 
INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;



ALTER TABLE MODRED.RELATORIO 
RENAME CONSTRAINT RELATORIO_PK TO PK_RELA;

ALTER TABLE MODRED.RELATORIO
ADD CONSTRAINT UK_RELA UNIQUE 
(
  RELA_TX_CODIGO 
)
ENABLE;



alter table modred.relatorio drop column RELA_TX_HTML;


ALTER TABLE modred.RELATORIO 
ADD (RELA_TX_HTML CLOB NOT NULL);

COMMENT ON COLUMN modred.RELATORIO.RELA_TX_HTML IS 'arquivo no formato html';


UPDATE "MODRED"."TIPO_TAREFA" SET TITA_TX_DESCRICAO = 'NOTIFICACAO_EXAME_CONFERIDO' WHERE TITA_ID = 28;
INSERT INTO "MODRED"."TIPO_TAREFA" (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TARE_IN_SOMENTE_AGRUPADOR) VALUES ('1', 'NOTIFICACAO', '0', '0');
INSERT INTO "MODRED"."CATEGORIA_NOTIFICACAO" (CANO_ID, CANO_TX_DESCRICAO) VALUES ('2', 'Pedido Exame');
COMMIT;



-- TABELA QUE GUARDAR O HISTORICO DA BUSCA PARA QUANDO OCORREREM ATUALIZAÇÃO, COMO A RECUSA DO CT.
CREATE TABLE MODRED.HISTORICO_BUSCA
(
  HIBU_ID NUMBER NOT NULL 
, HIBU_DT_ATUALIZACAO TIMESTAMP NOT NULL 
, USUA_ID NUMBER NOT NULL 
, CETR_ID NUMBER NOT NULL 
, BUSC_ID NUMBER NOT NULL 
, HIBU_TX_JUSTIFICATIVA VARCHAR(200) NOT NULL 
, CONSTRAINT HIBU_PK PRIMARY KEY (HIBU_ID) ENABLE 
);

COMMENT ON TABLE MODRED.HISTORICO_BUSCA IS 'Tabela com o histórico da busca (quando o CT recusa realizar o procedimento).';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.HIBU_ID IS 'Identificador da tabela';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.HIBU_DT_ATUALIZACAO IS 'Data que ocorreu a atualização na busca.';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.USUA_ID IS 'Usuário que realizou a atualização na busca.';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.CETR_ID IS 'Centro transplantador que estava selecionado como responsável pela busca.';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.BUSC_ID IS 'Identificador da busca que sofreu a atualização.';
COMMENT ON COLUMN MODRED.HISTORICO_BUSCA.HIBU_TX_JUSTIFICATIVA IS 'Texto com a justificativa da ocorrência de atualização.';

-- CRIAÇÃO DA SEQUENCE DA TABELA DE HIBU
CREATE SEQUENCE MODRED.SQ_HIBU_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 
INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

-- RELACIONAMENTO COM USUARIO QUE REALIZOU A RECUSA
ALTER TABLE MODRED.HISTORICO_BUSCA
ADD CONSTRAINT FK_HIBU_USUA FOREIGN KEY(USUA_ID)
REFERENCES MODRED.USUARIO(USUA_ID)
ENABLE;

-- RELACIONAMENTO COM O CENTRO QUE ESTAVA INFORMADO COMO O RESPONSÁVEL PELO TRANSPLANTE
ALTER TABLE MODRED.HISTORICO_BUSCA
ADD CONSTRAINT FK_HIBU_CETR FOREIGN KEY(CETR_ID)
REFERENCES MODRED.CENTRO_TRANSPLANTE(CETR_ID)
ENABLE;

-- RELACIONAMENTO COM A BUSCA QUE SOFREU A ATUALIZAÇÃO
ALTER TABLE MODRED.HISTORICO_BUSCA
ADD CONSTRAINT FK_HIBU_BUSC FOREIGN KEY(BUSC_ID)
REFERENCES MODRED.BUSCA(BUSC_ID)
ENABLE;


--ESTORIA 2874


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('84', 'RECEBER_COLETA_LABORATORIO', 'Permite ao laboratório receber uma coleta de sangue feita pelo médico para realização de exame.');
INSERT INTO "MODRED"."PERFIL" (PERF_ID, PERF_TX_DESCRICAO, PERF_NR_ENTITY_STATUS) VALUES ('18', 'LABORATORIO', '1');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('84', '18', '1');
INSERT INTO "MODRED"."USUARIO" (USUA_ID, USUA_TX_NOME, USUA_TX_USERNAME, USUA_TX_PASSWORD, USUA_IN_ATIVO, USUA_NR_ENTITY_STATUS, LABO_ID) VALUES ('18', 'LABORATORIO', 'LABORATORIO', '$2a$11$KMAfznbkZhx9mvESGy3.GewPWbSGQLVTnj5O0m7cIo5NrucDtcXT.', '1', '1', '1');
INSERT INTO "MODRED"."USUARIO_PERFIL" (USUA_ID, PERF_ID) VALUES ('18', '18');
INSERT INTO "MODRED"."TIPO_TAREFA" (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TARE_IN_SOMENTE_AGRUPADOR) VALUES ('60', 'RECEBER_COLETA_PARA_EXAME', '0', '0');
COMMIT;


ALTER TABLE MODRED.USUARIO 
ADD (LABO_ID NUMBER );

CREATE INDEX IN_FK_USUA_LABO ON USUARIO (LABO_ID ASC);

ALTER TABLE USUARIO
ADD CONSTRAINT FK_USUA_LABO FOREIGN KEY
(
  LABO_ID 
)
REFERENCES LABORATORIO
(
  LABO_ID 
)
ENABLE;

COMMENT ON COLUMN USUARIO.LABO_ID IS 'Referencia para o laboratório ao qual o usuário está vinculado para o caso dele ser do perfil laboratório.';



INSERT INTO "MODRED"."TIPO_TAREFA" (TITA_ID, TITA_TX_DESCRICAO, TITA_IN_AUTOMATICA, TARE_IN_SOMENTE_AGRUPADOR) VALUES ('61', 'CADASTRAR_RESULTADO_CT', '0', '0');
commit;



ALTER TABLE PEDIDO_EXAME 
ADD (EXAM_ID NUMBER );

CREATE INDEX IN_FK_PEEX_EXAM ON PEDIDO_EXAME (EXAM_ID ASC);

ALTER TABLE PEDIDO_EXAME
ADD CONSTRAINT FK_PEEX_EXAM FOREIGN KEY
(
  EXAM_ID 
)
REFERENCES EXAME
(
  EXAM_ID 
)
ENABLE;

COMMENT ON COLUMN PEDIDO_EXAME.EXAM_ID IS 'Referência para o exame de resultado do pedido';



ALTER TABLE PEDIDO_EXAME 
ADD (TIEX_ID NUMBER );

CREATE INDEX IN_FK_PEEX_TIEX ON PEDIDO_EXAME (TIEX_ID ASC);

ALTER TABLE PEDIDO_EXAME
ADD CONSTRAINT FK_PEEX_TIEX FOREIGN KEY
(
  TIEX_ID 
)
REFERENCES TIPO_EXAME
(
  TIEX_ID 
)
ENABLE;

COMMENT ON COLUMN PEDIDO_EXAME.TIEX_ID IS 'Referência para o tipo de exame do pedido';


--Script da Estaria 2890
CREATE TABLE MODRED.TIPO_EXAME 
(
  TIEX_ID NUMBER NOT NULL 
, TIEX_TX_DESCRICAO VARCHAR2(50) 
, CONSTRAINT PK_TIEX PRIMARY KEY 
  (
    TIEX_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.TIPO_EXAME IS 'Tipo de Exame';
COMMENT ON COLUMN MODRED.TIPO_EXAME.TIEX_ID IS 'Identificador único do tipo de exame.';
COMMENT ON COLUMN MODRED.TIPO_EXAME.TIEX_TX_DESCRICAO IS 'Descrição do tipo de exame';


CREATE TABLE MODRED.TIPO_EXAME_LOCUS 
(
  LOCU_ID VARCHAR2(4) NOT NULL 
, TIEX_ID NUMBER NOT NULL 
, CONSTRAINT PK_TIEL PRIMARY KEY 
  (
    LOCU_ID 
  , TIEX_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.TIPO_EXAME_LOCUS IS 'Tabela associativa entre tipo de exame e locus.';
COMMENT ON COLUMN MODRED.TIPO_EXAME_LOCUS.LOCU_ID IS 'Identificador referente ao locus.';
COMMENT ON COLUMN MODRED.TIPO_EXAME_LOCUS.TIEX_ID IS 'Identificador referente ao tipo dde exame.';

ALTER TABLE MODRED.TIPO_EXAME_LOCUS
ADD CONSTRAINT FK_TIEL_LOCU FOREIGN KEY
(
  LOCU_ID 
)
REFERENCES MODRED.LOCUS
(
  LOCU_ID 
)
ENABLE;

ALTER TABLE MODRED.TIPO_EXAME_LOCUS
ADD CONSTRAINT FK_TIEL_TIEX FOREIGN KEY
(
  TIEX_ID 
)
REFERENCES MODRED.TIPO_EXAME
(
  TIEX_ID 
)
ENABLE;

CREATE TABLE MODRED.STATUS_PEDIDO_EXAME 
(
  STPX_ID NUMBER NOT NULL 
, STPX_TX_DESCRICAO VARCHAR2(30) NOT NULL 
, CONSTRAINT PK_STPX PRIMARY KEY 
  (
    STPX_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.STATUS_PEDIDO_EXAME IS 'Tabela de status utilizada pelo pedido de exame.';
COMMENT ON COLUMN MODRED.STATUS_PEDIDO_EXAME.STPX_ID IS 'Identificador único da tabela.';
COMMENT ON COLUMN MODRED.STATUS_PEDIDO_EXAME.STPX_TX_DESCRICAO IS 'Descrição do status.';

INSERT INTO MODRED.STATUS_PEDIDO_EXAME  (STPX_ID, STPX_TX_DESCRICAO) VALUES (0, 'AGUARDANDO AMOSTRA');
INSERT INTO MODRED.STATUS_PEDIDO_EXAME  (STPX_ID, STPX_TX_DESCRICAO) VALUES (1, 'AMOSTRA RECEBIDA');
INSERT INTO MODRED.STATUS_PEDIDO_EXAME  (STPX_ID, STPX_TX_DESCRICAO) VALUES (2, 'RESULTADO CADASTRADO');
INSERT INTO MODRED.STATUS_PEDIDO_EXAME  (STPX_ID, STPX_TX_DESCRICAO) VALUES (3, 'CANCELADO');
COMMIT;

DELETE FROM MODRED.PEDIDO_EXAME;
COMMIT;

ALTER TABLE MODRED.PEDIDO_EXAME 
DROP COLUMN PEEX_NR_STATUS;

ALTER TABLE MODRED.PEDIDO_EXAME 
ADD (LABO_ID NUMBER NOT NULL);

ALTER TABLE MODRED.PEDIDO_EXAME 
ADD (STPX_ID NUMBER NOT NULL);

ALTER TABLE MODRED.PEDIDO_EXAME 
ADD (PEEX_DT_COLETA_AMOSTRA DATE );

ALTER TABLE MODRED.PEDIDO_EXAME 
ADD (PEEX_DT_RECEBIMENTO_AMOSTRA DATE );

CREATE INDEX IN_FK_PEEX_LABO ON MODRED.PEDIDO_EXAME (LABO_ID ASC);

CREATE INDEX IN_FK_PEEX_STPX ON MODRED.PEDIDO_EXAME (STPX_ID);

ALTER TABLE MODRED.PEDIDO_EXAME
ADD CONSTRAINT FK_PEEX_LABO FOREIGN KEY
(
  LABO_ID 
)
REFERENCES MODRED.LABORATORIO
(
  LABO_ID 
)
ENABLE;

ALTER TABLE MODRED.PEDIDO_EXAME
ADD CONSTRAINT FK_PEEX_STPX FOREIGN KEY
(
  STPX_ID 
)
REFERENCES MODRED.STATUS_PEDIDO_EXAME
(
  STPX_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.PEDIDO_EXAME.LABO_ID IS 'Referência para a tabela de  laboratório.';
COMMENT ON COLUMN MODRED.PEDIDO_EXAME.STPX_ID IS 'Referencia para atabela de status.';
COMMENT ON COLUMN MODRED.PEDIDO_EXAME.PEEX_DT_COLETA_AMOSTRA IS 'Data da coleta da amostra feita pelo médico.';
COMMENT ON COLUMN MODRED.PEDIDO_EXAME.PEEX_DT_RECEBIMENTO_AMOSTRA IS 'Data de recebimento da amostra pelo laboratório.';

ALTER TABLE MODRED.LABORATORIO 
ADD (LABO_IN_FAZ_CT NUMBER );

ALTER TABLE LABORATORIO 
ADD (LABO_NR_QUANT_EXAME_CT NUMBER );

ALTER TABLE MODRED.LABORATORIO 
RENAME COLUMN LABO_NOME TO LABO_TX_NOME;

COMMENT ON COLUMN MODRED.LABORATORIO.LABO_IN_FAZ_CT IS 'Informa se o laboratório faz exame de ct.';

UPDATE MODRED.LABORATORIO SET LABO_IN_FAZ_CT = 0, LABO_NR_QUANT_EXAME_CT = 0;
INSERT INTO MODRED.LABORATORIO (LABO_ID, LABO_TX_NOME, LABO_IN_FAZ_CT, LABO_NR_QUANT_EXAME_CT) VALUES (2, 'Laboratorio CT', 1, 10);
COMMIT;

ALTER TABLE MODRED.LABORATORIO  
MODIFY (LABO_IN_FAZ_CT NOT NULL);

ALTER TABLE MODRED.LABORATORIO  
MODIFY (LABO_NR_QUANT_EXAME_CT NOT NULL);

ALTER TABLE MODRED.EXAME 
ADD (LABO_ID NUMBER );

ALTER TABLE MODRED.EXAME 
ADD (EXAM_DT_COLETA_AMOSTRA DATE );

ALTER TABLE MODRED.EXAME 
ADD (EXAM_IN_LABORATORIO_PARTICULAR NUMBER );

CREATE INDEX IN_FK_EXAM_LABO ON MODRED.EXAME (LABO_ID);

ALTER TABLE MODRED.EXAME
ADD CONSTRAINT FK_EXAM_LABO FOREIGN KEY
(
  LABO_ID 
)
REFERENCES MODRED.LABORATORIO
(
  LABO_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.EXAME.LABO_ID IS 'Referencia para a tabela de laboratorios.';
COMMENT ON COLUMN MODRED.EXAME.EXAM_DT_COLETA_AMOSTRA IS 'Data da coleta da amostra.';
COMMENT ON COLUMN MODRED.EXAME.EXAM_IN_LABORATORIO_PARTICULAR IS '0 - não é particular. A coluna LABO_ID deverá estar preenchido; 1 - quando é particular;';

UPDATE MODRED.EXAME SET EXAM_IN_LABORATORIO_PARTICULAR = 1;
COMMIT;

ALTER TABLE EXAME  
MODIFY (EXAM_IN_LABORATORIO_PARTICULAR NOT NULL);


ALTER TABLE MODRED.EXAME_AUD 
ADD (LABO_ID NUMBER );

ALTER TABLE MODRED.EXAME_AUD 
ADD (EXAM_DT_COLETA_AMOSTRA DATE );

ALTER TABLE MODRED.EXAME_AUD 
ADD (EXAM_IN_LABORATORIO_PARTICULAR NUMBER );


INSERT INTO TIPO_EXAME (TIEX_ID, TIEX_TX_DESCRICAO) VALUES (0, 'Tipificação HLA de alta resolução');
INSERT INTO TIPO_EXAME_LOCUS (TIEX_ID, LOCU_ID) VALUES (0, 'A');
INSERT INTO TIPO_EXAME_LOCUS (TIEX_ID, LOCU_ID) VALUES (0, 'B');
INSERT INTO TIPO_EXAME_LOCUS (TIEX_ID, LOCU_ID) VALUES (0, 'C');
INSERT INTO TIPO_EXAME_LOCUS (TIEX_ID, LOCU_ID) VALUES (0, 'DRB1');
INSERT INTO TIPO_EXAME_LOCUS (TIEX_ID, LOCU_ID) VALUES (0, 'DQB1');
COMMIT;

CREATE TABLE MODRED.INSTRUCAO_COLETA 
(
  INCO_ID NUMBER NOT NULL 
, INCO_TX_DESCRICAO VARCHAR2(2000) NOT NULL 
, LABO_ID NUMBER NOT NULL 
, CONSTRAINT PK_INCO PRIMARY KEY 
  (
    INCO_ID 
  )
  ENABLE 
);

CREATE INDEX MODRED.IN_FK_INCO_LABO ON MODRED.INSTRUCAO_COLETA (LABO_ID);

ALTER TABLE MODRED.INSTRUCAO_COLETA
ADD CONSTRAINT FK_INCO_LABO FOREIGN KEY
(
  LABO_ID 
)
REFERENCES MODRED.LABORATORIO
(
  LABO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.INSTRUCAO_COLETA IS 'Tabela referente ais instruções de coleta.';
COMMENT ON COLUMN MODRED.INSTRUCAO_COLETA.INCO_ID IS 'Chave primária.';
COMMENT ON COLUMN MODRED.INSTRUCAO_COLETA.INCO_TX_DESCRICAO IS 'Descrição da instrução.';
COMMENT ON COLUMN MODRED.INSTRUCAO_COLETA.LABO_ID IS 'Identificador para a tabela de laboratório.';

INSERT INTO MODRED.INSTRUCAO_COLETA (INCO_ID, INCO_TX_DESCRICAO, LABO_ID) VALUES (1, '02 (dois) tubos de sangue com EDTA (5ml cada, tampa roxa)', 2);
COMMIT;

CREATE SEQUENCE SQ_INCO_ID INCREMENT BY 1 START WITH 2 MAXVALUE 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 MINVALUE 1;

INSERT INTO RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES (86, 'PEDIDO_EXAME_FASE3_PACIENTE', 'Permite ao analista de busca solicitar um pédido de fase 3 para um paciente.');
INSERT INTO PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (86, 5, 0);
COMMIT;

ALTER TABLE MODRED.ENDERECO_CONTATO 
ADD (LABO_ID NUMBER );

COMMENT ON COLUMN MODRED.ENDERECO_CONTATO.LABO_ID IS 'ID de identificação do laboratório associado a este endereço.';

ALTER TABLE MODRED.ENDERECO_CONTATO_AUD
ADD (LABO_ID NUMBER );

-- CRIANDO COLUNA PARA DIFERENCIAR PEDIDOS DE EXAME DE PACIENTE E DOADOR.
ALTER TABLE MODRED.PEDIDO_EXAME
ADD PEEX_IN_OWNER VARCHAR2(100);
COMMENT ON COLUMN MODRED.PEDIDO_EXAME.PEEX_IN_OWNER IS 'Indica quem é o dono do pedido de exame, se é o paciente ou o doador.';

UPDATE MODRED.PEDIDO_EXAME
SET PEEX_IN_OWNER = 'DOADOR';
COMMIT;

ALTER TABLE MODRED.PEDIDO_EXAME
MODIFY PEEX_IN_OWNER NOT NULL;

-- ADICIONANDO A COLUNA DE BUSCA DENTRO DA SOLICITAÇÃO PARA REPRESENTAR A RELAÇÃO ENTRE
-- O PEDIDO DE EXAME TESTE CONFIRMATÓRIO E O PACIENTE, ATRAVÉS DA BUSCA.
ALTER TABLE MODRED.SOLICITACAO
ADD BUSC_ID NUMBER;

ALTER TABLE MODRED.SOLICITACAO
ADD CONSTRAINT FK_SOLI_BUSC FOREIGN KEY(BUSC_ID)
REFERENCES MODRED.BUSCA(BUSC_ID)
ENABLE;

-- RECURSO PARA CANCELAMENTO DO PEDIDO DE EXAME
INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (88, 'CANCELAR_PEDIDO_EXAME', 'Permite ao usuario cancelar um pedido de exame, anteriormente, solicitado.');

INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('88', '5', '0');


-- RECURSO PARA ALTERAR LABORATORIO DO PEDIDO DE EXAME
INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES (89, 'ALTERAR_LABORATORIO_PARA_PEDIDO_EXAME', 'Permite ao usuario alterar o laboratório de destino do pedido de exame.');

INSERT INTO MODRED.PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('89', '5', '0');
COMMIT;


ALTER TABLE MODRED.CENTRO_TRANSPLANTE 
ADD (LABO_ID NUMBER );

CREATE INDEX MODRED.IN_FK_CETR_LABO ON MODRED.CENTRO_TRANSPLANTE (LABO_ID ASC);

ALTER TABLE MODRED.CENTRO_TRANSPLANTE
ADD CONSTRAINT FK_CETR_LABO FOREIGN KEY
(
  LABO_ID 
)
REFERENCES MODRED.LABORATORIO
(
  LABO_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.CENTRO_TRANSPLANTE.LABO_ID IS 'Identificador do laboratório de preferência deste centro.';

ALTER TABLE MODRED.LABORATORIO 
ADD (LABO_TX_NOME_CONTATO VARCHAR2(50) );

COMMENT ON COLUMN MODRED.LABORATORIO.LABO_TX_NOME_CONTATO IS 'Nome da pessoa de contato.';
--Fim do script da estoria 2890

-- INCLUINDO PERFIL DO MEDICO TRANSPLANTADOR TAMBÉM PARA O HOSPITAL DAS CLÍNICAS DE PORTO ALEGRE - UFRGS
INSERT INTO MODRED.USUARIO_CENTRO_TRANSPLANTE (USUA_ID, CETR_ID) VALUES (15, 2);
COMMIT;




ALTER TABLE MODRED.DOADOR ADD (DOAD_ID NUMBER NULL);

COMMENT ON COLUMN MODRED.DOADOR.DOAD_ID IS 'Identificador do doador';

UPDATE MODRED.DOADOR SET DOAD_ID = DOAD_NR_DMR;
COMMIT;


ALTER TABLE MODRED.CONTATO_TELEFONICO DROP CONSTRAINT FK_COTE_DOAD;
ALTER TABLE MODRED.CONTATO_TELEFONICO RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;
ALTER TABLE MODRED.CONTATO_TELEFONICO_AUD RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.EMAIL_CONTATO DROP CONSTRAINT FK_EMCO_DOAD;
ALTER TABLE MODRED.EMAIL_CONTATO RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;
ALTER TABLE MODRED.EMAIL_CONTATO_AUD RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.ENDERECO_CONTATO DROP CONSTRAINT FK_ENCO_DOAD;
ALTER TABLE MODRED.ENDERECO_CONTATO RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;
ALTER TABLE MODRED.ENDERECO_CONTATO_AUD RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.FORMULARIO_DOADOR DROP CONSTRAINT FK_FODO_DOAD;
ALTER TABLE MODRED.FORMULARIO_DOADOR RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.MATCH DROP CONSTRAINT FK_MATC_DOAD;
ALTER TABLE MODRED.MATCH RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.RESSALVA_DOADOR DROP CONSTRAINT FK_REDO_DOAD;
ALTER TABLE MODRED.RESSALVA_DOADOR RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;
ALTER TABLE MODRED.RESSALVA_DOADOR_AUD RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.SOLICITACAO DROP CONSTRAINT FK_SOLI_DOAD;
ALTER TABLE MODRED.SOLICITACAO DROP COLUMN DOAD_NR_DMR;

ALTER TABLE MODRED.VALOR_GENOTIPO_EXPANDIDO DROP CONSTRAINT FK_VGEE_DOAD;
ALTER TABLE MODRED.VALOR_GENOTIPO_EXPANDIDO RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;

ALTER TABLE MODRED.QUALIFICACAO_MATCH DROP CONSTRAINT FK_QUMA_DOAD;
DROP INDEX IN_FK_QUMA_DOAD;
ALTER TABLE MODRED.QUALIFICACAO_MATCH RENAME COLUMN DOAD_NR_DMR TO DOAD_ID;
CREATE INDEX IN_FK_QUMA_DOAD ON MODRED.QUALIFICACAO_MATCH (DOAD_ID ASC);


ALTER TABLE MODRED.DOADOR DROP CONSTRAINT PK_DOAD;
DROP INDEX MODRED.PK_DOAD;
ALTER TABLE MODRED.DOADOR ADD CONSTRAINT PK_DOAD PRIMARY KEY (DOAD_ID) USING INDEX (CREATE UNIQUE INDEX DOAD_PK ON MODRED.DOADOR (DOAD_ID ASC)) ENABLE;
ALTER INDEX DOAD_PK RENAME TO PK_DOAD;


ALTER TABLE MODRED.CONTATO_TELEFONICO ADD CONSTRAINT FK_COTE_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.EMAIL_CONTATO ADD CONSTRAINT FK_EMCO_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.ENDERECO_CONTATO ADD CONSTRAINT FK_ENCO_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.FORMULARIO_DOADOR ADD CONSTRAINT FK_FODO_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.MATCH ADD CONSTRAINT FK_MATC_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.RESSALVA_DOADOR ADD CONSTRAINT FK_REDO_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.VALOR_GENOTIPO_EXPANDIDO ADD CONSTRAINT FK_VGEE_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;
ALTER TABLE MODRED.QUALIFICACAO_MATCH ADD CONSTRAINT FK_QUMA_DOAD FOREIGN KEY (DOAD_ID) REFERENCES MODRED.DOADOR (DOAD_ID) ENABLE;

ALTER TABLE DOADOR_AUD ADD (DOAD_ID VARCHAR2(20) );
UPDATE DOADOR_AUD SET DOAD_ID = DOAD_NR_DMR;

ALTER TABLE DOADOR_AUD DROP CONSTRAINT PK_DOAU;
ALTER TABLE DOADOR_AUD  MODIFY (DOAD_ID NOT NULL);
ALTER TABLE DOADOR_AUD ADD CONSTRAINT PK_DOAU PRIMARY KEY (AUDI_ID , DOAD_ID) USING INDEX 
(CREATE UNIQUE INDEX PK_DOAU1 ON DOADOR_AUD (AUDI_ID ASC, DOAD_ID ASC) )ENABLE;

CREATE SEQUENCE MODRED.SQ_DOAD_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

INSERT INTO "MODRED"."MOTIVO_CANCELAMENTO_WORKUP" (MOCW_ID, MOCW_DESCRICAO, MOCW_IN_SELECIONAVEL) VALUES ('5', 'CANCELAMENTO BUSCA', '0');












create or replace procedure proc_criar_qualificacoes_match (rmr in NUMBER, idDoador in NUMBER, fase in VARCHAR2, com_mismatch in BOOLEAN)


IS
matchId NUMBER;


begin
    select m.matc_id into matchId from MODRED.paciente paci inner join MODRED.busca b on paci.paci_nr_rmr = b.paci_nr_rmr inner join match m on m.busc_id = b.busc_id where paci.PACI_NR_RMR = rmr and m.doad_id = idDoador;


    if (fase = '1') then
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'A', 1, idDoador, '01:01', 5); 
        if(com_mismatch) then
            INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'M', 2, idDoador, '01:01:01', 5); 
        else
            INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'P', 2, idDoador, '01:01:01:01', 5); 
        end if;

        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'B', 'L', 1, idDoador, '38:NOVO', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'B', 'P', 2, idDoador, '18:NOVO', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB1', 'A', 1, idDoador, '01:01', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB1', 'L', 2, idDoador, '01:01:01', 5); 
        update match set MATC_TX_SITUACAO = 'F1' where matc_id = matchId;
    elsif (fase = '2' OR fase = '3' or fase='D') then
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'A', 1, idDoador, '01:01:01:02N', 5); 
        if(com_mismatch) then
            INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'M', 2, idDoador, '01:01:01:03', 5); 
        else
            INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'A', 'P', 2, idDoador, '01:01:01:04', 5); 
        end if;

        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'B', 'L', 1, idDoador, '35:NOVO', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'B', 'P', 2, idDoador, '46:NOVO', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB1', 'A', 1, idDoador, '01:01:01G', 3); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB1', 'L', 2, idDoador, '01:01:02', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'C', 'A', 1, idDoador, '01:02', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'C', 'L', 2, idDoador, '01:02:01', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB3', 'A', 1, idDoador, '01:02', 5); 
        INSERT INTO MODRED.QUALIFICACAO_MATCH (QUMA_ID, MATC_ID, LOCU_ID, QUMA_TX_QUALIFICACAO, QUMA_NR_POSICAO, DOAD_ID, QUMA_TX_GENOTIPO, QUMA_NR_TIPO) VALUES (modred.SQ_QUMA_ID.NEXTVAL, matchId, 'DRB3', 'L', 2, idDoador, '01:01:02:02', 5); 
        if(fase = '2') then
            update match set MATC_TX_SITUACAO = 'F2' where matc_id = matchId;
        else 
            if(fase = '3') then
                update match set MATC_TX_SITUACAO = 'F3' where matc_id = matchId;
            else 
                update match set MATC_TX_SITUACAO = 'D' where matc_id = matchId;
            end if;
        end if;
    end if;
    commit;
end;


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('90', 'VISUALIZAR_MOTIVOS_CANCELAMENTO_BUSCA', 'Permite ao usuario listar os motivos de cancelamento de busca');
insert into "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (90,1,0);
insert into modred.recurso (recu_id, recu_tx_sigla, recu_tx_descricao) values (91, 'CADASTRAR_DOADOR_INTERNACIONAL', 'Permite ao usuário cadastrar um doador');
insert into "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES (91,5,0);
commit;



INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('92', 'INCLUIR_RESSALVA', 'Permite ao usuario cadastrar novas ressalvas para um doador.');
insert into modred.permissao (recu_id, perf_id, perm_in_com_restricao) values (92,13,0);
insert into modred.permissao (recu_id, perf_id, perm_in_com_restricao) values (92,5,0);
commit;


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES ('93', 'ALTERAR_DOADOR_INTERNACIONAL', 'Permite ao usuario alterar um doador.');
insert into modred.permissao (recu_id, perf_id, perm_in_com_restricao) values (93,5,0);
update "MODRED"."RECURSO" set recu_tx_sigla = 'CADASTRAR_DOADOR_INTERNACIONAL' WHERE recu_tx_sigla = 'CADASTRAR_DOADOR';
commit;
commit;

CREATE TABLE MODRED.REGISTRO 
(
  REGI_ID NUMBER NOT NULL 
, REGI_TX_NOME VARCHAR2(20) 
, PAIS_ID NUMBER NOT NULL
, CONSTRAINT PK_REGI PRIMARY KEY 
  (
    REGI_ID 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.REGISTRO IS 'Regsitro de hubs';
COMMENT ON COLUMN MODRED.REGISTRO.REGI_ID IS 'Identificador único da tabela.';
COMMENT ON COLUMN MODRED.REGISTRO.REGI_TX_NOME IS 'Nome do registro.';
COMMENT ON COLUMN MODRED.REGISTRO.PAIS_ID IS 'Identificador do país do registro.';

CREATE INDEX MODRED.IN_FK_REGI_PAIS ON REGISTRO (PAIS_ID);

ALTER TABLE MODRED.REGISTRO
ADD CONSTRAINT FK_REGI_PAIS FOREIGN KEY
(
  PAIS_ID 
)
REFERENCES MODRED.PAIS
(
  PAIS_ID 
)
ENABLE;

INSERT INTO MODRED.REGISTRO (REGI_ID, REGI_TX_NOME, PAIS_ID) VALUES (1, 'REDOME', 31);
COMMIT;

ALTER TABLE MODRED.DOADOR 
ADD (DOAD_NR_IDADE NUMBER );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (DOAD_NR_IDADE NUMBER );

ALTER TABLE MODRED.DOADOR 
ADD (DOAD_NR_GRID NUMBER );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (DOAD_NR_GRID NUMBER );

ALTER TABLE MODRED.DOADOR 
ADD (REGI_ID_ORIGEM NUMBER );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (REGI_ID_ORIGEM NUMBER );

CREATE INDEX MODRED.IN_FK_DOAD_REGI_ORIGEM ON DOADOR (REGI_ID_ORIGEM);

ALTER TABLE MODRED.DOADOR
ADD CONSTRAINT FK_DOAD_REGI_ORIGEM FOREIGN KEY
(
  REGI_ID_ORIGEM 
)
REFERENCES MODRED.REGISTRO
(
  REGI_ID 
)
ENABLE;

UPDATE MODRED.DOADOR SET REGI_ID_ORIGEM = 1;
COMMIT;

ALTER TABLE MODRED.DOADOR  
MODIFY (REGI_ID_ORIGEM NOT NULL);

ALTER TABLE MODRED.DOADOR 
ADD (REGI_ID_PAGAMENTO NUMBER );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (REGI_ID_PAGAMENTO NUMBER );

CREATE INDEX MODRED.IN_FK_DOAD_REGI_PAGAMENTO ON DOADOR (REGI_ID_PAGAMENTO);

ALTER TABLE MODRED.DOADOR
ADD CONSTRAINT FK_DOAD_REGI_PAGAMENTO FOREIGN KEY
(
  REGI_ID_PAGAMENTO 
)
REFERENCES MODRED.REGISTRO
(
  REGI_ID 
)
ENABLE;

ALTER TABLE MODRED.DOADOR 
ADD (DOAD_IN_TIPO NUMBER );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (DOAD_IN_TIPO NUMBER );

UPDATE MODRED.DOADOR SET DOAD_IN_TIPO = 0;
COMMIT;

ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_IN_TIPO NOT NULL);

ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_TX_NOME NULL);

ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_TX_NOME_MAE NULL);

ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_TX_ABO NOT NULL);

ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_VL_PESO NOT NULL);

ALTER TABLE MODRED.DOADOR  
MODIFY (LABO_ID NULL);

ALTER TABLE MODRED.DOADOR 
ADD (DOAD_TX_ID_REGISTRO VARCHAR2(20) );

ALTER TABLE MODRED.DOADOR_AUD 
ADD (DOAD_TX_ID_REGISTRO VARCHAR2(20) );

COMMENT ON COLUMN MODRED.DOADOR.DOAD_NR_IDADE IS 'Idade do doador';
COMMENT ON COLUMN MODRED.DOADOR.DOAD_NR_GRID IS 'Identificador únido do doador no registro internacional.';
COMMENT ON COLUMN MODRED.DOADOR.REGI_ID_ORIGEM IS 'Registro Origem do doador.';
COMMENT ON COLUMN MODRED.DOADOR.REGI_ID_PAGAMENTO IS 'Registro para pagamento dos doadores internacionais.';
COMMENT ON COLUMN MODRED.DOADOR.DOAD_IN_TIPO IS 'Identifica o tipo de doador. 0 - Doador Nacional 1 - Doador Internacional 2 - Cordão Nacional 3 Cordão Internacional.';
COMMENT ON COLUMN MODRED.DOADOR.DOAD_TX_ID_REGISTRO IS 'Identificador do doador internacional no registro de origem.';

commit;

-- TORNANDO DMR NÃO OBRIGATÓRIO PARA DOADOR
ALTER TABLE MODRED.DOADOR  
MODIFY (DOAD_NR_DMR NULL);


-- TABELA QUE GUARDAR A RESERVA DE UM DOADOR INTERNACIONAL PARA BUSCA DE UM PACIENTE.
CREATE TABLE MODRED.RESERVA_DOADOR_INTERNACIONAL
(
  REDI_ID NUMBER NOT NULL 
, REDI_DT_ATUALIZACAO TIMESTAMP NOT NULL 
, DOAD_ID NUMBER NOT NULL 
, BUSC_ID NUMBER NOT NULL 
, REDI_TX_STATUS VARCHAR2(50) NOT NULL
, CONSTRAINT REDI_PK PRIMARY KEY (REDI_ID) ENABLE 
);

COMMENT ON TABLE MODRED.RESERVA_DOADOR_INTERNACIONAL IS 'Tabela que guarda a reserva do doador internacional para um paciente.';
COMMENT ON COLUMN MODRED.RESERVA_DOADOR_INTERNACIONAL.REDI_ID IS 'Identificador sequencial da tabela';
COMMENT ON COLUMN MODRED.RESERVA_DOADOR_INTERNACIONAL.REDI_DT_ATUALIZACAO IS 'Data que ocorreu a última atualização no registro.';
COMMENT ON COLUMN MODRED.RESERVA_DOADOR_INTERNACIONAL.DOAD_ID IS 'Doador internacional que foi reservado para o paciente.';
COMMENT ON COLUMN MODRED.RESERVA_DOADOR_INTERNACIONAL.BUSC_ID IS 'Busca do paciente que recebeu a reserva do doador.';
COMMENT ON COLUMN MODRED.RESERVA_DOADOR_INTERNACIONAL.REDI_TX_STATUS IS 'Status da reserva entre doador e paciente. Pode ser ATIVO ou INATIVO.';

-- CRIAÇÃO DA SEQUENCE DA TABELA DE REDI
CREATE SEQUENCE MODRED.SQ_REDI_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 
INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

-- RELACIONAMENTO COM DOADOR INTERNACIONAL QUE FOI RESERVADO
ALTER TABLE MODRED.RESERVA_DOADOR_INTERNACIONAL
ADD CONSTRAINT FK_REDI_DOAD FOREIGN KEY(DOAD_ID)
REFERENCES MODRED.DOADOR(DOAD_ID)
ENABLE;

-- RELACIONAMENTO COM BUSCA (PACIENTE) QUE RECEBEU A RESERVA
ALTER TABLE MODRED.RESERVA_DOADOR_INTERNACIONAL
ADD CONSTRAINT FK_REDI_BUSC FOREIGN KEY(BUSC_ID)
REFERENCES MODRED.BUSCA(BUSC_ID)
ENABLE;


ALTER TABLE MODRED.EXAME 
ADD (DOAD_ID_NACIONAL NUMBER );

ALTER TABLE MODRED.EXAME_AUD 
ADD (DOAD_ID_NACIONAL NUMBER );

ALTER TABLE MODRED.EXAME 
ADD (DOAD_ID_INTERNACIONAL NUMBER );

ALTER TABLE MODRED.EXAME_AUD 
ADD (DOAD_ID_INTERNACIONAL NUMBER );

ALTER TABLE MODRED.EXAME  
MODIFY (PACI_NR_RMR NULL);

CREATE INDEX MODRED.IN_FK_EXAM_DOAD_NACIONAL ON EXAME (DOAD_ID_NACIONAL);
CREATE INDEX MODRED.IN_FK_EXAM_DOAD_INTERNACIONAL ON EXAME (DOAD_ID_INTERNACIONAL);

ALTER TABLE MODRED.EXAME
ADD CONSTRAINT FK_EXAM_DOAD_NACIONAL FOREIGN KEY
(
  DOAD_ID_NACIONAL 
)
REFERENCES MODRED.DOADOR
(
  DOAD_ID 
)
ENABLE;

ALTER TABLE MODRED.EXAME
ADD CONSTRAINT FK_EXAM_DOAD_INTERNACIONAL FOREIGN KEY
(
  DOAD_ID_INTERNACIONAL 
)
REFERENCES MODRED.DOADOR
(
  DOAD_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.EXAME.DOAD_ID_NACIONAL IS 'Chave estrangeira relacionada ao doador nacional.';
COMMENT ON COLUMN MODRED.EXAME.DOAD_ID_INTERNACIONAL IS 'Chave estrangeira relacionada ao doador internacional.';


-- DATA EXAME DEVE SER PODER SER NULA, POR CONTA DO EXAME INTERNACIONAL
ALTER TABLE MODRED.EXAME  
MODIFY (EXAM_DT_EXAME NULL);

-- LABORATORIO PARTICUPAR DEVE SER PODER SER NULO, POR CONTA DO EXAME INTERNACIONAL
ALTER TABLE MODRED.EXAME  
MODIFY (EXAM_IN_LABORATORIO_PARTICULAR NULL);
COMMIT;