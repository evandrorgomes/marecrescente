ALTER TABLE MODRED.PACIENTE
DROP COLUMN PACI_IN_MOTIVO_CADASTRO;

-- ENDEREÇO DO MÉDICO INSERIDO NO PRÉ CADASTRO
CREATE TABLE MODRED.PRE_CADASTRO_MEDICO_ENDERECO
(
  PCME_ID NUMBER NOT NULL 
, PCME_ID_PAIS NUMBER NOT NULL 
, PCME_TX_CEP VARCHAR2(9) NOT NULL 
, PCME_TX_TIPO_LOGRADOURO VARCHAR2(100) NOT NULL 
, PCME_TX_NOME_LOGRADOURO VARCHAR2(200) NOT NULL 
, PCME_TX_COMPLEMENTO VARCHAR2(255) NOT NULL 
, PCME_TX_BAIRRO VARCHAR2(255) NOT NULL 
, PCME_TX_MUNICIPIO VARCHAR2(255) NOT NULL 
, PCME_TX_SIGLA_UF VARCHAR2(2) NOT NULL 
, PCME_NR_NUMERO NUMBER NOT NULL 
, CONSTRAINT PK_PCME PRIMARY KEY (PCME_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PCME_PK ON MODRED.PRE_CADASTRO_MEDICO_ENDERECO (PCME_ID ASC) 
  )
  ENABLE
);

COMMENT ON TABLE MODRED.PRE_CADASTRO_MEDICO_ENDERECO IS 'Tabela que guarda o endereço defino para oo pré cadastro de médico, onde o mesmo se cadastra e solicita acesso ao Redome e pode ser ou não aprovado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_ID IS 'Identificação da tabela.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_ID_PAIS IS 'País em que reside o médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_CEP IS 'CEP da residência do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_TIPO_LOGRADOURO IS 'Tipo do logradouro do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_COMPLEMENTO IS 'Tipo do logradouro do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_BAIRRO IS 'Tipo do logradouro do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_MUNICIPIO IS 'Tipo do logradouro do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_TX_SIGLA_UF IS 'Tipo do logradouro do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_ENDERECO.PCME_NR_NUMERO IS 'Tipo do logradouro do médico.';

-- ID SEQUENCE DA PRE CADASTRO MEDICO ENDEREÇO
CREATE SEQUENCE MODRED.SQ_PCME_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;


-- TABELA DE PRÉ CADASTRO DO MEDICO
CREATE TABLE MODRED.PRE_CADASTRO_MEDICO
(
  PRCM_ID NUMBER NOT NULL 
, PRCM_TX_CRM VARCHAR2(13) NOT NULL 
, PRCM_TX_NOME VARCHAR2(255) NOT NULL 
, PRCM_TX_LOGIN VARCHAR2(50) NOT NULL 
, PRCM_TX_SENHA VARCHAR2(255) NOT NULL 
, PRCM_TX_ARQUIVO_CRM VARCHAR2(255) NOT NULL 
, PCME_ID NUMBER NOT NULL
, CONSTRAINT PK_PRCM PRIMARY KEY (PRCM_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PRCM_PK ON MODRED.PRE_CADASTRO_MEDICO (PRCM_ID ASC) 
  )
  ENABLE
);

COMMENT ON TABLE MODRED.PRE_CADASTRO_MEDICO IS 'Tabela que guarda o pré cadastro de médico, onde o mesmo se cadastra e solicita acesso ao Redome e pode ser ou não aprovado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_ID IS 'Identificação da tabela.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_CRM IS 'CRM do médico pré cadastrado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_NOME IS 'Nome do médico pré cadastrado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_LOGIN IS 'Login único sugerido pelo médico no pré cadastro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_SENHA IS 'Senha cadastrada pelo médico no pré cadastro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_ARQUIVO_CRM IS 'URL que aponta para o arquivo CRM que o médico informou para validação do cadastro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PCME_ID IS 'ID do endereço informado pelo médico.';

-- ADICIONANDO RELACIONAMENTO COM PRE CADASTRO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO
ADD CONSTRAINT FK_PRCM_PCME FOREIGN KEY(PCME_ID)
REFERENCES MODRED.PRE_CADASTRO_MEDICO_ENDERECO(PCME_ID)
ENABLE;


-- ID SEQUENCE DA PRE CADASTRO MEDICO
CREATE SEQUENCE MODRED.SQ_PRCM_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;



-- TABELA DE PRÉ CADASTRO DOS TELEFONES DE MEDICO
CREATE TABLE MODRED.PRE_CADASTRO_MEDICO_TELEFONE
(
  PCMT_ID NUMBER NOT NULL 
, PCMT_TX_NOME VARCHAR2(100) 
, PCMT_NR_COD_AREA NUMBER(5) NOT NULL
, PCMT_TX_COMPLEMENTO VARCHAR2(20)
, PCMT_IN_TIPO NUMBER NOT NULL
, PCMT_NR_NUMERO NUMBER NOT NULL
, PCMT_IN_PRINCIPAL NUMBER(1) NOT NULL
, PRCM_ID NUMBER NOT NULL
, CONSTRAINT PK_PCMT PRIMARY KEY (PCMT_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PCMT_PK ON MODRED.PRE_CADASTRO_MEDICO_TELEFONE (PCMT_ID ASC) 
  )
  ENABLE
);

COMMENT ON TABLE MODRED.PRE_CADASTRO_MEDICO_TELEFONE IS 'Tabela que guarda os telefones de contato do médico inseridos no pré cadastro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_ID IS 'Identificação da tabela.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_TX_NOME IS 'Nome do contato do médico pré cadastrado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_NR_COD_AREA IS 'Código de área do número informado';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_TX_COMPLEMENTO IS 'Texto livre utilizado para alguma informação adicional ao contato.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_IN_TIPO IS 'Tipo do contato, se é Fixo ou Celular.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_NR_NUMERO IS 'Número do telefonte de contato informado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PCMT_IN_PRINCIPAL IS 'Indica se o contato é o principal ou não (somente um contato pode ser marcado).';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_TELEFONE.PRCM_ID IS 'ID do pré cadastro do médico.';

-- ADICIONANDO RELACIONAMENTO COM PRE CADASTRO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO_TELEFONE
ADD CONSTRAINT FK_PRCM_PCMT FOREIGN KEY(PRCM_ID)
REFERENCES MODRED.PRE_CADASTRO_MEDICO(PRCM_ID)
ENABLE;


-- ID SEQUENCE DA PRE CADASTRO TELEFONES DO MEDICO
CREATE SEQUENCE MODRED.SQ_PCMT_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;



-- TABELA DE PRÉ CADASTRO DOS TELEFONES DE E-MAILS
CREATE TABLE MODRED.PRE_CADASTRO_MEDICO_EMAIL
(
  PCEM_ID NUMBER NOT NULL 
, PCEM_TX_EMAIL VARCHAR2(100) 
, PCEM_IN_PRINCIPAL NUMBER(1) NOT NULL
, PRCM_ID NUMBER NOT NULL
, CONSTRAINT PK_PCEM PRIMARY KEY (PCEM_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PCEM_PK ON MODRED.PRE_CADASTRO_MEDICO_EMAIL (PCEM_ID ASC) 
  )
  ENABLE
);

COMMENT ON TABLE MODRED.PRE_CADASTRO_MEDICO_EMAIL IS 'Tabela que guarda os e-mails para contato com o médico inseridos no pré cadastro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_EMAIL.PCEM_ID IS 'Identificação da tabela.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_EMAIL.PCEM_TX_EMAIL IS 'E-mail de contato do médico.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_EMAIL.PCEM_IN_PRINCIPAL IS 'Indica se o contato é o principal ou não (somente um contato pode ser marcado).';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO_EMAIL.PRCM_ID IS 'ID do pré cadastro do médico.';

-- ADICIONANDO RELACIONAMENTO COM PRE CADASTRO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO_EMAIL
ADD CONSTRAINT FK_PRCM_PCEM FOREIGN KEY(PRCM_ID)
REFERENCES MODRED.PRE_CADASTRO_MEDICO(PRCM_ID)
ENABLE;


-- ID SEQUENCE DA PRE CADASTRO EMAILS DO MEDICO
CREATE SEQUENCE MODRED.SQ_PCEM_ID MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;



-- TABELA DE PRÉ CADASTRO ASSOCIAÇÃO MEDICO E CENTRO AVALIADOR (CENTRO REFERENCIA)
CREATE TABLE MODRED.PRE_CAD_MEDICO_CT_REFERENCIA
(
  PRCM_ID NUMBER NOT NULL 
, CETR_ID NUMBER NOT NULL
, CONSTRAINT PK_PCCR PRIMARY KEY (PRCM_ID, CETR_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_PCCR_PK ON MODRED.PRE_CAD_MEDICO_CT_REFERENCIA (PRCM_ID, CETR_ID ASC) 
  )
  ENABLE
);

COMMENT ON TABLE MODRED.PRE_CAD_MEDICO_CT_REFERENCIA IS 'Tabela de relacionamento entre o pré cadastro do médico e os centros de referência que ele atua (centros avaliadores).';
COMMENT ON COLUMN MODRED.PRE_CAD_MEDICO_CT_REFERENCIA.PRCM_ID IS 'Identificação da tabela pré cadastro médico.';
COMMENT ON COLUMN MODRED.PRE_CAD_MEDICO_CT_REFERENCIA.CETR_ID IS 'Identificação da tabela centro transplante.';

-- RELACIONAMENTO COM PRÉ CADASTRO
ALTER TABLE MODRED.PRE_CAD_MEDICO_CT_REFERENCIA
ADD CONSTRAINT FK_PCCR_PRCM FOREIGN KEY(PRCM_ID)
REFERENCES MODRED.PRE_CADASTRO_MEDICO(PRCM_ID)
ENABLE;

-- RELACIONAMENTO COM CENTRO TRANSPLANTE
ALTER TABLE MODRED.PRE_CAD_MEDICO_CT_REFERENCIA
ADD CONSTRAINT FK_PCCR_CETR FOREIGN KEY(CETR_ID)
REFERENCES MODRED.CENTRO_TRANSPLANTE(CETR_ID)
ENABLE;

CREATE TABLE MODRED.PACIENTE_MISMATCH 
(
  PACI_NR_RMR NUMBER NOT NULL 
, LOCU_ID VARCHAR2(4 BYTE) NOT NULL 
, CONSTRAINT PK_PAMI PRIMARY KEY 
  (
    PACI_NR_RMR 
  , LOCU_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_PAMI ON PACIENTE_MISMATCH (PACI_NR_RMR ASC, LOCU_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_PAMI_LOCU ON PACIENTE_MISMATCH (LOCU_ID ASC);

CREATE INDEX IN_FK_PAMI_PACI ON PACIENTE_MISMATCH (PACI_NR_RMR ASC);

ALTER TABLE MODRED.PACIENTE_MISMATCH
ADD CONSTRAINT FK_PAMI_LOCU FOREIGN KEY
(
  LOCU_ID 
)
REFERENCES LOCUS
(
  LOCU_ID 
)
ENABLE;

ALTER TABLE MODRED.PACIENTE_MISMATCH
ADD CONSTRAINT FK_PAMI_PACI FOREIGN KEY
(
  PACI_NR_RMR 
)
REFERENCES PACIENTE
(
  PACI_NR_RMR 
)
ENABLE;

COMMENT ON TABLE MODRED.PACIENTE_MISMATCH IS 'Tabela para armazenamento do relacionamento entre paciente e locus no sentido de informar quais locus podem ser feitos mismatch para o paciente em questão.';

COMMENT ON COLUMN MODRED.PACIENTE_MISMATCH.PACI_NR_RMR IS 'Número do RMR do paciente que irá ter relacionamento com o locus
';

COMMENT ON COLUMN MODRED.PACIENTE_MISMATCH.LOCU_ID IS 'Código do lócus para relacionamento
';


INSERT INTO MODRED.CONFIGURACAO (CONF_ID, CONF_TX_VALOR)
VALUES ('extensaoArquivoPreCadastro', 'image/png,image/jpeg,image/bmp,image/tiff,image/jpg,application/pdf');
INSERT INTO MODRED.CONFIGURACAO (CONF_ID, CONF_TX_VALOR)
VALUES ('tamanhoArquivoPreCadastroEmByte', '5242880');
INSERT INTO MODRED.CONFIGURACAO (CONF_ID, CONF_TX_VALOR)
VALUES ('quantidadeArquivosPreCadastro', '1');
COMMIT;


-- STATUS DO PRÉ CADASTRO DO MEDICO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO
ADD PRCM_TX_STATUS VARCHAR2(20) NOT NULL;

-- DATA SOLICITAÇÃO DO PRÉ CADASTRO DO MEDICO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO
ADD PRCM_DT_SOLICITACAO TIMESTAMP NOT NULL;

-- CORRIGINDO COMPLEMENTO DO ENDEREÇO QUE NÃO DEVERIA SER OBRIGATÓRIO
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO_ENDERECO
MODIFY PCME_TX_COMPLEMENTO NULL;

-- REMOVENDO O CAMPO SENHA DO PRÉ CADASTRO DO MÉDICO.
ALTER TABLE MODRED.PRE_CADASTRO_MEDICO
DROP COLUMN PRCM_TX_SENHA CASCADE CONSTRAINTS;



ALTER TABLE MODRED.PACriar tela de detalhe do pré cadastroCIENTE 
ADD (PACI_IN_PESQUISA_ANTICORPO NUMBER );

ALTER TABLE MODRED.PACIENTE 
ADD (PACI_DT_EXAME_ANTICORPO DATE );

ALTER TABLE MODRED.PACIENTE 
ADD (PACI_TX_RESULTADO_ANTICORPO VARCHAR2(255) );

COMMENT ON COLUMN MODRED.PACIENTE.PACI_IN_PESQUISA_ANTICORPO IS 'Se o paciente realizou ou não a pesquisa de anticorpo (0 para não e 1 para sim)';

COMMENT ON COLUMN MODRED.PACIENTE.PACI_DT_EXAME_ANTICORPO IS 'Data de realização do exame do anticorpo';

COMMENT ON COLUMN MODRED.PACIENTE.PACI_TX_RESULTADO_ANTICORPO IS 'Texto livre para resultado de exame de anticorpo';



ALTER TABLE MODRED.PACIENTE_AUD 
ADD (PACI_IN_PESQUISA_ANTICORPO NUMBER );

ALTER TABLE MODRED.PACIENTE_AUD 
ADD (PACI_DT_EXAME_ANTICORPO DATE );

ALTER TABLE MODRED.PACIENTE_AUD 
ADD (PACI_TX_RESULTADO_ANTICORPO VARCHAR2(255) );

COMMENT ON COLUMN MODRED.PACIENTE_AUD.PACI_IN_PESQUISA_ANTICORPO IS 'Se o paciente realizou ou não a pesquisa de anticorpo (0 para não e 1 para sim)';

COMMENT ON COLUMN MODRED.PACIENTE_AUD.PACI_DT_EXAME_ANTICORPO IS 'Data de realização do exame do anticorpo';

COMMENT ON COLUMN MODRED.PACIENTE_AUD.PACI_TX_RESULTADO_ANTICORPO IS 'Texto livre para resultado de exame de anticorpo';


ALTER TABLE MODRED.ENDERECO_CONTATO
ADD CONSTRAINT FK_ENCO_MEDI FOREIGN KEY(MEDI_ID)
REFERENCES MODRED.MEDICO(MEDI_ID)
ENABLE;


INSERT INTO MODRED.RECURSO(RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES
(117, 'CONSULTAR_PRE_CADASTRO_MEDICO', 'Permite ao admin consultar a lista de pré cadastro médico');
INSERT INTO PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO) VALUES
(19, 117, 0);
COMMIT;

INSERT INTO MODRED.RECURSO(RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES
(118, 'VISUALIZAR_DETALHE_PRE_CADASTRO_MEDICO', 'Permite ao admin visualizar o detalhe do pré cadastro médico');
INSERT INTO PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO) VALUES
(19, 118, 0);
COMMIT;


-- INCLUINDO RELACAO ENTRE MEDICO E ENDERECO CONTATO
ALTER TABLE MODRED.ENDERECO_CONTATO
ADD MEDI_ID NUMBER;
COMMENT ON COLUMN MODRED.ENDERECO_CONTATO.MEDI_ID IS 'Endereço relacionado ao médico.';

ALTER TABLE MODRED.ENDERECO_CONTATO_AUD
ADD MEDI_ID NUMBER;

ALTER TABLE MODRED.ENDERECO_CONTATO
ADD CONSTRAINT FK_ENCO_MEDI FOREIGN KEY(MEDI_ID)
REFERENCES MODRED.MEDICO(MEDI_ID)
ENABLE;


-- INCLUINDO RELACAO ENTRE MEDICO E CONTATO TELEFONICO
ALTER TABLE MODRED.CONTATO_TELEFONICO
ADD MEDI_ID NUMBER;
COMMENT ON COLUMN MODRED.CONTATO_TELEFONICO.MEDI_ID IS 'Contato relacionado ao médico.';

ALTER TABLE MODRED.CONTATO_TELEFONICO_AUD
ADD MEDI_ID NUMBER;

ALTER TABLE MODRED.CONTATO_TELEFONICO
ADD CONSTRAINT FK_COTE_MEDI FOREIGN KEY(MEDI_ID)
REFERENCES MODRED.MEDICO(MEDI_ID)
ENABLE;

-- INCLUINDO RELACAO ENTRE MEDICO E EMAIL CONTATO
ALTER TABLE MODRED.EMAIL_CONTATO
ADD MEDI_ID NUMBER;
COMMENT ON COLUMN MODRED.EMAIL_CONTATO.MEDI_ID IS 'E-mail relacionado ao médico.';

ALTER TABLE MODRED.EMAIL_CONTATO_AUD
ADD MEDI_ID NUMBER;

ALTER TABLE MODRED.EMAIL_CONTATO
ADD CONSTRAINT FK_EMCO_MEDI FOREIGN KEY(MEDI_ID)
REFERENCES MODRED.MEDICO(MEDI_ID)
ENABLE;


-- APROVAÇÃO DE PRÉ CADASTRO
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('119', 'APROVAR_PRE_CADASTRO_MEDICO', 'Permite aprovação aos pré cadastros incluídos e pendentes de avaliação por parte do Redome.');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('119', '19', '0');
COMMIT;


-- REPROVAÇÃO DE PRÉ CADASTRO
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('120', 'REPROVAR_PRE_CADASTRO_MEDICO', 'Permite reprovação dos pré cadastros incluídos e pendentes de avaliação por parte do Redome.');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('120', '19', '0');
COMMIT;


-- INCLUINDO CAMPO DE URL PARA O ARQUIVO DE CRM INCLUÍDO NO PRÉ CADASTRO.
ALTER TABLE MODRED.MEDICO
ADD MEDI_TX_ARQUIVO_CRM NUMBER;
COMMENT ON COLUMN MODRED.MEDICO.MEDI_TX_ARQUIVO_CRM IS 'URL que aponta para o arquivo CRM, que o médico informou no pré cadastro, para fins de validação do acesso.';


ALTER TABLE MODRED.PRE_CADASTRO_MEDICO 
ADD (PRCM_DT_ATUALIZACAO TIMESTAMP );

ALTER TABLE MODRED.PRE_CADASTRO_MEDICO 
ADD (PRCM_TX_JUSTIFICATIVA VARCHAR2(4000) );

ALTER TABLE MODRED.PRE_CADASTRO_MEDICO 
ADD (USUA_ID NUMBER );

CREATE INDEX MODRED.FK_PRCM_USUA ON MODRED.PRE_CADASTRO_MEDICO (USUA_ID);

ALTER TABLE MODRED.PRE_CADASTRO_MEDICO
ADD CONSTRAINT FK_PRCM_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES MODRED.USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.PRCM_TX_JUSTIFICATIVA IS 'Justificativa pelo qual o pré cadastro foi reprovado.';
COMMENT ON COLUMN MODRED.PRE_CADASTRO_MEDICO.USUA_ID IS 'ID do usuário responsável pela aprovação ou reprovação do pré cadastro.';

UPDATE MODRED.PRE_CADASTRO_MEDICO SET PRCM_DT_ATUALIZACAO = PRCM_DT_SOLICITACAO;
COMMIT;

ALTER TABLE MODRED.PRE_CADASTRO_MEDICO  
MODIFY (PRCM_DT_ATUALIZACAO NOT NULL);

-- INCLUINDO E-MAIL PARA O USUARIO
ALTER TABLE MODRED.USUARIO
ADD USUA_TX_EMAIL VARCHAR2(100);
COMMENT ON COLUMN MODRED.USUARIO.USUA_TX_EMAIL IS 'E-mail, informado pelo usuário, para contato.';

UPDATE MODRED.USUARIO USUA
SET USUA.USUA_TX_EMAIL = LOWER(USUA.USUA_TX_USERNAME) || '@mail.com';

ALTER TABLE MODRED.USUARIO
MODIFY USUA_TX_EMAIL VARCHAR2(100) NOT NULL;


INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('121', 'CONSULTAR_CADASTRO_MEDICO', 'Permite consultar os dados dos médicos cadastrados.');
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('122', 'VISUALIZAR_CADASTRO_MEDICO', 'Permite visualizar os dados dos médicos cadastrados.');
INSERT INTO "MODRED"."RECURSO" (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) 
VALUES ('123', 'ALTERAR_CADASTRO_MEDICO', 'Permite alterar os dados dos médicos cadastrados.');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('121', '19', '0');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('122', '19', '0');
INSERT INTO "MODRED"."PERMISSAO" (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO) VALUES ('123', '19', '0');
COMMIT;


-- TABELA DE ASSOCIAÇÃO MEDICO E CENTRO AVALIADOR (CENTRO REFERENCIA)
CREATE TABLE MODRED.MEDICO_CT_REFERENCIA
(
  MEDI_ID NUMBER NOT NULL 
, CETR_ID NUMBER NOT NULL
, CONSTRAINT PK_MECR PRIMARY KEY (MEDI_ID, CETR_ID)
  USING INDEX (
      CREATE UNIQUE INDEX IN_MECR_PK ON MODRED.MEDICO_CT_REFERENCIA (MEDI_ID, CETR_ID ASC) 
  )
  ENABLE
);


COMMENT ON TABLE MODRED.MEDICO_CT_REFERENCIA IS 'Tabela de relacionamento entre o médico e os centros de referência que ele atua (centros avaliadores).';
COMMENT ON COLUMN MODRED.MEDICO_CT_REFERENCIA.MEDI_ID IS 'Identificação da tabela médico.';
COMMENT ON COLUMN MODRED.MEDICO_CT_REFERENCIA.CETR_ID IS 'Identificação da tabela centro transplante.';

-- RELACIONAMENTO COM MEDICO
ALTER TABLE MODRED.MEDICO_CT_REFERENCIA
ADD CONSTRAINT FK_MECR_MEDI FOREIGN KEY(MEDI_ID)
REFERENCES MODRED.MEDICO(MEDI_ID)
ENABLE;

-- RELACIONAMENTO COM CENTRO TRANSPLANTE
ALTER TABLE MODRED.MEDICO_CT_REFERENCIA
ADD CONSTRAINT FK_MECR_CETR FOREIGN KEY(CETR_ID)
REFERENCES MODRED.CENTRO_TRANSPLANTE(CETR_ID)
ENABLE;

-- CORRIGINDO O TIPO DE CAMPO CRIADO INCORRETAMENTE PARA O ARQUIVO DE CRM
ALTER TABLE MODRED.MEDICO
MODIFY MEDI_TX_ARQUIVO_CRM VARCHAR2(255);

UPDATE MODRED.MEDICO
SET MEDI_TX_ARQUIVO_CRM = 'CRM_MEDICO/' || MEDI_TX_CRM || '/crm.pdf';

ALTER TABLE MODRED.MEDICO
MODIFY MEDI_TX_ARQUIVO_CRM VARCHAR2(255) NOT NULL;


-- TORNANDO CAMPO DE CONTATO NÃO OBRIGATÓRIOS POR CONTA DO PRÉ CADASTRO DE MÉDICO
ALTER TABLE MODRED.CONTATO_TELEFONICO
MODIFY COTE_TX_NOME NULL;

ALTER TABLE MODRED.CONTATO_TELEFONICO
MODIFY COTE_NR_COD_INTER NULL;


-- ADICIONANDO CAMPO NA AUDITORIA DE ENDERECO CONTATO
ALTER TABLE MODRED.ENDERECO_CONTATO_AUD
ADD MEDI_ID NUMBER;

CREATE TABLE MODRED.ARQUIVO_EVOLUCAO 
(
  AREV_ID NUMBER NOT NULL 
, EVOL_ID NUMBER NOT NULL 
, AREV_TX_CAMINHO_ARQUIVO VARCHAR2(250 BYTE) NOT NULL 
, CONSTRAINT PK_AREV_ID PRIMARY KEY 
  (
    AREV_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_AREV_ID ON MODRED.ARQUIVO_EVOLUCAO (AREV_ID ASC)
  )
  ENABLE 
);

CREATE INDEX IN_FK_AREV_EVOL ON MODRED.ARQUIVO_EVOLUCAO (EVOL_ID ASC);


ALTER TABLE MODRED.ARQUIVO_EVOLUCAO
ADD CONSTRAINT FK_AREV_EVOL FOREIGN KEY
(
  EVOL_ID 
)
REFERENCES EVOLUCAO
(
  EVOL_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.ARQUIVO_EVOLUCAO IS 'Tabela de relacionamento ente evolução e seus arquivos ';

COMMENT ON COLUMN MODRED.ARQUIVO_EVOLUCAO.AREV_ID IS 'Chave primária da tabela';

COMMENT ON COLUMN MODRED.ARQUIVO_EVOLUCAO.EVOL_ID IS 'Referência de evolução';

COMMENT ON COLUMN MODRED.ARQUIVO_EVOLUCAO.AREV_TX_CAMINHO_ARQUIVO IS 'Caminho do arquivo de evolução';


CREATE SEQUENCE MODRED.SQ_AREV_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;



INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('quantidadeMaximaArquivosEvolucao', '5');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('extensaoArquivoEvolucao', 'application/pdf');
INSERT INTO "MODRED"."CONFIGURACAO" (CONF_ID, CONF_TX_VALOR) VALUES ('tamanhoArquivoEvolucao', '5242880');
commit;


INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES
(124, 'EXCLUIR_TELEFONE_CONTATO_MEDICO', 'Permite excluir um telefone do médico');
INSERT INTO MODRED.RECURSO (RECU_ID, RECU_TX_SIGLA, RECU_TX_DESCRICAO) VALUES
(125, 'EXCLUIR_EMAIL_CONTATO_MEDICO', 'Permite excluir um email do médico');
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO) VALUES (19, 124, 0);
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO) VALUES (19, 125, 0);
COMMIT;


INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 122, 0);
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 123, 0);
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 124, 0);
INSERT INTO MODRED.PERMISSAO (PERF_ID, RECU_ID, PERM_IN_COM_RESTRICAO)
VALUES (1, 125, 0);
COMMIT;


ALTER TABLE PACIENTE 
DROP CONSTRAINT FK_PACI_CETR_TRANSPLANTADOR;

ALTER TABLE PACIENTE 
DROP COLUMN CETR_ID_TRANSPLANTADOR;
