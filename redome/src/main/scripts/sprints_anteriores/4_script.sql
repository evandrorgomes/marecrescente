-- AJUSTE NA TABELA DE PACIENTE --
ALTER TABLE MODRED.PACIENTE  
MODIFY (PACI_DT_CADASTRO TIMESTAMP);

-- AJUSTE NA TABELA DE EVOLUÇÃO --
ALTER TABLE MODRED.EVOLUCAO  
MODIFY (EVOL_DT_CRIACAO TIMESTAMP);

--- INICIO / SPRINT 2 ---
-- AJUSTE NA TABELA DE CONTATO_ENDERECO(ANTIGA) --
ALTER TABLE MODRED.CONTATO_ENDERECO
RENAME TO ENDERECO_CONTATO;

-- NOMES DAS COLUNAS ATUALIZADOS DA TABELA PACIENTE
ALTER TABLE MODRED.PACIENTE  
RENAME COLUMN COEN_ID TO ENCO_ID;

ALTER TABLE MODRED.PACIENTE
RENAME CONSTRAINT FK_PACI_COEN TO FK_PACI_ENCO;

-- NOMES DAS COLUNAS ATUALIZADOS DA TABELA ENDERECO_CONTATO
ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_ID TO ENCO_ID;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_ID_PAIS TO ENCO_ID_PAIS;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN  COEN_CEP TO ENCO_CEP;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_TIPO_LOGRADOURO TO ENCO_TX_TIPO_LOGRADOURO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_NOME TO ENCO_TX_NOME;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_NR_NUMERO TO ENCO_NR_NUMERO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_COMPLEMENTO TO ENCO_TX_COMPLEMENTO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_BAIRRO TO ENCO_TX_BAIRRO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_MUNICIPIO TO ENCO_TX_MUNICIPIO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_SIGLA_UF TO ENCO_TX_SIGLA_UF;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME COLUMN COEN_TX_ENDERECO_ESTRANGEIRO TO ENCO_TX_ENDERECO_ESTRANGEIRO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME CONSTRAINT PK_COEN TO PK_ENCO;

ALTER TABLE MODRED.ENDERECO_CONTATO
RENAME CONSTRAINT FK_COEN_PAIS TO FK_ENCO_PAIS;

-- SEQUENCE E GRANT
RENAME SQ_COEN_ID TO SQ_ENCO_ID;

--- FIM / SPRINT 2 ---


-- SPRINT 4

-- INICIO - > EXAME
CREATE TABLE MODRED.EXAME 
(
  EXAM_ID NUMBER NOT NULL 
, EXAM_DT_EXAME DATE NOT NULL 
, EXAM_DT_CRIACAO TIMESTAMP NOT NULL 
, PACI_NR_RMR NUMBER NOT NULL 
, CONSTRAINT PK_EXAM PRIMARY KEY 
  (
    EXAM_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_EXAM ON MODRED.EXAME (EXAM_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_EXAM_PACI ON MODRED.EXAME (PACI_NR_RMR);

ALTER TABLE MODRED.EXAME
ADD CONSTRAINT FK_EXAM_PACI FOREIGN KEY
(
  PACI_NR_RMR 
)
REFERENCES MODRED.PACIENTE
(
  PACI_NR_RMR 
)
ENABLE;

COMMENT ON TABLE MODRED.EXAME IS 'Tabela de exames de um paciente';
COMMENT ON COLUMN MODRED.EXAME.EXAM_ID IS 'Chave primária de exame';
COMMENT ON COLUMN MODRED.EXAME.EXAM_DT_EXAME IS 'Data do exame';
COMMENT ON COLUMN MODRED.EXAME.EXAM_DT_CRIACAO IS 'Data de criação do registro';
COMMENT ON COLUMN MODRED.EXAME.PACI_NR_RMR IS 'Chave estrangeira relacionada ao paciente';

-- SEQUENCE
CREATE SEQUENCE  "MODRED"."SQ_EXAM_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

-- FIM - > EXAME


-- INICIO - > ARQUIVO_EXAME
CREATE TABLE MODRED.ARQUIVO_EXAME 
(
  AREX_TX_CAMINHO_ARQUIVO VARCHAR2(255 BYTE) NOT NULL 
, EXAM_ID NUMBER NOT NULL 
, AREX_ID NUMBER NOT NULL 
, CONSTRAINT PK_AREX PRIMARY KEY 
  (
    AREX_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_AREX_ID ON MODRED.ARQUIVO_EXAME (AREX_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_AREX_EXAM ON MODRED.ARQUIVO_EXAME (EXAM_ID ASC);

ALTER TABLE MODRED.ARQUIVO_EXAME
ADD CONSTRAINT FK_AREX_EXAM FOREIGN KEY
(
  EXAM_ID 
)
REFERENCES MODRED.EXAME
(
  EXAM_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.ARQUIVO_EXAME IS 'Tabela que guarda o caminho dos arquivos de laudo do exame de um paciente';
COMMENT ON COLUMN MODRED.ARQUIVO_EXAME.AREX_TX_CAMINHO_ARQUIVO IS 'caminho dos arquivos do laudo';
COMMENT ON COLUMN MODRED.ARQUIVO_EXAME.EXAM_ID IS 'Chave estrangeira da tabela de exame';
COMMENT ON COLUMN MODRED.ARQUIVO_EXAME.AREX_ID IS 'Chave primária da tabela';

-- SEQUENCE
CREATE SEQUENCE  "MODRED"."SQ_AREX_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

-- FIM - > ARQUIVO_EXAME


-- INICIO - > METODOLOGIA
CREATE TABLE MODRED.METODOLOGIA 
(
  METO_ID NUMBER NOT NULL 
, METO_TX_SIGLA VARCHAR2(5) NOT NULL 
, METO_TX_DESCRICAO VARCHAR2(40) NOT NULL 
, CONSTRAINT PK_METO PRIMARY KEY 
  (
    METO_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_METO_ID ON MODRED.METODOLOGIA (METO_ID ASC) 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.METODOLOGIA IS 'Tabela de domínio de metodologias';
COMMENT ON COLUMN MODRED.METODOLOGIA.METO_ID IS 'Chave primária de metodologia';
COMMENT ON COLUMN MODRED.METODOLOGIA.METO_TX_SIGLA IS 'Sigla da metodologia';
COMMENT ON COLUMN MODRED.METODOLOGIA.METO_TX_DESCRICAO IS 'Descrição da metodologia';

-- SEQUENCE
CREATE SEQUENCE  "MODRED"."SQ_METO_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

-- FIM -> METODOLOGIA


-- INICIO -> METODOLOGIA_EXAME
CREATE TABLE MODRED.METODOLOGIA_EXAME 
(
  EXAM_ID NUMBER NOT NULL 
, METO_ID NUMBER NOT NULL 
, CONSTRAINT PK_MEEX PRIMARY KEY 
  (
    EXAM_ID, METO_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_MEEX_ID ON MODRED.METODOLOGIA_EXAME (EXAM_ID, METO_ID) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_MEEX_EXAM ON MODRED.METODOLOGIA_EXAME (EXAM_ID);
CREATE INDEX IN_FK_MEEX_METO ON MODRED.METODOLOGIA_EXAME (METO_ID);

ALTER TABLE MODRED.METODOLOGIA_EXAME
ADD CONSTRAINT FK_MEEX_EXAM FOREIGN KEY
(
  EXAM_ID 
)
REFERENCES MODRED.EXAME
(
  EXAM_ID 
)
ENABLE;

ALTER TABLE MODRED.METODOLOGIA_EXAME
ADD CONSTRAINT FK_MEEX_METO FOREIGN KEY
(
  METO_ID 
)
REFERENCES MODRED.METODOLOGIA
(
  METO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.METODOLOGIA_EXAME IS 'Tabela de relacionamento entre metodologia e exame';
COMMENT ON COLUMN MODRED.METODOLOGIA_EXAME.EXAM_ID IS 'Chave estrangeira para exame';
COMMENT ON COLUMN MODRED.METODOLOGIA_EXAME.METO_ID IS 'Chave estrangeira pra metodologia';

-- NÃO HÁ SEQUENCE

-- FIM -> METODOLOGIA_EXAME


-- INICIO -> LOCUS
CREATE TABLE MODRED.LOCUS 
(
  LOCU_ID VARCHAR2(4) NOT NULL 
, CONSTRAINT PK_LOCU PRIMARY KEY 
  (
    LOCU_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_LOCU ON LOCUS (LOCU_ID ASC) 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.LOCUS IS 'Tabela de domínio de locus';
COMMENT ON COLUMN MODRED.LOCUS.LOCU_ID IS 'Chave Primária do locus exame que é um código';

-- NÃO HÁ SEQUENCE

-- FIM -> LOCUS


-- INICIO -> LOCUS_EXAME
CREATE TABLE MODRED.LOCUS_EXAME 
(
  LOEX_TX_PRIMEIRO_ALELO VARCHAR2(20 BYTE) NOT NULL 
, LOEX_TX_SEGUNDO_ALELO VARCHAR2(20 BYTE) NOT NULL 
, LOCU_ID VARCHAR2(4 BYTE) NOT NULL 
, EXAM_ID NUMBER NOT NULL 
, CONSTRAINT PK_LOEX PRIMARY KEY 
  (
    LOCU_ID 
  , EXAM_ID 
  )
  ENABLE 
);

CREATE INDEX IN_FK_LOEX_EXAM ON MODRED.LOCUS_EXAME (EXAM_ID ASC);

CREATE INDEX IN_FK_LOEX_LOCU ON MODRED.LOCUS_EXAME (LOCU_ID ASC);

ALTER TABLE MODRED.LOCUS_EXAME
ADD CONSTRAINT FK_LOEX_EXAM FOREIGN KEY
(
  EXAM_ID 
)
REFERENCES EXAME
(
  EXAM_ID 
)
ENABLE;

ALTER TABLE MODRED.LOCUS_EXAME
ADD CONSTRAINT FK_LOEX_LOCU FOREIGN KEY
(
  LOCU_ID 
)
REFERENCES MODRED.LOCUS
(
  LOCU_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.LOCUS_EXAME IS 'Tabela de locus de um determinado exame do paciente';
COMMENT ON COLUMN MODRED.LOCUS_EXAME.LOEX_TX_PRIMEIRO_ALELO IS 'Codigo do primeiro alelo';
COMMENT ON COLUMN MODRED.LOCUS_EXAME.LOEX_TX_SEGUNDO_ALELO IS 'Codigo do segundo alelo';
COMMENT ON COLUMN MODRED.LOCUS_EXAME.LOCU_ID IS 'Chave estrangeira para locus';
COMMENT ON COLUMN MODRED.LOCUS_EXAME.EXAM_ID IS 'Chave estrangeira para exame';

-- NÃO HÁ SEQUENCE

-- FIM -> LOCUS_EXAME


-- INICIO -> CONFIGURACAO
CREATE TABLE MODRED.CONFIGURACAO 
(
  CONF_ID VARCHAR2(20) NOT NULL 
, CONF_TX_VALOR VARCHAR2(255) NOT NULL 
, CONSTRAINT PK_CONF PRIMARY KEY 
  (
    CONF_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_CONF ON MODRED.CONFIGURACAO (CONF_ID ASC) 
  )
  ENABLE 
);

COMMENT ON TABLE MODRED.CONFIGURACAO IS 'Tabela de configuração do sistema';
COMMENT ON COLUMN MODRED.CONFIGURACAO.CONF_ID IS 'Chave que será consultada o valor da configuração';
COMMENT ON COLUMN MODRED.CONFIGURACAO.CONF_TX_VALOR IS 'Configuração a ser utilizada pela aplicação';

-- NÃO HÁ SEQUENCE

-- FIM -> CONFIGURACAO

--INCLUSÃO DE REGISTROS DE TESTES PARA METODOLOGIA--
INSERT INTO MODRED.METODOLOGIA(METO_ID,METO_TX_SIGLA,METO_TX_DESCRICAO)VALUES(1, 'M1', 'METODOLOGIA 1');
INSERT INTO MODRED.METODOLOGIA(METO_ID,METO_TX_SIGLA,METO_TX_DESCRICAO)VALUES(2, 'M2', 'METODOLOGIA 2');
INSERT INTO MODRED.METODOLOGIA(METO_ID,METO_TX_SIGLA,METO_TX_DESCRICAO)VALUES(3, 'M3', 'METODOLOGIA 3');
commit;

--INCLUSÃO DE ALELOS
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('A');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('B');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('C');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DRB1');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DRB3');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DRB4');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DRB5');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DPA1');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DPB1');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DQA1');
INSERT INTO MODRED.LOCUS(LOCU_ID)VALUES('DQB1');
commit;

-- INICIO DNA E NMDP
CREATE TABLE MODRED.VALOR_DNA 
(
  LOCU_ID VARCHAR2(4) NOT NULL 
, VADN_TX_VALOR VARCHAR2(20) NOT NULL
, VADN_TX_VALOR_G VARCHAR2(20)
, VADN_TX_VALOR_P VARCHAR2(20) 
, CONSTRAINT FK_VADN_LOCU FOREIGN KEY
(
  LOCU_ID 
)
REFERENCES MODRED.LOCUS
(
  LOCU_ID 
)
ENABLE);

CREATE INDEX IN_FK_VADN_LOCU ON MODRED.VALOR_DNA (LOCU_ID ASC);

COMMENT ON TABLE MODRED.VALOR_DNA IS 'TABELA DE VALORES DNA';
COMMENT ON COLUMN MODRED.VALOR_DNA.LOCU_ID IS 'CHAVE ESTRANGEIRA RELACIONADA AO LOCUS';
COMMENT ON COLUMN MODRED.VALOR_DNA.VADN_TX_VALOR IS 'VALOR DNA';
COMMENT ON COLUMN MODRED.VALOR_DNA.VADN_TX_VALOR_G IS 'VALOR DE AGRUPAMENTO G';
COMMENT ON COLUMN MODRED.VALOR_DNA.VADN_TX_VALOR_P IS 'VALOR DE AGRUPAMENTO P';


CREATE TABLE MODRED.VALOR_NMDP 
(
  VANM_ID_CODIGO VARCHAR2(10) NOT NULL 
, VANM_TX_SUBTIPO VARCHAR2(4000) NOT NULL 
, VAMN_IN_AGRUPADO NUMBER(1) DEFAULT 0 NOT NULL 
, CONSTRAINT PK_VANM PRIMARY KEY 
(
  VANM_ID_CODIGO 
)
ENABLE);

COMMENT ON TABLE MODRED.VALOR_NMDP IS 'TABELA DE VALORES NMDP';
COMMENT ON COLUMN MODRED.VALOR_NMDP.VANM_ID_CODIGO IS 'CÓDIGO NMDP';
COMMENT ON COLUMN MODRED.VALOR_NMDP.VANM_TX_SUBTIPO IS 'VALORES ALELICOS';
COMMENT ON COLUMN MODRED.VALOR_NMDP.VAMN_IN_AGRUPADO IS 'DEFINE SE O VALOR ALELIXO ESTA AGRUPADO EX: 13:05/13:06';


CREATE TABLE MODRED.VALOR_DNA_NMDP 
(
  LOCU_ID VARCHAR2(4) NOT NULL 
, DNNM_TX_VALOR VARCHAR2(20) NOT NULL 
, CONSTRAINT FK_DNNM_LOCU FOREIGN KEY
(
  LOCU_ID 
)
REFERENCES MODRED.LOCUS
(
  LOCU_ID 
)
ENABLE
);

CREATE INDEX IN_FK_DNNM_LOCU ON MODRED.VALOR_DNA_NMDP (LOCU_ID ASC);

COMMENT ON TABLE MODRED.VALOR_DNA_NMDP IS 'TABELA DE RESULTADO DOS VALORES VALIDOS DE DNA E NMDP';
COMMENT ON COLUMN MODRED.VALOR_DNA_NMDP.LOCU_ID IS 'CHAVE ESTRANGEIRA RELACIONADA AO LOCUS';
COMMENT ON COLUMN MODRED.VALOR_DNA_NMDP.DNNM_TX_VALOR IS 'VALORES VALIDOS SOROLOGIA E NMDP';


-- NÃO HÁ SEQUENCE

-- FIM DNA E NMDP
ALTER TABLE MODRED.CONFIGURACAO  
MODIFY (CONF_ID VARCHAR2(40 BYTE) );

--Inserindo configuracoes
insert into MODRED.configuracao(CONF_ID,CONF_TX_VALOR) values ('extensaoArquivoLaudo' , 'image/png,image/jpeg,image/bmp,image/tiff,image/jpg');
insert into MODRED.configuracao(CONF_ID,CONF_TX_VALOR) values ('tamanhoArquivoLaudoEmByte','5242880');
insert into MODRED.configuracao(CONF_ID,CONF_TX_VALOR) values ('qtdArquivosLaudo','5');

-- LOCUS - INCLUSÃO COLUNA ORDEM.
ALTER TABLE MODRED.LOCUS 
ADD (LOCU_NR_ORDEM NUMBER);
COMMENT ON COLUMN MODRED.LOCUS.LOCU_NR_ORDEM IS 'Ordem do locus para ser apresentada na tela ';

UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '1' WHERE LOCU_ID = 'A';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '2' WHERE LOCU_ID = 'B';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '3' WHERE LOCU_ID = 'C';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '4' WHERE LOCU_ID = 'DRB1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '5' WHERE LOCU_ID = 'DRB3';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '6' WHERE LOCU_ID = 'DRB4';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '7' WHERE LOCU_ID = 'DRB5';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '8' WHERE LOCU_ID = 'DPA1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '9' WHERE LOCU_ID = 'DPB1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '10' WHERE LOCU_ID = 'DQA1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '11' WHERE LOCU_ID = 'DQB1';

commit;

-- AJUSTES

ALTER INDEX PACIENTE_PK 
RENAME TO PK_PACI;

ALTER INDEX PK_COEN 
RENAME TO PK_ENCO;

CREATE INDEX IN_FK_PACI_ENCO ON MODRED.PACIENTE (ENCO_ID ASC);

CREATE INDEX IN_FK_PACI_ETNI ON MODRED.PACIENTE (ETNI_ID ASC);

CREATE INDEX IN_FK_PACI_PAIS ON MODRED.PACIENTE (PAIS_ID ASC);

CREATE INDEX IN_FK_PACI_RACA ON MODRED.PACIENTE (RACA_ID ASC);

CREATE INDEX IN_FK_PACI_UF ON MODRED.PACIENTE (UF_SIGLA ASC);

CREATE INDEX IN_FK_PACI_USUA ON MODRED.PACIENTE (USUA_ID ASC);

CREATE INDEX IN_PACI_RESP ON MODRED.PACIENTE (RESP_ID ASC);

ALTER INDEX MOTIVO_PK 
RENAME TO PK_MOTI;

ALTER INDEX IN_PK_EXAM 
RENAME TO PK_EXAM;

ALTER INDEX IN_AREX_ID 
RENAME TO PK_AREX;

ALTER INDEX IN_METO_ID 
RENAME TO PK_METO;

ALTER INDEX IN_MEEX_ID 
RENAME TO PK_MEEX;

ALTER INDEX IN_PK_LOCU 
RENAME TO PK_LOCU;

ALTER INDEX IN_PK_CONF 
RENAME TO PK_CONF;

UPDATE MODRED.LOCUS SET LOCU_NR_ORDEM = NULL;

ALTER TABLE MODRED.LOCUS  
MODIFY (LOCU_NR_ORDEM NUMBER(2));

UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '1' WHERE LOCU_ID = 'A';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '2' WHERE LOCU_ID = 'B';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '3' WHERE LOCU_ID = 'C';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '4' WHERE LOCU_ID = 'DRB1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '5' WHERE LOCU_ID = 'DRB3';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '6' WHERE LOCU_ID = 'DRB4';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '7' WHERE LOCU_ID = 'DRB5';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '8' WHERE LOCU_ID = 'DPA1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '9' WHERE LOCU_ID = 'DPB1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '10' WHERE LOCU_ID = 'DQA1';
UPDATE "MODRED"."LOCUS" SET LOCU_NR_ORDEM = '11' WHERE LOCU_ID = 'DQB1';

ALTER TABLE MODRED.LOCUS  
MODIFY (LOCU_NR_ORDEM NUMBER(2) NOT NULL);

ALTER TABLE MODRED.EVOLUCAO 
ADD (EVOL_AUX NUMBER(1) DEFAULT 0 NOT NULL);

UPDATE MODRED.EVOLUCAO SET EVOL_AUX=EVOL_IN_TRANSPLANTADO;

ALTER TABLE MODRED.EVOLUCAO 
DROP COLUMN EVOL_IN_TRANSPLANTADO;

ALTER TABLE MODRED.EVOLUCAO 
RENAME COLUMN EVOL_AUX TO EVOL_IN_TRANSPLANTADO;

ALTER TABLE MODRED.ENDERECO_CONTATO 
ADD (ENCO_AUX NUMBER(10));

UPDATE MODRED.ENDERECO_CONTATO SET ENCO_AUX=ENCO_NR_NUMERO;

ALTER TABLE MODRED.ENDERECO_CONTATO 
DROP COLUMN ENCO_NR_NUMERO;

ALTER TABLE MODRED.ENDERECO_CONTATO 
RENAME COLUMN ENCO_AUX TO ENCO_NR_NUMERO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
ADD (COTE_AUX NUMBER(1));

UPDATE MODRED.CONTATO_TELEFONICO SET COTE_AUX=COTE_IN_TIPO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
DROP COLUMN COTE_IN_TIPO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
RENAME COLUMN COTE_AUX TO COTE_IN_TIPO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
MODIFY (COTE_IN_TIPO NUMBER(1) NOT NULL);

ALTER TABLE MODRED.CONTATO_TELEFONICO 
ADD (COTE_AUX NUMBER(10));

UPDATE MODRED.CONTATO_TELEFONICO SET COTE_AUX=COTE_NR_NUMERO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
DROP COLUMN COTE_NR_NUMERO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
RENAME COLUMN COTE_AUX TO COTE_NR_NUMERO;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
MODIFY (COTE_NR_NUMERO NOT NULL);

ALTER TABLE MODRED.CONTATO_TELEFONICO 
ADD (COTE_AUX NUMBER(1));

UPDATE MODRED.CONTATO_TELEFONICO SET COTE_AUX=COTE_IN_PRINCIPAL;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
DROP COLUMN COTE_IN_PRINCIPAL;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
RENAME COLUMN COTE_AUX TO COTE_IN_PRINCIPAL;

ALTER TABLE MODRED.CONTATO_TELEFONICO 
MODIFY (COTE_IN_PRINCIPAL DEFAULT 0 NOT NULL);

COMMENT ON COLUMN MODRED.LOCUS.LOCU_NR_ORDEM IS 'Ordem do locus para ser apresentada na tela';
COMMENT ON COLUMN MODRED.EVOLUCAO.EVOL_IN_TRANSPLANTADO IS 'Indica se o paciente já foi transplantado anteriormente';
COMMENT ON COLUMN ENDERECO_CONTATO.ENCO_NR_NUMERO IS 'Número do logradouro';
COMMENT ON COLUMN MODRED.CONTATO_TELEFONICO.COTE_IN_TIPO IS 'Tipo do contato (1 - fixo, 2- celular)';
COMMENT ON COLUMN MODRED.CONTATO_TELEFONICO.COTE_NR_NUMERO IS 'Número do Telefone';
COMMENT ON COLUMN MODRED.CONTATO_TELEFONICO.COTE_IN_PRINCIPAL IS 'Flag para definir se o telefone será o principal ou não (1- principal, 0-não principal)';

-- AJUSTES ARQUIVO_EXAME
ALTER TABLE MODRED.ARQUIVO_EXAME
MODIFY (AREX_TX_CAMINHO_ARQUIVO VARCHAR2(263));

COMMIT;

-- Atualizando a configuração de extensaoArquivoLaudo
update configuracao set CONF_TX_VALOR = 'image/png,image/jpeg,image/bmp,image/tiff,image/jpg' where CONF_ID = 'extensaoArquivoLaudo';

commit;

-- MOTIVO DO CADASTRO DO PACIENTE (ATUALMENTE, APARENTADO OU NÃO) 
ALTER TABLE MODRED.PACIENTE ADD PACI_IN_MOTIVO_CADASTRO NUMBER(1); 

-- ... ATUALIZANDO COM NAO APARENTADO (DISPONÍVEL PARA BUSCA) 
UPDATE MODRED.PACIENTE SET PACI_IN_MOTIVO_CADASTRO = 0;

-- ... COLOCANDO COMO OBRIGATORIO 
ALTER TABLE MODRED.PACIENTE MODIFY PACI_IN_MOTIVO_CADASTRO NUMBER(1) NOT NULL; 

-- COMENTÁRIO DA COLUNA MOTIVO 
COMMENT ON COLUMN MODRED.PACIENTE.PACI_IN_MOTIVO_CADASTRO IS 'Define se o paciente estará disponível para busca (0 - não aparentado) ou não (1 - aparentado)'; 

-- CENTRO AVALIADOR DO CADASTRO DO PACIENTE 
CREATE TABLE MODRED.CENTRO_AVALIADOR (   
CEAV_ID NUMBER NOT NULL,   
CEAV_TX_NOME VARCHAR2(50) NOT NULL,   
CEAV_TX_CNPJ VARCHAR2(14) NOT NULL,   
CEAV_TX_CNES VARCHAR2(10) NOT NULL,   
CONSTRAINT PK_CEAV PRIMARY KEY   (CEAV_ID)   ENABLE ); 

COMMENT ON TABLE MODRED.CENTRO_AVALIADOR IS 'Tabela de Centros Avaliadores de pacientes para realização de transplantes.';
COMMENT ON COLUMN MODRED.CENTRO_AVALIADOR.CEAV_ID IS 'Chave primária da tabela.'; 
COMMENT ON COLUMN MODRED.CENTRO_AVALIADOR.CEAV_TX_NOME IS 'Nome do centro avaliador.'; 
COMMENT ON COLUMN MODRED.CENTRO_AVALIADOR.CEAV_TX_CNPJ IS 'CNPJ do centro avalidor.'; 
COMMENT ON COLUMN MODRED.CENTRO_AVALIADOR.CEAV_TX_CNES IS 'CNES ao qual está inserido o centro avaliador. (Cadastro Nacional de Estabelecimentos de Saúde).'; 

-- INCLUSÃO DO CAMPO DE CHAVE ESTRANGEIRA NO PACIENTE 
ALTER TABLE MODRED.PACIENTE ADD CEAV_ID NUMBER; 
COMMENT ON COLUMN MODRED.PACIENTE.CEAV_ID IS 'Referência para a tabela CENTRO_AVALIADOR.'; 

-- CHAVE ESTRANGEIRA 
ALTER TABLE MODRED.PACIENTE ADD CONSTRAINT FK_PACI_CEAV FOREIGN KEY (CEAV_ID) REFERENCES MODRED.CENTRO_AVALIADOR (CEAV_ID) ENABLE; 

-- INDEX 
CREATE INDEX IN_FK_PACI_CEAV ON MODRED.PACIENTE (CEAV_ID ASC); 

commit;

-- Removendo sequence de metodologia
DROP SYNONYM MODRED_APLICACAO.SQ_METO_ID;
DROP SEQUENCE MODRED.SQ_METO_ID;

commit;

-- Ajuste no relacionamento entre CID e Estágio da doença

-- remoção de fk da tabela de estagio doença
ALTER TABLE MODRED.ESTAGIO_DOENCA 
DROP CONSTRAINT FK_ESDO_CID;

ALTER TABLE MODRED.ESTAGIO_DOENCA 
DROP COLUMN CID_ID;

-- Criação da tabela de relacionamento
CREATE TABLE MODRED.CID_ESTAGIO_DOENCA 
(
  CID_ID NUMBER NOT NULL 
, ESDO_ID NUMBER NOT NULL 
, CONSTRAINT PK_CIED PRIMARY KEY 
  (
    CID_ID 
  , ESDO_ID 
  )
  ENABLE 
);

ALTER TABLE MODRED.CID_ESTAGIO_DOENCA
ADD CONSTRAINT FK_CIED_CID FOREIGN KEY
(
  CID_ID 
)
REFERENCES MODRED.CID
(
  CID_ID 
)
ENABLE;

ALTER TABLE MODRED.CID_ESTAGIO_DOENCA
ADD CONSTRAINT FK_CIED_ESDO FOREIGN KEY
(
  ESDO_ID 
)
REFERENCES MODRED.ESTAGIO_DOENCA
(
  ESDO_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.CID_ESTAGIO_DOENCA IS 'Tabela de relacionamento entre CIDs e Estágios de doenças.';

COMMENT ON COLUMN MODRED.CID_ESTAGIO_DOENCA.CID_ID IS 'Identificador único de CID.';

COMMENT ON COLUMN MODRED.CID_ESTAGIO_DOENCA.ESDO_ID IS 'Identificador único de estágio da doença.';

commit;

-- Aumentando o tamanho da descrição do CID e Centro Avaliador
ALTER TABLE MODRED.CID  
MODIFY (CID_TX_DESCRICAO VARCHAR2(300 BYTE) );

ALTER TABLE CENTRO_AVALIADOR  
MODIFY (CEAV_TX_NOME VARCHAR2(60 BYTE) );

commit;

-- Alteração para a sprint 4 estoria 1.4 --
DELETE FROM MODRED.LOGRADOURO_CORREIO;
DELETE FROM MODRED.BAIRRO_CORREIO;
DELETE FROM MODRED.LOCALIDADE_CORREIO;
DELETE FROM MODRED.UNIDADE_FEDERATIVA_CORREIO;
DELETE FROM MODRED.PAIS_CORREIO;
DELETE FROM MODRED.TIPO_LOGRADOURO_CORREIO;

ALTER TABLE MODRED.UNIDADE_FEDERATIVA_CORREIO 
ADD (UNFC_TX_DNE VARCHAR2(2) NOT NULL);
COMMENT ON COLUMN MODRED.UNIDADE_FEDERATIVA_CORREIO.UNFC_ID IS 'Identificador do registro';
COMMENT ON COLUMN MODRED.UNIDADE_FEDERATIVA_CORREIO.UNFC_TX_DNE IS 'Chave da UF no DNE';

ALTER TABLE MODRED.LOCALIDADE_CORREIO 
ADD (LOCC_TX_DNE VARCHAR2(8) NOT NULL);
COMMENT ON COLUMN MODRED.LOCALIDADE_CORREIO.LOCC_ID IS 'Identificador do Registro';
COMMENT ON COLUMN MODRED.LOCALIDADE_CORREIO.LOCC_TX_DNE IS 'Chave da Localidade no DNE';

ALTER TABLE MODRED.BAIRRO_CORREIO 
ADD (BACO_TX_DNE VARCHAR2(8) NOT NULL);
COMMENT ON COLUMN MODRED.BAIRRO_CORREIO.BACO_ID IS 'Identificador do registro';
COMMENT ON COLUMN MODRED.BAIRRO_CORREIO.BACO_TX_DNE IS 'Chave do Bairro no DNE';

ALTER TABLE MODRED.LOGRADOURO_CORREIO RENAME COLUMN LOGC_NR_CHAVE_DNE TO LOGC_TX_CHAVE_DNE;
ALTER TABLE MODRED.LOGRADOURO_CORREIO  
MODIFY (LOGC_TX_CHAVE_DNE VARCHAR2(8) NOT NULL);
ALTER TABLE MODRED.LOGRADOURO_CORREIO  
MODIFY (TILC_ID NULL);
  
-- Fim Alteração para a sprint 4 estoria 1.4 --  
