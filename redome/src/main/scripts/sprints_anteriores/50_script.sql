CREATE TABLE MODRED.REGISTRO_TIPO_OCORRENCIA 
(
  RETO_ID NUMBER NOT NULL 
, RETO_TX_DESCRICAO VARCHAR2(100) 
, CONSTRAINT PK_RETO PRIMARY KEY 
  (
    RETO_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_RETO ON REGISTRO_TIPO_OCORRENCIA (RETO_ID ASC) 
  )
  ENABLE 
);
COMMENT ON TABLE REGISTRO_TIPO_OCORRENCIA IS 'Dominio dos tipos de ocorrência de registros telefonicos ';
COMMENT ON COLUMN REGISTRO_TIPO_OCORRENCIA.RETO_ID IS 'Identificação do tipo de registro de ocorrencia';
COMMENT ON COLUMN REGISTRO_TIPO_OCORRENCIA.RETO_TX_DESCRICAO IS 'Nome do tipo de registro';



CREATE TABLE MODRED.REGISTRO_CONTATO 
(
  REGO_ID NUMBER NOT NULL 
, PECO_ID NUMBER NOT NULL 
, COTE_ID NUMBER NOT NULL 
, RETO_ID NUMBER NOT NULL 
, REGO_DT_MOMENTO_CONTATO TIMESTAMP(6) NOT NULL 
, USUA_ID NUMBER NOT NULL 
, REGO_TX_OBSERVACAO VARCHAR2(255 BYTE) 
, CONSTRAINT PK_REGO PRIMARY KEY 
  (
    REGO_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX IN_PK_REGO ON REGISTRO_CONTATO (REGO_ID ASC) 
  )
  ENABLE 
);

CREATE INDEX IN_FK_REGO_RETO ON MODRED.REGISTRO_CONTATO (RETO_ID);

CREATE INDEX IN_FK_REGO_COTE ON MODRED.REGISTRO_CONTATO (COTE_ID ASC);

CREATE INDEX IN_FK_REGO_PECO ON MODRED.REGISTRO_CONTATO (PECO_ID ASC);

CREATE INDEX IN_FK_REGO_RETO ON MODRED.REGISTRO_CONTATO (RETO_ID);

CREATE INDEX IN_FK_REGO_USUA ON MODRED.REGISTRO_CONTATO (USUA_ID ASC);

ALTER TABLE MODRED.REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_RETO FOREIGN KEY
(
  REGO_ID 
)
REFERENCES REGISTRO_TIPO_OCORRENCIA
(
  RETO_ID 
)
ENABLE;

ALTER TABLE MODRED.REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_COTE FOREIGN KEY
(
  COTE_ID 
)
REFERENCES CONTATO_TELEFONICO
(
  COTE_ID 
)
ENABLE;

ALTER TABLE MODRED.REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_PECO FOREIGN KEY
(
  PECO_ID 
)
REFERENCES PEDIDO_CONTATO
(
  PECO_ID 
)
ENABLE;

ALTER TABLE MODRED.REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_RETO FOREIGN KEY
(
  REGO_ID 
)
REFERENCES REGISTRO_TIPO_OCORRENCIA
(
  RETO_ID 
)
ENABLE;

ALTER TABLE MODRED.REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_USUA FOREIGN KEY
(
  USUA_ID 
)
REFERENCES USUARIO
(
  USUA_ID 
)
ENABLE;

COMMENT ON TABLE MODRED.REGISTRO_CONTATO IS 'REgistros dos contato telefônicos realizados para doadores';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.REGO_ID IS 'Identificação do registro de contato
';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.PECO_ID IS 'Identificação do pedido de contato';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.COTE_ID IS 'Telefone ao qual houve o contato';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.RETO_ID IS 'Tipo de ocorrencia ';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.REGO_DT_MOMENTO_CONTATO IS 'Comento em que foi realizado o contato com o doador
';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.USUA_ID IS 'Identificação do usuário que realizou o contato';

COMMENT ON COLUMN MODRED.REGISTRO_CONTATO.REGO_TX_OBSERVACAO IS 'Texto descritivo com as possiveis observacoes sobre o contato realizado';


CREATE SEQUENCE MODRED.SQ_REGO_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 order;
CREATE SEQUENCE MODRED.SQ_RETO_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 order;

--############# ERGOMES - ALTERAÇÕES TABELA TIPO_TAREFA E TAREFA #############
UPDATE TIPO_TAREFA SET TITA_NR_TEMPO_EXECUCAO = 3600, TARE_IN_SOMENTE_AGRUPADOR = 0 WHERE TITA_ID = 92;
UPDATE TAREFA SET TITA_ID = 92 WHERE TITA_ID = 10 OR TITA_ID = 11;
DELETE FROM TIPO_TAREFA WHERE TITA_ID = 10 OR TITA_ID = 11; 
COMMIT;
--############################################################################

--############# ERGOMES - ALTERAÇÃO E CRIAÇÃO DAS CONFIGURAÇÕES ##############
UPDATE CONFIGURACAO SET CONF_ID = 'tempoMaximoEnriquecimentoEmDiasFase2', CONF_TX_DESCRICAO = 'Tempo máximo da atualização do enriquecimento em dias da Fase2.' 
WHERE CONF_ID = 'tempoMaximoEnriquecimentoEmDias';
INSERT INTO CONFIGURACAO VALUES ('tempoMaximoEnriquecimentoEmDiasFase3',60,'Tempo máximo da atualização do enriquecimento em dias da Fase3.');
COMMIT;
--############################################################################




INSERT INTO "MODRED"."REGISTRO_TIPO_OCORRENCIA" (RETO_ID, RETO_TX_DESCRICAO) VALUES ('1', 'Não Atendeu');
INSERT INTO "MODRED"."REGISTRO_TIPO_OCORRENCIA" (RETO_ID, RETO_TX_DESCRICAO) VALUES ('2', 'Atendeu Terceiros');
INSERT INTO "MODRED"."REGISTRO_TIPO_OCORRENCIA" (RETO_ID, RETO_TX_DESCRICAO) VALUES ('3', 'Atendeu Doador');
commit


INSERT INTO PERMISSAO (RECU_ID, PERF_ID, PERM_IN_COM_RESTRICAO)VALUES(24, 3, 0);
COMMIT



ALTER TABLE REGISTRO_CONTATO 
DROP CONSTRAINT FK_REGO_RETO;

ALTER TABLE REGISTRO_CONTATO
ADD CONSTRAINT FK_REGO_RETO FOREIGN KEY
(
  RETO_ID 
)
REFERENCES REGISTRO_TIPO_OCORRENCIA
(
  RETO_ID 
)
ENABLE;


DROP INDEX MODRED.IN_FK_TECD_COTE;

DROP INDEX MODRED.IN_FK_TECD_RETC;

ALTER TABLE MODRED.TENTATIVA_CONTATO_DOADOR 
DROP CONSTRAINT FK_TECD_COTE;

ALTER TABLE MODRED.TENTATIVA_CONTATO_DOADOR 
DROP CONSTRAINT FK_TECD_RETC;

ALTER TABLE MODRED.TENTATIVA_CONTATO_DOADOR 
DROP COLUMN RETC_ID;

ALTER TABLE MODRED.TENTATIVA_CONTATO_DOADOR 
DROP COLUMN COTE_ID;

ALTER TABLE MODRED.TENTATIVA_CONTATO_DOADOR 
DROP COLUMN TECD_DT_REALIZACAO_CONTATO;

ALTER TABLE TENTATIVA_CONTATO_DOADOR 
ADD (TECD_IN_FINALIZADA NUMBER );

COMMENT ON COLUMN TENTATIVA_CONTATO_DOADOR.TECD_IN_FINALIZADA IS 'Flag que informa se a tentatia foi finalizada.';

DROP TABLE MODRED.RESPOSTA_TENTATIVA_CONTATO;

DROP SEQUENCE MODRED.SQ_RETC_ID;


ALTER TABLE TENTATIVA_CONTATO_DOADOR 
ADD (COTE_ID NUMBER );

CREATE INDEX IN_FK_TECD_COTE ON TENTATIVA_CONTATO_DOADOR (COTE_ID);

ALTER TABLE TENTATIVA_CONTATO_DOADOR
ADD CONSTRAINT FK_TECD_COTE FOREIGN KEY
(
  COTE_ID 
)
REFERENCES CONTATO_TELEFONICO
(
  COTE_ID 
)
ENABLE;

COMMENT ON COLUMN TENTATIVA_CONTATO_DOADOR.COTE_ID IS 'Identificador do contato telefonico do doador caso essa tentativa seja agendada.';

