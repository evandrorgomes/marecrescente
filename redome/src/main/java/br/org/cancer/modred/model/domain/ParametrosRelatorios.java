package br.org.cancer.modred.model.domain;

import br.org.cancer.modred.exception.BusinessException;

/**
 * Enum para os c贸digos dos relatorios.
 * 
 * @author Fillipe Queiroz
 *
 */
public enum ParametrosRelatorios {

	NOME_PACIENTE("NOME_PACIENTE"),
	DATA_ATUAL("DATA_ATUAL"),
	DATA_ATUAL_POR_EXTENSO("DATA_ATUAL_POR_EXTENSO"),
	DATA_NASCIMENTO_PACIENTE("DATA_NASCIMENTO_PACIENTE"),
	RMR("RMR"),
	CIDADE_PACIENTE("CIDADE_PACIENTE"),
	UF_PACIENTE("UF_PACIENTE"),
	RACA_PACIENTE("RACA_PACIENTE"),
	DIAGNOSTICO_PACIENTE("DIAGNOSTICO_PACIENTE"),
	NOME_MEDICO("NOME_MEDICO"),
	TIPO_AMOSTRA("TIPO_AMOSTRA"),
	INSTRUCAO_COLETA("INSTRUCAO_COLETA"),
	LOGRADOURO_ENDERECO_LABORATORIO("LOGRADOURO_ENDERECO_LABORATORIO"),
	NUMERO_ENDERECO_LABORATORIO("NUMERO_ENDERECO_LABORATORIO"),
	COMPLEMENTO_ENDERECO_LABORATORIO("COMPLEMENTO_ENDERECO_LABORATORIO"),
	BAIRRO_ENDERECO_LOGRADOURO("BAIRRO_ENDERECO_LOGRADOURO"),
	MUNICIPIO_ENDERECO_LABORATORIO("MUNICIPIO_ENDERECO_LABORATORIO"),
	UF_ENDERECO_LABORATORIO("UF_ENDERECO_LABORATORIO"),
	CEP_ENDERECO_LABORATORIO("CEP_ENDERECO_LABORATORIO"),
	CONTATO_LABORATORIO("CONTATO_LABORATORIO"),
	INICIAIS_NOME_PACIENTE("INICIAIS_NOME_PACIENTE"),
	LOGRADOURO_PACIENTE("LOGRADOURO_PACIENTE"),
	NUMERO_PACIENTE("NUMERO_PACIENTE"),
	COMPLEMENTO_PACIENTE("COMPLEMENTO_PACIENTE"),
	BAIRRO_PACIENTE("BAIRRO_PACIENTE"),
	CEP_PACIENTE("CEP_PACIENTE"), 
	NOME_LABORATORIO("NOME_LABORATORIO"),
	MARCACAO_CELULA_TRONCO_SANGUE_PERIFERICO("SP"),
	MARCACAO_CELULA_TRONCO_MEDULA_OSSEA("MO"),
	IDENTIFICADOR_DOADOR_INTERNACIONAL("IDENTIFICADOR_DOADOR_INTERNACIONAL"),
	NOME_CENTRO_TRANSPLANTE("NOME_CENTRO_TRANSPLANTE"),
	LOGRADOURO_ENDERECO_LOCAL_ENTREGA("LOGRADOURO_ENDERECO_LOCAL_ENTREGA"),
	NUMERO_ENDERECO_LOCAL_ENTREGA("NUMERO_ENDERECO_LOCAL_ENTREGA"),
	COMPLEMENTO_ENDERECO_LOCAL_ENTREGA("COMPLEMENTO_ENDERECO_LOCAL_ENTREGA"),
	BAIRRO_ENDERECO_LOCAL_ENTREGA("BAIRRO_ENDERECO_LOCAL_ENTREGA"),
	MUNICIPIO_ENDERECO_LOCAL_ENTREGA("MUNICIPIO_ENDERECO_LOCAL_ENTREGA"),
	UF_ENDERECO_LOCAL_ENTREGA("UF_ENDERECO_LOCAL_ENTREGA"),
	CEP_ENDERECO_LOCAL_ENTREGA("CEP_ENDERECO_LOCAL_ENTREGA"),
	PAIS_ENDERECO_LOCAL_ENTREGA("PAIS_ENDERECO_LOCAL_ENTREGA"),
	
	LOCAL_RETIRADA("LOCAL_RETIRADA"),
	RUA_ENDERECO_LOCAL_RETIRADA("RUA_ENDERECO_LOCAL_RETIRADA"),
	MUNICIPIO_ENDERECO_LOCAL_RETIRADA("MUNICIPIO_ENDERECO_LOCAL_RETIRADA"),
	UF_ENDERECO_LOCAL_RETIRADA("UF_ENDERECO_LOCAL_RETIRADA"),
	PAIS_ENDERECO_LOCAL_RETIRADA("PAIS_ENDERECO_LOCAL_RETIRADA"),
	TELEFONE_CONTATO_LOCAL_RETIRADA("TELEFONE_CONTATO_LOCAL_RETIRADA"),
	
	IDENTIFICADOR_DOADOR_LOGISTICA("IDENTIFICADOR_DOADOR_LOGISTICA"),
	
	CARTAO_SUS_PACIENTE("CARTAO_SUS_PACIENTE"),
	HAWB("HAWB"),
	NOME_COURIER_INTERNACIONAL("NOME_COURIER_INTERNACIONAL"),
	PASSAPORTE_COURIER_INTERNACIONAL("PASSAPORTE_COURIER_INTERNACIONAL"),
	
	NOME_USUARIO("NOME_USUARIO"),
	LOGIN_USUARIO("LOGIN_USUARIO"),
	SENHA_USUARIO("SENHA_USUARIO"),
	DATA_COLETA("DATA_COLETA"),
	
	PRESIDENTE_ANVISA("PRESIDENTE_ANVISA"),
	DATA_EMBARQUE_EXTENSO("DATA_EMBARQUE_EXTENSO"),
	DATA_CHEGADA_EXTENSO("DATA_CHEGADA_EXTENSO"),
	DATA_COLETA_EXTENSO("DATA_COLETA_EXTENSO"),
	PRODUTO("PRODUTO"),
	MEDICO_PRESCRICAO("MEDICO_PRESCRICAO");
	
	String codigo;

	ParametrosRelatorios(String codigo) {
		this.codigo = codigo;
	}

	/**
	 * @return the codigo
	 */
	public String getCodigo() {
		return "&amp;" + codigo + "&amp;";
	}

	/**
	 * Retorna o enum de acordo com o c贸digo informado.
	 * 
	 * @param codigo c贸digo a ser pesquisado na lista de enums.
	 * @return o enum relacionado ao c贸digo.
	 */
	public static ParametrosRelatorios get(String codigo) {
		for (ParametrosRelatorios status : values()) {
			if (status.equals(codigo)) {
				return status;
			}
		}
		throw new BusinessException("erro.interno");
	}

}
