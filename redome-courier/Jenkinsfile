pipeline {
    agent any
    
    environment {
      DOCKER_REGISTRY = "sr-vmlxapp26.inca.local:5000" 
      IMAGE_NAME = "${DOCKER_REGISTRY}/redome-courier:${BUILD_NUMBER}_${BUILD_TIMESTAMP}"      
    }
    
    stages {
        stage('Build and install RedomeLib') {
	       steps {
	          sh(returnStdout: true, script: '''#!/bin/bash
            		if [ -d "redome-feign-client" ];then
            			cd redome-feign-client
            		else	
            			mkdir redome-feign-client
            			cd redome-feign-client
            		fi
        		'''.stripIndent())
/**	          sh 'if [ -d redome-feign-client ]; then cd redome-feign-client else mkdir redome-feign-client fi'
	          sh 'cd redome-feign-client' */
	          git branch: 'develop', credentialsId: 'git-redome-feign-client', poll: false, url: 'https://us-south.git.cloud.ibm.com/sheila.prado/redome-feign-client.git'
			  sh 'mvn -f pom.xml -B package -Dmaven.test.skip=true'
              sh 'mvn install:install-file -Dfile=target/redome-feign-client-0.0.1.jar -DgroupId=br.org.cancer.redome -DartifactId=redome-feign-client -Dversion=0.0.1 -Dpackaging=jar'
              sh 'cd ..'
	       }             
	    }
	    stage('Fetch project') {
	       steps {
	          git branch: 'develop', changelog: false, credentialsId: 'git-redome-courier', poll: false, url: 'https://us-south.git.cloud.ibm.com/sheila.prado/redome-courier.git'
	       }
	    }	    
	    stage('install ojdbc in local maven repository') {
	       steps {
	          sh 'mvn install:install-file -Dfile=lib/ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0 -Dpackaging=jar'
	       }             
	    }
	    stage('Unit Test') {
	       steps {
              sh 'mvn test'
	       }             
	    }
	    stage('Build Project') {
	       steps {
	          sh 'mvn -f pom.xml package -Dmaven.test.skip'	          
	       }      
	    }
	    stage('Build Image and Push') {	       
	       steps {
	          sh 'docker build -t ${IMAGE_NAME} .'
	          sh 'docker push ${IMAGE_NAME}'	          
	       }
	    }
	    stage('deploy') {
	       steps {
	          withKubeConfig([credentialsId: 'inca-dev']) {
                /**  sh 'kubectl version --insecure-skip-tls-verify' */
                
                sh """ cat <<EOF > deployment.yaml   
apiVersion: v1
kind: Service
metadata:
  name: redome-courier-svc
  namespace: hml
spec:
  type: NodePort
  selector:
    app: redome-courier
    namespace: hml
  ports:
    - protocol: TCP
      port: 9005
      targetPort: 9005
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redome-courier-deployment
  namespace: hml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redome-courier
      namespace: hml
  template:
    metadata:
      labels:
        app: redome-courier
        namespace: hml
    spec:
       hostname: redome-courier
       subdomain: redome-courier-svc          
       containers:
       -  name: redome-courier
          image: $IMAGE_NAME
          env:
          -  name: profile
             value: hml
          resources:
            requests:
              cpu: "100m"
              memory: "768Mi"
            limits:
              cpu: "100m"
              memory: "1536Mi"
          volumeMounts:
          - mountPath: "/logs"
            name: apilog      
       volumes:
         - name: apilog
           persistentVolumeClaim:
             claimName: inca-pvc
                """
            sh 'kubectl apply --insecure-skip-tls-verify -n hml -f deployment.yaml'
              }
	       }
	    }
	}
	post {
	  always {
	    junit skipPublishingChecks: true, testResults: 'target/surefire-reports/*.xml'
	  }
	}
}


